/!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
<Leader>b	vim/.vim/bundle/command-t/plugin/command-t.vim	/^  nmap <unique> <Leader>b <Plug>(CommandTBuffer)$/;"	m
<Leader>j	vim/.vim/bundle/command-t/plugin/command-t.vim	/^    nmap <unique> <Leader>j <Plug>(CommandTJump)$/;"	m
<Leader>t	vim/.vim/bundle/command-t/plugin/command-t.vim	/^  nmap <unique> <Leader>t <Plug>(CommandT)$/;"	m
<Plug>(CommandT)	vim/.vim/bundle/command-t/plugin/command-t.vim	/^nnoremap <silent> <Plug>(CommandT) :CommandT<CR>$/;"	m
<Plug>(CommandTBuffer)	vim/.vim/bundle/command-t/plugin/command-t.vim	/^nnoremap <silent> <Plug>(CommandTBuffer) :CommandTBuffer<CR>$/;"	m
<Plug>(CommandTJump)	vim/.vim/bundle/command-t/plugin/command-t.vim	/^  nnoremap <silent> <Plug>(CommandTJump) :CommandTJump<CR>$/;"	m
<Plug>DashGlobalSearch	vim/.vim/bundle/dash.vim/plugin/dash.vim	/^  noremap <script> <unique> <Plug>DashGlobalSearch <SID>DashGlobalSearch$/;"	m
<Plug>DashSearch	vim/.vim/bundle/dash.vim/plugin/dash.vim	/^  noremap <script> <unique> <Plug>DashSearch <SID>DashSearch$/;"	m
<Plug>SparkupExecute	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.vim	/^inoremap <buffer> <Plug>SparkupExecute <c-g>u<Esc>:call <SID>Sparkup()<cr>$/;"	m
<Plug>SparkupExecute	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.vim	/^inoremap <buffer> <Plug>SparkupExecute <c-g>u<Esc>:call <SID>Sparkup()<cr>$/;"	m
<Plug>SparkupExecute	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.vim	/^inoremap <buffer> <Plug>SparkupExecute <c-g>u<Esc>:call <SID>Sparkup()<cr>$/;"	m
<Plug>SparkupExecute	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.vim	/^inoremap <buffer> <Plug>SparkupExecute <c-g>u<Esc>:call <SID>Sparkup()<cr>$/;"	m
<Plug>SparkupExecute	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.vim	/^inoremap <buffer> <Plug>SparkupExecute <c-g>u<Esc>:call <SID>Sparkup()<cr>$/;"	m
<Plug>SparkupExecute	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.vim	/^inoremap <buffer> <Plug>SparkupExecute <c-g>u<Esc>:call <SID>Sparkup()<cr>$/;"	m
<Plug>SparkupExecute	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.vim	/^inoremap <buffer> <Plug>SparkupExecute <c-g>u<Esc>:call <SID>Sparkup()<cr>$/;"	m
<Plug>SparkupExecute	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.vim	/^inoremap <buffer> <Plug>SparkupExecute <c-g>u<Esc>:call <SID>Sparkup()<cr>$/;"	m
<Plug>SparkupNext	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.vim	/^inoremap <buffer> <Plug>SparkupNext    <c-g>u<Esc>:call <SID>SparkupNext()<cr>$/;"	m
<Plug>SparkupNext	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.vim	/^inoremap <buffer> <Plug>SparkupNext    <c-g>u<Esc>:call <SID>SparkupNext()<cr>$/;"	m
<Plug>SparkupNext	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.vim	/^inoremap <buffer> <Plug>SparkupNext    <c-g>u<Esc>:call <SID>SparkupNext()<cr>$/;"	m
<Plug>SparkupNext	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.vim	/^inoremap <buffer> <Plug>SparkupNext    <c-g>u<Esc>:call <SID>SparkupNext()<cr>$/;"	m
<Plug>SparkupNext	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.vim	/^inoremap <buffer> <Plug>SparkupNext    <c-g>u<Esc>:call <SID>SparkupNext()<cr>$/;"	m
<Plug>SparkupNext	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.vim	/^inoremap <buffer> <Plug>SparkupNext    <c-g>u<Esc>:call <SID>SparkupNext()<cr>$/;"	m
<Plug>SparkupNext	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.vim	/^inoremap <buffer> <Plug>SparkupNext    <c-g>u<Esc>:call <SID>SparkupNext()<cr>$/;"	m
<Plug>SparkupNext	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.vim	/^inoremap <buffer> <Plug>SparkupNext    <c-g>u<Esc>:call <SID>SparkupNext()<cr>$/;"	m
<SID>:	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>DashGlobalSearch	vim/.vim/bundle/dash.vim/plugin/dash.vim	/^  noremap <SID>DashGlobalSearch :Dash!<CR>$/;"	m
<SID>DashSearch	vim/.vim/bundle/dash.vim/plugin/dash.vim	/^  noremap <SID>DashSearch :Dash<CR>$/;"	m
<SID>xx	vim/.vim/plugin/taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
<leader>r	vim/.vim/bundle/vim_file_chooser.vim	/^nnoremap <leader>r :<C-U>RangerChooser<CR>$/;"	m
ACTION	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^ACTION = vroom.Specification($/;"	v
ActionLine	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^def ActionLine(line):$/;"	f
ActionLogger	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^class ActionLogger(Logger):$/;"	c
AppLog	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptdef.rb	/^    class AppLog$/;"	c	class:VimScriptDef
AppLog	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptuploader.rb	/^    class AppLog$/;"	c	class:VimScriptUploader
Ask	vim/.vim/bundle/command-t/vendor/vroom/vroom/neovim_mod.py	/^  def Ask(self, expression):$/;"	m	class:Communicator
Ask	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def Ask(self, expression):$/;"	m	class:Communicator
Asyncer	vim/.vim/bundle/L9/autoload/l9/async.py	/^class Asyncer:$/;"	c
BLACK	vim/.vim/bundle/command-t/vendor/vroom/vroom/color.py	/^  BLACK = subprocess.check_output(['tput', 'setaf', '8']).decode('utf-8')$/;"	v
BLANK_LINE_CLEAR_COMBO	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^BLANK_LINE_CLEAR_COMBO = 3$/;"	v
BLUE	vim/.vim/bundle/command-t/vendor/vroom/vroom/color.py	/^  BLUE = subprocess.check_output(['tput', 'setaf', '4']).decode('utf-8')$/;"	v
BOLD	vim/.vim/bundle/command-t/vendor/vroom/vroom/color.py	/^  BOLD = subprocess.check_output(['tput', 'bold']).decode('utf-8')$/;"	v
BUFFER	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^    BUFFER='buffer',$/;"	v
BUFFER_NUMBER	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^    BUFFER_NUMBER=re.compile(r'^(\\d+)$'),$/;"	v
BUFFER_OPTIONS	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^BUFFER_OPTIONS = (vroom.controls.OPTION.BUFFER,)$/;"	v
BadOutput	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^class BadOutput(vroom.test.Failure):$/;"	c
Begin	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def Begin(self, lines):$/;"	m	class:Writer
Blame	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
Browse	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufReadIndex	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex() abort$/;"	f
BufReadIndexFile	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile() abort$/;"	f
BufReadObject	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject() abort$/;"	f
BufWriteIndexFile	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile() abort$/;"	f
BufferFinder	vim/.vim/bundle/command-t/ruby/command-t/finder/buffer_finder.rb	/^    class BufferFinder < Finder$/;"	c	class:CommandT.Finder
BufferScanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/buffer_scanner.rb	/^    class BufferScanner < Scanner$/;"	c	class:CommandT.Scanner
BufferWord	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^def BufferWord(word):$/;"	f
Bundle	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=+                                                Bundle        call vundle#config#bundle(<args>)$/;"	c
BundleClean	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang                                          BundleClean   PluginClean<bang>$/;"	c
BundleDocs	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0                                                BundleDocs    PluginDocs$/;"	c
BundleInstall	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete BundleInstall PluginInstall<bang> <args>$/;"	c
BundleList	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0 -bang                                          BundleList    PluginList<bang>$/;"	c
BundleSearch	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete BundleSearch  PluginSearch<bang> <args>$/;"	c
BundleUpdate	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com!                                                         BundleUpdate  PluginInstall!$/;"	c
CHILD	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    CHILD = 4$/;"	v	class:Token
CHILD	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    CHILD = 4$/;"	v	class:Token
CHILD	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    CHILD = 4$/;"	v	class:Token
CHILD	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    CHILD = 4$/;"	v	class:Token
CHILD	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    CHILD = 4$/;"	v	class:Token
CHILD	vim/.vim/bundle/sparkup/sparkup.py	/^    CHILD = 4$/;"	v	class:Token
CHILD	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    CHILD = 4$/;"	v	class:Token
CHILD	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    CHILD = 4$/;"	v	class:Token
CHILD	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    CHILD = 4$/;"	v	class:Token
CHILD	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    CHILD = 4$/;"	v	class:Token
CLEAR	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^    CLEAR='clear',$/;"	v
COLORED	vim/.vim/bundle/command-t/vendor/vroom/vroom/color.py	/^  COLORED = False$/;"	v
COLORED	vim/.vim/bundle/command-t/vendor/vroom/vroom/color.py	/^  COLORED = True$/;"	v
COLORS	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^COLORS = {$/;"	v
COMMAND	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^    COMMAND='command',$/;"	v
COMMAND	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^    COMMAND='command',$/;"	v
COMMENT	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^    COMMENT='comment',$/;"	v
CONFIGFILE	vim/.vim/bundle/command-t/vendor/vroom/vroom/neovim_mod.py	/^from vroom.vim import CONFIGFILE, VimscriptString$/;"	i
CONTEXT	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^  CONTEXT = 12$/;"	v	class:MessageFailure
CONTEXT	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^  CONTEXT = 12$/;"	v	class:FakeShellFailure
CONTINUATION	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^    CONTINUATION='continuation',$/;"	v
CONTROL	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^CONTROL = vroom.Specification($/;"	v
CONTROLLED_LINE_TYPES	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^CONTROLLED_LINE_TYPES = {$/;"	v
CONTROL_BLOCK	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^    CONTROL_BLOCK=re.compile(r'(  .*) \\(\\s*([\\w\\d.+,$ ]*)\\s*\\)$'),$/;"	v
CONTROL_FILENAME_VAR	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^CONTROL_FILENAME_VAR = 'VROOM_SHELL_CONTROLLFILE'$/;"	v
CURRENT_LINE	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^    CURRENT_LINE='.')$/;"	v
Clear	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def Clear(self):$/;"	m	class:Communicator
Close	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^def Close(args):$/;"	f
Colored	vim/.vim/bundle/command-t/vendor/vroom/vroom/color.py	/^def Colored(text, *escapes):$/;"	f
Colorless	vim/.vim/bundle/command-t/vendor/vroom/vroom/color.py	/^def Colorless(text, *escapes):  # pylint: disable-msg=unused-argument$/;"	f
Command	vim/.vim/bundle/command-t/vendor/vroom/vroom/command.py	/^class Command(object):$/;"	c
CommandLogger	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^class CommandLogger(Logger):$/;"	c
CommandT	vim/.vim/bundle/command-t/plugin/command-t.vim	/^command! -nargs=? -complete=dir CommandT call commandt#FileFinder(<q-args>)$/;"	c
CommandT	vim/.vim/bundle/command-t/ruby/command-t.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/extconf.rb	/^    module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/finder.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/finder/buffer_finder.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/finder/file_finder.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/finder/jump_finder.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/finder/mru_buffer_finder.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/finder/tag_finder.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/metadata/fallback.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/mru.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/path_utilities.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/prompt.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/scanner.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/scanner/buffer_scanner.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/find_file_scanner.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/git_file_scanner.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/ruby_file_scanner.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/watchman_file_scanner.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/scanner/jump_scanner.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/scanner/mru_buffer_scanner.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/scanner/tag_scanner.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/scm_utilities.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/settings.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/stub.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/util.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/vim.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/vim/screen.rb	/^module CommandT$/;"	m
CommandT	vim/.vim/bundle/command-t/ruby/command-t/vim/window.rb	/^module CommandT$/;"	m
CommandTBuffer	vim/.vim/bundle/command-t/plugin/command-t.vim	/^command! CommandTBuffer call commandt#BufferFinder()$/;"	c
CommandTFlush	vim/.vim/bundle/command-t/plugin/command-t.vim	/^command! CommandTFlush call commandt#Flush()$/;"	c
CommandTJump	vim/.vim/bundle/command-t/plugin/command-t.vim	/^command! CommandTJump call commandt#JumpFinder()$/;"	c
CommandTLoad	vim/.vim/bundle/command-t/plugin/command-t.vim	/^command! CommandTLoad call commandt#Load()$/;"	c
CommandTMRU	vim/.vim/bundle/command-t/plugin/command-t.vim	/^command! CommandTMRU call commandt#MRUFinder()$/;"	c
CommandTMRUBuffer	vim/.vim/bundle/command-t/autoload/commandt.vim	/^augroup CommandTMRUBuffer$/;"	a
CommandTMatcher_initialize	vim/.vim/bundle/command-t/ruby/command-t/matcher.c	/^VALUE CommandTMatcher_initialize(int argc, VALUE *argv, VALUE self)$/;"	f
CommandTMatcher_sorted_matches_for	vim/.vim/bundle/command-t/ruby/command-t/matcher.c	/^VALUE CommandTMatcher_sorted_matches_for(int argc, VALUE *argv, VALUE self)$/;"	f
CommandTTag	vim/.vim/bundle/command-t/plugin/command-t.vim	/^command! CommandTTag call commandt#TagFinder()$/;"	c
CommandTWatchmanUtils_dump	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^VALUE CommandTWatchmanUtils_dump(VALUE self, VALUE serializable) {$/;"	f
CommandTWatchmanUtils_load	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^VALUE CommandTWatchmanUtils_load(VALUE self, VALUE serialized) {$/;"	f
CommandTWatchmanUtils_query	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^VALUE CommandTWatchmanUtils_query(VALUE self, VALUE query, VALUE socket) {$/;"	f
CommandT_option_from_hash	vim/.vim/bundle/command-t/ruby/command-t/ext.c	/^VALUE CommandT_option_from_hash(const char *option, VALUE hash)$/;"	f
Commit	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(args, ...) abort$/;"	f
CommitComplete	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
Communicate	vim/.vim/bundle/command-t/vendor/vroom/vroom/neovim_mod.py	/^  def Communicate(self, command, extra_delay=0):$/;"	m	class:Communicator
Communicate	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def Communicate(self, command, extra_delay=0):$/;"	m	class:Communicator
Communicator	vim/.vim/bundle/command-t/vendor/vroom/vroom/neovim_mod.py	/^class Communicator(VimCommunicator):$/;"	c
Communicator	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^class Communicator(object):$/;"	c
Communicator	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^class Communicator(object):$/;"	c
ConfigurationError	vim/.vim/bundle/command-t/vendor/vroom/vroom/__init__.py	/^class ConfigurationError(Exception):$/;"	c
Control	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^  def Control(self, hijacks):$/;"	m	class:Communicator
Controller	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^  class Controller$/;"	c	class:CommandT
Controls	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^  def Controls(options):$/;"	f	function:ActionLine
Crawl	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^def Crawl(directory, ignored):$/;"	f
DEFAULT_MODE	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^DEFAULT_MODE = MODE.VERBATIM$/;"	v
DEFAULT_MODE	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^DEFAULT_MODE = vroom.controls.MODE.VERBATIM$/;"	v
DEFAULT_MODE	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^DEFAULT_MODE = vroom.controls.MODE.REGEX$/;"	v
DELAY	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^    DELAY='delay',$/;"	v
DELAY	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^    DELAY=re.compile(r'^(\\d+(?:\\.\\d+)?)s?$'),$/;"	v
DELAY_OPTIONS	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^DELAY_OPTIONS = (vroom.controls.OPTION.DELAY,)$/;"	v
DESCRIPTION	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^  DESCRIPTION = 'Expected end of buffer.'$/;"	v	class:TooMuchOutput
DESCRIPTION	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^  DESCRIPTION = 'Output does not match expectation.'$/;"	v	class:BadOutput
DESCRIPTION	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^  DESCRIPTION = 'Unexpected end of buffer.'$/;"	v	class:NotEnoughOutput
DESCRIPTION	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^  DESCRIPTION = 'Expected message not received:\\n%(message)s'$/;"	v	class:MessageNotReceived
DESCRIPTION	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^  DESCRIPTION = 'Messaging failure.'$/;"	v	class:MessageFailure
DESCRIPTION	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^  DESCRIPTION = 'Suspected error message:\\n%(message)s'$/;"	v	class:SuspectedError
DESCRIPTION	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^  DESCRIPTION = 'Unexpected message:\\n%(message)s'$/;"	v	class:UnexpectedMessage
DESCRIPTION	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^  DESCRIPTION = 'Expected system call not received.'$/;"	v	class:SystemNotCalled
DESCRIPTION	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^  DESCRIPTION = 'Got no chance to inject response: \\n%s'$/;"	v	class:NoChanceForResponse
DESCRIPTION	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^  DESCRIPTION = 'System failure'$/;"	v	class:FakeShellFailure
DESCRIPTION	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^  DESCRIPTION = 'Unexpected system call.'$/;"	v	class:UnexpectedSystemCalls
DIRECTIVE	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^    DIRECTIVE='directive',$/;"	v
DIRECTIVE	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^DIRECTIVE = vroom.Specification($/;"	v
DIRECTIVE_PREFIX	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^DIRECTIVE_PREFIX = '  @'$/;"	v
Dash	vim/.vim/bundle/dash.vim/plugin/dash.vim	/^  command -bang -complete=customlist,dash#complete -nargs=* -count=1 Dash call dash#search("<bang>", <f-args>)$/;"	c
DashKeywords	vim/.vim/bundle/dash.vim/plugin/dash.vim	/^  command -complete=customlist,dash#complete -nargs=* DashKeywords call dash#keywords(<f-args>)$/;"	c
DelayWord	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^def DelayWord(word):$/;"	f
Dialect	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^class Dialect:$/;"	c
Dialect	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^class Dialect:$/;"	c
Dialect	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^class Dialect:$/;"	c
Dialect	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^class Dialect:$/;"	c
Dialect	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^class Dialect:$/;"	c
Dialect	vim/.vim/bundle/sparkup/sparkup.py	/^class Dialect:$/;"	c
Dialect	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^class Dialect:$/;"	c
Dialect	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^class Dialect:$/;"	c
Dialect	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^class Dialect:$/;"	c
Dialect	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^class Dialect:$/;"	c
Diff	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(vert,keepfocus,...) abort$/;"	f
DirComplete	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
DirectoryArg	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^class DirectoryArg(argparse.Action):$/;"	c
Dispatch	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Dispatch(bang, args)$/;"	f
DuplicatedControl	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^class DuplicatedControl(vroom.ParseError):$/;"	c
ELEMENT	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    ELEMENT = 2$/;"	v	class:Token
ELEMENT	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    ELEMENT = 2$/;"	v	class:Token
ELEMENT	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    ELEMENT = 2$/;"	v	class:Token
ELEMENT	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    ELEMENT = 2$/;"	v	class:Token
ELEMENT	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    ELEMENT = 2$/;"	v	class:Token
ELEMENT	vim/.vim/bundle/sparkup/sparkup.py	/^    ELEMENT = 2$/;"	v	class:Token
ELEMENT	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    ELEMENT = 2$/;"	v	class:Token
ELEMENT	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    ELEMENT = 2$/;"	v	class:Token
ELEMENT	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    ELEMENT = 2$/;"	v	class:Token
ELEMENT	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    ELEMENT = 2$/;"	v	class:Token
EMPTY	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  EMPTY = 'No commands were sent to vim during %(filename)s'$/;"	v	class:CommandLogger
EMPTY	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  EMPTY = 'No syscalls made by vim during %(filename)s'$/;"	v	class:SyscallLogger
EMPTY	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  EMPTY = 'There were no vim messages during %(filename)s'$/;"	v	class:MessageLogger
EMPTY	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  EMPTY = None$/;"	v	class:Logger
EMPTY_LINE_CHECK	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^EMPTY_LINE_CHECK = '  &'$/;"	v
END	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^    END='end',$/;"	v
ERROR	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^    ERROR='ERROR',$/;"	v
ERROR	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^    ERROR='error')$/;"	v
ERROR	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^    ERROR='error',$/;"	v
ERRORS	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^    ERRORS='GUESS-ERRORS')$/;"	v
ERROR_FILENAME_VAR	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^ERROR_FILENAME_VAR = 'VROOM_SHELL_ERRORFILE'$/;"	v
ERROR_GUESS	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^ERROR_GUESS = re.compile($/;"	v
ESCAPED_BLOCK	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^    ESCAPED_BLOCK=re.compile(r'(  .*) \\(&([^)]+)\\)$'))$/;"	v
EXPECT	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^    EXPECT='expect',$/;"	v
Edit	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
EditComplete	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditRunComplete	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
Element	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^class Element:$/;"	c
Element	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^class Element:$/;"	c
Element	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^class Element:$/;"	c
Element	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^class Element:$/;"	c
Element	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^class Element:$/;"	c
Element	vim/.vim/bundle/sparkup/sparkup.py	/^class Element:$/;"	c
Element	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^class Element:$/;"	c
Element	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^class Element:$/;"	c
Element	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^class Element:$/;"	c
Element	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^class Element:$/;"	c
EnsureAtEnd	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^  def EnsureAtEnd(self, buffer):  # pylint: disable-msg=redefined-builtin$/;"	m	class:Manager
Environment	vim/.vim/bundle/command-t/vendor/vroom/vroom/environment.py	/^class Environment(object):$/;"	c
Error	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def Error(self, result, error):$/;"	m	class:ActionLogger
ErrorBufferContext	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^def ErrorBufferContext(context, printer):$/;"	f
ErrorCommandContext	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^ErrorCommandContext = ErrorContextPrinter(  # pylint: disable-msg=g-bad-name$/;"	v
ErrorContextPrinter	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^def ErrorContextPrinter(header, empty, modifier=None, singleton=None):$/;"	f
ErrorLog	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^class ErrorLog(Log):$/;"	c
ErrorMessageContext	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^ErrorMessageContext = ErrorContextPrinter(  # pylint: disable-msg=g-bad-name$/;"	v
ErrorOnExit	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^class ErrorOnExit(Quit):$/;"	c
ErrorShellErrors	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^ErrorShellErrors = ErrorContextPrinter(  # pylint: disable-msg=g-bad-name$/;"	v
ErrorShellQueue	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^ErrorShellQueue = ErrorContextPrinter(  # pylint: disable-msg=g-bad-name$/;"	v
ErrorSystemCalls	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^ErrorSystemCalls = ErrorContextPrinter(  # pylint: disable-msg=g-bad-name$/;"	v
Exception	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def Exception(self, exctype, exception, tb):$/;"	m	class:ActionLogger
Execute	vim/.vim/bundle/command-t/vendor/vroom/vroom/command.py	/^  def Execute(self):$/;"	m	class:Command
ExecuteCommands	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^  def ExecuteCommands(self):$/;"	m	class:Vroom
ExecuteInTree	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
ExecutedUpTo	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def ExecutedUpTo(self, lineno):$/;"	m	class:ActionLogger
Executor	vim/.vim/bundle/L9/autoload/l9/async.py	/^class Executor:$/;"	c
Expand	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^def Expand(filename):$/;"	f
ExpectMessage	vim/.vim/bundle/command-t/vendor/vroom/vroom/command.py	/^  def ExpectMessage(self, message, mode):$/;"	m	class:Command
ExpectSyscall	vim/.vim/bundle/command-t/vendor/vroom/vroom/command.py	/^  def ExpectSyscall(self, syscall, mode):$/;"	m	class:Command
FAIL	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^    FAIL='FAIL')$/;"	v
FAILED	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^    FAILED='failed',$/;"	v
Failure	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^class Failure(Exception):$/;"	c
Failures	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^class Failures(Failure):$/;"	c
FakeShellFailure	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^class FakeShellFailure(vroom.test.Failure):$/;"	c
FakeShellNotWorking	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^class FakeShellNotWorking(Exception):$/;"	c
FileFinder	vim/.vim/bundle/command-t/ruby/command-t/finder/file_finder.rb	/^    class FileFinder < Finder$/;"	c	class:CommandT.Finder
FileRead	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead() abort$/;"	f
FileScanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner.rb	/^    class FileScanner < Scanner$/;"	c	class:CommandT.Scanner
FileScanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/find_file_scanner.rb	/^    class FileScanner$/;"	c	class:CommandT.Scanner
FileScanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/git_file_scanner.rb	/^    class FileScanner$/;"	c	class:CommandT.Scanner
FileScanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/ruby_file_scanner.rb	/^    class FileScanner$/;"	c	class:CommandT.Scanner
FileScanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/watchman_file_scanner.rb	/^    class FileScanner$/;"	c	class:CommandT.Scanner
Finalize	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def Finalize(self, queue):$/;"	m	class:Logger
Finalize	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def Finalize(self, queue):$/;"	m	class:SyscallLogger
FindFileScanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/find_file_scanner.rb	/^      class FindFileScanner < FileScanner$/;"	c	class:CommandT.Scanner.FileScanner
Finder	vim/.vim/bundle/command-t/ruby/command-t/finder.rb	/^  class Finder$/;"	c	class:CommandT
Finder	vim/.vim/bundle/command-t/ruby/command-t/finder/buffer_finder.rb	/^  class Finder$/;"	c	class:CommandT
Finder	vim/.vim/bundle/command-t/ruby/command-t/finder/file_finder.rb	/^  class Finder$/;"	c	class:CommandT
Finder	vim/.vim/bundle/command-t/ruby/command-t/finder/jump_finder.rb	/^  class Finder$/;"	c	class:CommandT
Finder	vim/.vim/bundle/command-t/ruby/command-t/finder/mru_buffer_finder.rb	/^  class Finder$/;"	c	class:CommandT
Finder	vim/.vim/bundle/command-t/ruby/command-t/finder/tag_finder.rb	/^  class Finder$/;"	c	class:CommandT
FinishCommit	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit() abort$/;"	f
GF	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GFInit	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GFInit(...) abort$/;"	f
GLOB	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^    GLOB='glob',$/;"	v
GREEN	vim/.vim/bundle/command-t/vendor/vroom/vroom/color.py	/^  GREEN = subprocess.check_output(['tput', 'setaf', '2']).decode('utf-8')$/;"	v
GetBufferLines	vim/.vim/bundle/command-t/vendor/vroom/vroom/neovim_mod.py	/^  def GetBufferLines(self, number):$/;"	m	class:Communicator
GetBufferLines	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def GetBufferLines(self, number):$/;"	m	class:Communicator
GetCommand	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^  def GetCommand(self):$/;"	m	class:Vroom
GetContext	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^  def GetContext(self):$/;"	m	class:Manager
GetCurrentLine	vim/.vim/bundle/command-t/vendor/vroom/vroom/neovim_mod.py	/^  def GetCurrentLine(self):$/;"	m	class:Communicator
GetCurrentLine	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def GetCurrentLine(self):$/;"	m	class:Communicator
GetFlattenedFailures	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^  def GetFlattenedFailures(self):$/;"	m	class:Failures
GetMessages	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def GetMessages(self):$/;"	m	class:Communicator
Git	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang, args) abort$/;"	f
GitComplete	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A, L, P) abort$/;"	f
GitFileScanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/git_file_scanner.rb	/^      class GitFileScanner < FindFileScanner$/;"	c	class:CommandT.Scanner.FileScanner
Grep	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
GuessNewMessages	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^def GuessNewMessages(old, new):$/;"	f
HEADER	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  HEADER = 'Commands sent to vim during %(filename)s'$/;"	v	class:CommandLogger
HEADER	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  HEADER = 'System call log during %(filename)s'$/;"	v	class:SyscallLogger
HEADER	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  HEADER = 'Vim messages during %(filename)s'$/;"	v	class:MessageLogger
HEADER	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  HEADER = None$/;"	v	class:Logger
HIJACK	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^    HIJACK='hijack',$/;"	v
HIJACK_OPTIONS	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^HIJACK_OPTIONS = (vroom.controls.OPTION.OUTPUT_CHANNEL,)$/;"	v
Hijack	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^class Hijack(object):$/;"	c
HtmlDialect	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^class HtmlDialect(Dialect):$/;"	c
HtmlDialect	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^class HtmlDialect(Dialect):$/;"	c
HtmlDialect	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^class HtmlDialect(Dialect):$/;"	c
HtmlDialect	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^class HtmlDialect(Dialect):$/;"	c
HtmlDialect	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^class HtmlDialect(Dialect):$/;"	c
HtmlDialect	vim/.vim/bundle/sparkup/sparkup.py	/^class HtmlDialect(Dialect):$/;"	c
HtmlDialect	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^class HtmlDialect(Dialect):$/;"	c
HtmlDialect	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^class HtmlDialect(Dialect):$/;"	c
HtmlDialect	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^class HtmlDialect(Dialect):$/;"	c
HtmlDialect	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^class HtmlDialect(Dialect):$/;"	c
INPUT	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^    INPUT='input',$/;"	v
IgnoredPaths	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^def IgnoredPaths(directory, skipped):$/;"	f
Init_ext	vim/.vim/bundle/command-t/ruby/command-t/ext.c	/^void Init_ext()$/;"	f
Insert	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  def Insert(key, val, word):$/;"	f	function:Parse
InvalidExpression	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^class InvalidExpression(Quit):$/;"	c
IsBad	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^def IsBad(result):$/;"	f
JumpFinder	vim/.vim/bundle/command-t/ruby/command-t/finder/jump_finder.rb	/^    class JumpFinder < Finder$/;"	c	class:CommandT.Finder
JumpInit	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit(...) abort$/;"	f
JumpScanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/jump_scanner.rb	/^    class JumpScanner < Scanner$/;"	c	class:CommandT.Scanner
Kill	vim/.vim/bundle/command-t/vendor/vroom/vroom/neovim_mod.py	/^  def Kill(self):$/;"	m	class:Communicator
Kill	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def Kill(self):$/;"	m	class:Communicator
L9Assert	vim/.vim/bundle/L9/plugin/l9.vim	/^  command -nargs=* L9Assert :$/;"	c
L9Assert	vim/.vim/bundle/L9/plugin/l9.vim	/^  command -nargs=* L9Assert call eval((<args>) ? 0 : s:handleFailedAssersion(<q-args>))$/;"	c
L9GrepBuffer	vim/.vim/bundle/L9/plugin/l9.vim	/^command -nargs=? L9GrepBuffer    call l9#grepBuffers(<q-args>, [bufnr('%')])$/;"	c
L9GrepBufferAll	vim/.vim/bundle/L9/plugin/l9.vim	/^command -nargs=? L9GrepBufferAll call l9#grepBuffers(<q-args>, range(1, bufnr('$')))$/;"	c
L9Timer	vim/.vim/bundle/L9/plugin/l9.vim	/^  command -nargs=1 L9Timer :$/;"	c
L9Timer	vim/.vim/bundle/L9/plugin/l9.vim	/^  command -nargs=1 L9Timer call s:timerBegin(<q-args>)$/;"	c
L9TimerDump	vim/.vim/bundle/L9/plugin/l9.vim	/^  command -nargs=0 L9TimerDump :$/;"	c
L9TimerDump	vim/.vim/bundle/L9/plugin/l9.vim	/^  command -nargs=0 L9TimerDump call s:timerDump()$/;"	c
L9TimerStop	vim/.vim/bundle/L9/plugin/l9.vim	/^  command -nargs=0 L9TimerStop :$/;"	c
L9TimerStop	vim/.vim/bundle/L9/plugin/l9.vim	/^  command -nargs=0 L9TimerStop call s:timerStop()$/;"	c
LOG	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^LOG = vroom.Specification($/;"	v
LOG_FILENAME_VAR	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^LOG_FILENAME_VAR = 'VROOM_SHELL_LOGFILE'$/;"	v
LineBreak	vim/.vim/bundle/command-t/vendor/vroom/vroom/command.py	/^  def LineBreak(self):$/;"	m	class:Command
Lineno	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def Lineno(self, lineno):$/;"	m	class:ActionLogger
Load	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^  def Load(self, buff):$/;"	m	class:Manager
Load	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^def Load(filename):$/;"	f
Log	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def Log(self, message):$/;"	m	class:Logger
Log	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def Log(self, result, lineno, error=None):$/;"	m	class:ActionLogger
Log	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^class Log(object):$/;"	c
Log	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd, line1, line2, ...) abort$/;"	f
Logger	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^class Logger(object):$/;"	c
Logs	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def Logs(self):$/;"	m	class:Logger
MATCHED	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^    MATCHED='matched',$/;"	v
MESSAGE	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^    MESSAGE='message',$/;"	v
MESSAGES	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^    MESSAGES='messages',$/;"	v
MESSAGE_STRICTNESS	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^    MESSAGE_STRICTNESS='messages',$/;"	v
MODE	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^    MODE='mode',$/;"	v
MODE	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^    MODE=re.compile(r'^(%s)$' % '|'.join(MODE.Values())),$/;"	v
MODE	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^MODE = vroom.Specification($/;"	v
MODE_OPTIONS	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^MODE_OPTIONS = (vroom.controls.OPTION.MODE,)$/;"	v
MRU	vim/.vim/bundle/command-t/ruby/command-t/mru.rb	/^  module MRU$/;"	m	class:CommandT
MRUBufferFinder	vim/.vim/bundle/command-t/ruby/command-t/finder/mru_buffer_finder.rb	/^    class MRUBufferFinder < BufferFinder$/;"	c	class:CommandT.Finder
MRUBufferScanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/mru_buffer_scanner.rb	/^    class MRUBufferScanner < BufferScanner$/;"	c	class:CommandT.Scanner
Manager	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^class Manager(object):$/;"	c
MatchWindow	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^  class MatchWindow$/;"	c	class:CommandT
Matched	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^class Matched(Log):$/;"	c
Matches	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^def Matches(request, mode, data):$/;"	f
Merge	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Merge(cmd, bang, args) abort$/;"	f
MessageFailure	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^class MessageFailure(vroom.test.Failure):$/;"	c
MessageLogger	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^class MessageLogger(Logger):$/;"	c
MessageNotReceived	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^class MessageNotReceived(MessageFailure):$/;"	c
MessageWord	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^def MessageWord(word):$/;"	f
Messenger	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^class Messenger(object):$/;"	c
Metadata	vim/.vim/bundle/command-t/ruby/command-t/extconf.rb	/^      module Metadata$/;"	m	class:CommandT
Metadata	vim/.vim/bundle/command-t/ruby/command-t/metadata/fallback.rb	/^  module Metadata$/;"	m	class:CommandT
ModeWord	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^def ModeWord(word):$/;"	f
Move	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination) abort$/;"	f
MoveComplete	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P) abort$/;"	f
NoChanceForResponse	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^class NoChanceForResponse(FakeShellFailure):$/;"	c
NoDisplay	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^class NoDisplay(Quit):$/;"	c
NoTestRunning	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^class NoTestRunning(ValueError):$/;"	c
NotEnoughOutput	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^class NotEnoughOutput(BadOutput):$/;"	c
OPTION	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^OPTION = vroom.Specification($/;"	v
OPTION_PARSERS	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^OPTION_PARSERS = {$/;"	v
OUTCHANNEL	vim/.vim/bundle/command-t/vendor/vroom/scripts/respond.vroomfaker	/^from vroom.shell import OUTCHANNEL$/;"	i
OUTCHANNEL	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^OUTCHANNEL = vroom.Specification($/;"	v
OUTPUT	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^    OUTPUT='output')$/;"	v
OUTPUT_CHANNEL	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^    OUTPUT_CHANNEL='channel')$/;"	v
OUTPUT_OPTIONS	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^OUTPUT_OPTIONS = ($/;"	v
Open	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def Open(self, lines):$/;"	m	class:ActionLogger
Options	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^class Options:$/;"	c
Options	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^class Options:$/;"	c
Options	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^class Options:$/;"	c
Options	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^class Options:$/;"	c
Options	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^class Options:$/;"	c
Options	vim/.vim/bundle/sparkup/sparkup.py	/^class Options:$/;"	c
Options	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^class Options:$/;"	c
Options	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^class Options:$/;"	c
Options	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^class Options:$/;"	c
Options	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^class Options:$/;"	c
Output	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def Output(self, writer):$/;"	m	class:Communicator
OutputChannelWord	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^def OutputChannelWord(word):$/;"	f
PARENT	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    PARENT = 8$/;"	v	class:Token
PARENT	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    PARENT = 8$/;"	v	class:Token
PARENT	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    PARENT = 8$/;"	v	class:Token
PARENT	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    PARENT = 8$/;"	v	class:Token
PARENT	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    PARENT = 8$/;"	v	class:Token
PARENT	vim/.vim/bundle/sparkup/sparkup.py	/^    PARENT = 8$/;"	v	class:Token
PARENT	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    PARENT = 8$/;"	v	class:Token
PARENT	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    PARENT = 8$/;"	v	class:Token
PARENT	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    PARENT = 8$/;"	v	class:Token
PARENT	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    PARENT = 8$/;"	v	class:Token
PASS	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^    PASS='pass',$/;"	v
PASS	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^    PASS='PASS',$/;"	v
PASSED	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^    PASSED='passed',$/;"	v
Parse	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^def Parse(lines):$/;"	f
Parse	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^def Parse(args):$/;"	f
Parse	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^def Parse(controls, *options):$/;"	f
ParseError	vim/.vim/bundle/command-t/vendor/vroom/vroom/__init__.py	/^class ParseError(Exception):$/;"	c
Parser	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^class Parser:$/;"	c
Parser	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^class Parser:$/;"	c
Parser	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^class Parser:$/;"	c
Parser	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^class Parser:$/;"	c
Parser	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^class Parser:$/;"	c
Parser	vim/.vim/bundle/sparkup/sparkup.py	/^class Parser:$/;"	c
Parser	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^class Parser:$/;"	c
Parser	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^class Parser:$/;"	c
Parser	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^class Parser:$/;"	c
Parser	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^class Parser:$/;"	c
PathUtilities	vim/.vim/bundle/command-t/ruby/command-t/path_utilities.rb	/^  module PathUtilities$/;"	m	class:CommandT
Plugin	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=+  -bar   Plugin$/;"	c
PluginClean	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang   PluginClean$/;"	c
PluginDocs	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0         PluginDocs$/;"	c
PluginInstall	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=* -bang -complete=custom,vundle#scripts#complete PluginInstall$/;"	c
PluginList	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0 -bang PluginList$/;"	c
PluginSearch	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete PluginSearch$/;"	c
PluginUpdate	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=* -complete=custom,vundle#scripts#complete PluginUpdate PluginInstall! <args>$/;"	c
PrefixWithIndex	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^def PrefixWithIndex(logs):$/;"	f
Print	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def Print(self, message, verbose=None, color=None, end='\\n', file=None):$/;"	m	class:Logger
Prompt	vim/.vim/bundle/command-t/ruby/command-t/prompt.rb	/^  class Prompt$/;"	c	class:CommandT
PushCommand	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^  def PushCommand(self, line, delay=None):$/;"	m	class:Vroom
PutStat	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def PutStat(self, stats, stat, fmt, **kwargs):$/;"	m	class:ActionLogger
Queue	vim/.vim/bundle/L9/autoload/l9/async.py	/^import Queue$/;"	i
Queue	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def Queue(self, message, *args, **kwargs):$/;"	m	class:ActionLogger
QueueContext	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^    def QueueContext(attr, writer, *args):$/;"	f	function:ActionLogger._Error
Quit	vim/.vim/bundle/command-t/vendor/vroom/vroom/neovim_mod.py	/^  def Quit(self):$/;"	m	class:Communicator
Quit	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def Quit(self):$/;"	m	class:Communicator
Quit	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^class Quit(Exception):$/;"	c
RANGE	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^    RANGE='range',$/;"	v
RANGE	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^    RANGE=re.compile(r'^(\\.|\\d+)?(?:,(\\+)?(\\$|\\d+)?)?$'),$/;"	v
RARRAY_LEN	vim/.vim/bundle/command-t/ruby/command-t/ruby_compat.h	/^#define RARRAY_LEN(/;"	d
RARRAY_PTR	vim/.vim/bundle/command-t/ruby/command-t/ruby_compat.h	/^#define RARRAY_PTR(/;"	d
README	vim/.vim/bundle/sparkup/Makefile	/^README=README.md$/;"	m
RECEIVED	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^    RECEIVED='received',$/;"	v
RED	vim/.vim/bundle/command-t/vendor/vroom/vroom/color.py	/^  RED = subprocess.check_output(['tput', 'setaf', '1']).decode('utf-8')$/;"	v
REGEX	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^    REGEX='regex',$/;"	v
REGEX	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^REGEX = vroom.Specification($/;"	v
RELAXED	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^    RELAXED='RELAXED',$/;"	v
RELAXED	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^    RELAXED='RELAXED')$/;"	v
RESET	vim/.vim/bundle/command-t/vendor/vroom/vroom/color.py	/^  RESET = subprocess.check_output(['tput', 'sgr0']).decode('utf-8')$/;"	v
RESPOND	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^    RESPOND='respond')$/;"	v
RESPONDED	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^    RESPONDED='responded',$/;"	v
RESULT	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^RESULT = vroom.Specification($/;"	v
RFLOAT_VALUE	vim/.vim/bundle/command-t/ruby/command-t/ruby_compat.h	/^#define RFLOAT_VALUE(/;"	d
RSTRING_LEN	vim/.vim/bundle/command-t/ruby/command-t/ruby_compat.h	/^#define RSTRING_LEN(/;"	d
RSTRING_PTR	vim/.vim/bundle/command-t/ruby/command-t/ruby_compat.h	/^#define RSTRING_PTR(/;"	d
RangeChooser	vim/.vim/bundle/vim_file_chooser.vim	/^function! RangeChooser()$/;"	f
RangeWord	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^def RangeWord(word):$/;"	f
RangerChooser	vim/.vim/bundle/vim_file_chooser.vim	/^command! -bar RangerChooser call RangeChooser()$/;"	c
Received	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^class Received(Log):$/;"	c
Record	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^  def Record(self, result, error=None):$/;"	m	class:Vroom
RehighlightBlame	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:RehighlightBlame() abort$/;"	f
RemoteComplete	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:RemoteComplete(A, L, P) abort$/;"	f
Remove	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(force) abort$/;"	f
ReplaceCmd	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
ResetCommands	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^  def ResetCommands(self):$/;"	m	class:Vroom
Respond	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^  def Respond(self, line, channel=None):$/;"	m	class:Hijack
RespondToSyscall	vim/.vim/bundle/command-t/vendor/vroom/vroom/command.py	/^  def RespondToSyscall(self, response, **controls):$/;"	m	class:Command
Responded	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^class Responded(Log):$/;"	c
Response	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^  def Response(self, command):$/;"	m	class:Hijack
Results	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def Results(self):$/;"	m	class:ActionLogger
RevisionComplete	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:RevisionComplete(A, L, P) abort$/;"	f
Router	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^class Router:$/;"	c
Router	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^class Router:$/;"	c
Router	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^class Router:$/;"	c
Router	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^class Router:$/;"	c
Router	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^class Router:$/;"	c
Router	vim/.vim/bundle/sparkup/sparkup.py	/^class Router:$/;"	c
Router	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^class Router:$/;"	c
Router	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^class Router:$/;"	c
Router	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^class Router:$/;"	c
Router	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^class Router:$/;"	c
RubyFileScanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/ruby_file_scanner.rb	/^      class RubyFileScanner < FileScanner$/;"	c	class:CommandT.Scanner.FileScanner
RubyWarning	vim/.vim/bundle/command-t/autoload/commandt.vim	/^function! s:RubyWarning() abort$/;"	f
Run	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^  def Run(self, lines):$/;"	m	class:Vroom
SCMUtilities	vim/.vim/bundle/command-t/ruby/command-t/scm_utilities.rb	/^  module SCMUtilities$/;"	m	class:CommandT
SENT	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^    SENT='sent')$/;"	v
SIBLING	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    SIBLING = 16$/;"	v	class:Token
SIBLING	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    SIBLING = 16$/;"	v	class:Token
SIBLING	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    SIBLING = 16$/;"	v	class:Token
SIBLING	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    SIBLING = 16$/;"	v	class:Token
SIBLING	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    SIBLING = 16$/;"	v	class:Token
SIBLING	vim/.vim/bundle/sparkup/sparkup.py	/^    SIBLING = 16$/;"	v	class:Token
SIBLING	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    SIBLING = 16$/;"	v	class:Token
SIBLING	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    SIBLING = 16$/;"	v	class:Token
SIBLING	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    SIBLING = 16$/;"	v	class:Token
SIBLING	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    SIBLING = 16$/;"	v	class:Token
SPARKUP_PY	vim/.vim/bundle/sparkup/Makefile	/^SPARKUP_PY=sparkup.py$/;"	m
SPECIAL_RANGE	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^SPECIAL_RANGE = vroom.Specification($/;"	v
STATUS	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^STATUS = vroom.Specification($/;"	v
STATUS	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^    STATUS='status')$/;"	v
STDERR	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^    STDERR='stderr',$/;"	v
STDOUT	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^    STDOUT='stdout',$/;"	v
STRICT	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^    STRICT='STRICT',$/;"	v
STRICT	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^    STRICT='STRICT',$/;"	v
STRICTNESS	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^STRICTNESS = vroom.Specification($/;"	v
STRICTNESS	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^STRICTNESS = vroom.Specification($/;"	v
SYSTEM	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^    SYSTEM='system')$/;"	v
SYSTEM	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^    SYSTEM='system',$/;"	v
SYSTEM_STRICTNESS	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^    SYSTEM_STRICTNESS='system',$/;"	v
Scanner	vim/.vim/bundle/command-t/ruby/command-t/scanner.rb	/^  class Scanner$/;"	c	class:CommandT
Scanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/buffer_scanner.rb	/^  class Scanner$/;"	c	class:CommandT
Scanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner.rb	/^  class Scanner$/;"	c	class:CommandT
Scanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/find_file_scanner.rb	/^  class Scanner$/;"	c	class:CommandT
Scanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/git_file_scanner.rb	/^  class Scanner$/;"	c	class:CommandT
Scanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/ruby_file_scanner.rb	/^  class Scanner$/;"	c	class:CommandT
Scanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/watchman_file_scanner.rb	/^  class Scanner$/;"	c	class:CommandT
Scanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/jump_scanner.rb	/^  class Scanner$/;"	c	class:CommandT
Scanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/mru_buffer_scanner.rb	/^  class Scanner$/;"	c	class:CommandT
Scanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/tag_scanner.rb	/^  class Scanner$/;"	c	class:CommandT
Screen	vim/.vim/bundle/command-t/ruby/command-t/vim/screen.rb	/^    module Screen$/;"	m	class:CommandT.VIM
Send	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^def Send(filename, data):$/;"	f
ServerQuit	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^class ServerQuit(Quit):$/;"	c
SetLineNumber	vim/.vim/bundle/command-t/vendor/vroom/vroom/__init__.py	/^  def SetLineNumber(self, lineno):$/;"	m	class:ParseError
Settings	vim/.vim/bundle/command-t/ruby/command-t/settings.rb	/^  class Settings$/;"	c	class:CommandT
Sparkup	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.vim	/^function! s:Sparkup()$/;"	f
Sparkup	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.vim	/^function! s:Sparkup()$/;"	f
Sparkup	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.vim	/^function! s:Sparkup()$/;"	f
Sparkup	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.vim	/^function! s:Sparkup()$/;"	f
Sparkup	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.vim	/^function! s:Sparkup()$/;"	f
Sparkup	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.vim	/^function! s:Sparkup()$/;"	f
Sparkup	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.vim	/^function! s:Sparkup()$/;"	f
Sparkup	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.vim	/^function! s:Sparkup()$/;"	f
SparkupNext	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.vim	/^function! s:SparkupNext()$/;"	f
SparkupNext	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.vim	/^function! s:SparkupNext()$/;"	f
SparkupNext	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.vim	/^function! s:SparkupNext()$/;"	f
SparkupNext	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.vim	/^function! s:SparkupNext()$/;"	f
SparkupNext	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.vim	/^function! s:SparkupNext()$/;"	f
SparkupNext	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.vim	/^function! s:SparkupNext()$/;"	f
SparkupNext	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.vim	/^function! s:SparkupNext()$/;"	f
SparkupNext	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.vim	/^function! s:SparkupNext()$/;"	f
SparkupTest	vim/.vim/bundle/sparkup/sparkup-unittest.py	/^class SparkupTest:$/;"	c
Specification	vim/.vim/bundle/command-t/vendor/vroom/vroom/__init__.py	/^def Specification(*numbered, **named):$/;"	f
SplitCommand	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^def SplitCommand(string):$/;"	f
SplitLine	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^def SplitLine(line):$/;"	f
StageDiff	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageNext	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageNext(count) abort$/;"	f
StagePatch	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StagePrevious	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePrevious(count) abort$/;"	f
StageReloadSeek	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2) abort$/;"	f
StageToggle	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
StageUndo	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageUndo() abort$/;"	f
Start	vim/.vim/bundle/command-t/vendor/vroom/vroom/neovim_mod.py	/^  def Start(self):$/;"	m	class:Communicator
Start	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def Start(self):$/;"	m	class:Communicator
StartsWithBuiltinMessages	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^def StartsWithBuiltinMessages(messages):$/;"	f
Stats	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def Stats(self):$/;"	m	class:Writer
Status	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def Status(self):$/;"	m	class:Writer
Status	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
StringIO	vim/.vim/bundle/command-t/vendor/vroom/vroom/neovim_mod.py	/^  from StringIO import StringIO$/;"	i
StringIO	vim/.vim/bundle/command-t/vendor/vroom/vroom/neovim_mod.py	/^  from io import StringIO$/;"	i
StringIO	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  from StringIO import StringIO$/;"	i
StringIO	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  from io import StringIO$/;"	i
StripBuiltinMessages	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^def StripBuiltinMessages(messages):$/;"	f
Stub	vim/.vim/bundle/command-t/ruby/command-t/stub.rb	/^  class Stub$/;"	c	class:CommandT
SuspectedError	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^class SuspectedError(MessageFailure):$/;"	c
SyscallLogger	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^class SyscallLogger(Logger):$/;"	c
SystemNotCalled	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^class SystemNotCalled(FakeShellFailure):$/;"	c
SystemWord	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^def SystemWord(word):$/;"	f
TEAL	vim/.vim/bundle/command-t/vendor/vroom/vroom/color.py	/^  TEAL = subprocess.check_output(['tput', 'setaf', '6']).decode('utf-8')$/;"	v
TEXT	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^    TEXT='text',$/;"	v
THREAD_THRESHOLD	vim/.vim/bundle/command-t/ruby/command-t/matcher.c	/^#define THREAD_THRESHOLD /;"	d	file:
TYPE	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^  TYPE = LOG.ERROR$/;"	v	class:ErrorLog
TYPE	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^  TYPE = LOG.MATCHED$/;"	v	class:Matched
TYPE	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^  TYPE = LOG.RECEIVED$/;"	v	class:Received
TYPE	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^  TYPE = LOG.RESPONDED$/;"	v	class:Responded
TYPE	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^  TYPE = LOG.UNEXPECTED$/;"	v	class:Unexpected
TYPE_WIDTH	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^  TYPE_WIDTH = 10  # UNEXPECTED$/;"	v	class:Log
TagFinder	vim/.vim/bundle/command-t/ruby/command-t/finder/tag_finder.rb	/^    class TagFinder < Finder$/;"	c	class:CommandT.Finder
TagList_IsValid	vim/.vim/plugin/taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	vim/.vim/plugin/taglist.vim	/^function! TagList_Start()$/;"	f
TagList_WrapUp	vim/.vim/plugin/taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_title	vim/.vim/plugin/taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
TagScanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/tag_scanner.rb	/^    class TagScanner < Scanner$/;"	c	class:CommandT.Scanner
Tally	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def Tally(self, result):$/;"	m	class:ActionLogger
Test	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^  def Test(self, function, *args, **kwargs):$/;"	m	class:Vroom
Tlist	vim/.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	vim/.vim/plugin/taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	vim/.vim/plugin/taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	vim/.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	vim/.vim/plugin/taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	vim/.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	vim/.vim/plugin/taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	vim/.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	vim/.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	vim/.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	vim/.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	vim/.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	vim/.vim/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	vim/.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	vim/.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	vim/.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	vim/.vim/plugin/taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	vim/.vim/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Add_Files	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files_Recursive	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Auto_Highlight_Tag	vim/.vim/plugin/taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	vim/.vim/plugin/taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	vim/.vim/plugin/taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	vim/.vim/plugin/taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Buffer_Removed	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Change_Sort	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Close_On_Select	vim/.vim/plugin/taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	vim/.vim/plugin/taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Create_Folds_For_File	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Create_Folds_For_File(fidx)$/;"	f
Tlist_Ctags_Cmd	vim/.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	vim/.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	vim/.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	vim/.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	vim/.vim/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Debug_Disable	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Enable	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Show	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Detect_Filetype	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
Tlist_Discard_FileInfo	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Prototype	vim/.vim/plugin/taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	vim/.vim/plugin/taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	vim/.vim/plugin/taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exe_Cmd_No_Acmds	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exit_OnlyWindow	vim/.vim/plugin/taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Extract_Tag_Scope	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_Extract_Tagtype	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_FileType_Init	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	vim/.vim/plugin/taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Nearest_Tag_Idx	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_GainFocus_On_ToggleOpen	vim/.vim/plugin/taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Buffer_Filetype	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_File_Index	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_Filenames	vim/.vim/plugin/taglist.vim	/^function! Tlist_Get_Filenames()$/;"	f
Tlist_Get_Tag_Linenum	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	vim/.vim/plugin/taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_Scope	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Scope(fidx, tidx)$/;"	f
Tlist_Get_Tag_SearchPat	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Get_Tagname_By_Line	vim/.vim/plugin/taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	vim/.vim/plugin/taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	vim/.vim/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	vim/.vim/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Init_File	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Log_Msg	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Max_Submenu_Items	vim/.vim/plugin/taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	vim/.vim/plugin/taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Menu_Add_Base_Menu	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_File_Refresh	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Init	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Jump_To_Tag	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Refresh	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Remove_File	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Update_File	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Parse_Tagline	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Post_Close_Cleanup	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_Dir	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_File	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_File_Always	vim/.vim/plugin/taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Process_Filelist	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Refresh	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh_Folds	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
Tlist_Remove_File	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Session_Load	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	vim/.vim/plugin/taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	vim/.vim/plugin/taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	vim/.vim/plugin/taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Skip_File	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Sort_Type	vim/.vim/plugin/taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_Current_File	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_File	vim/.vim/plugin/taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_Remove_List	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_Use_Horiz_Window	vim/.vim/plugin/taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	vim/.vim/plugin/taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	vim/.vim/plugin/taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_User_Removed_File	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_Vim_Session_Load	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Warning_Msg	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_WinHeight	vim/.vim/plugin/taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	vim/.vim/plugin/taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
Tlist_Window_Check_Auto_Open	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Width	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Close	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Create	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Display_Help	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Exit_Only_Window	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_Tag_Index	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Goto_Window	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Highlight_Line	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Tag	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Init	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Jump_To_Tag	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Mark_File_Window	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Move_To_File	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Open	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open_File	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File_Fold	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Refresh	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh_File	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Remove_File_From_Display	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Show_Info	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Toggle	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle_Help_Text	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Update_File	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_Line_Offsets	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Zoom	vim/.vim/plugin/taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
Token	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^class Token:$/;"	c
Token	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^class Token:$/;"	c
Token	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^class Token:$/;"	c
Token	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^class Token:$/;"	c
Token	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^class Token:$/;"	c
Token	vim/.vim/bundle/sparkup/sparkup.py	/^class Token:$/;"	c
Token	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^class Token:$/;"	c
Token	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^class Token:$/;"	c
Token	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^class Token:$/;"	c
Token	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^class Token:$/;"	c
TooMuchOutput	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^class TooMuchOutput(BadOutput):$/;"	c
TryToSay	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def TryToSay(self, cmd):$/;"	m	class:Communicator
UNCONTROLLED_LINE_TYPES	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^UNCONTROLLED_LINE_TYPES = {$/;"	v
UNEXPECTED	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^    UNEXPECTED='unexpected',$/;"	v
Unexpected	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^  def Unexpected(self, message, new):$/;"	m	class:Messenger
Unexpected	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^class Unexpected(Log):$/;"	c
UnexpectedMessage	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^class UnexpectedMessage(MessageFailure):$/;"	c
UnexpectedSystemCalls	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^class UnexpectedSystemCalls(FakeShellFailure):$/;"	c
Unload	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^  def Unload(self):$/;"	m	class:Manager
UnrecognizedWord	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^class UnrecognizedWord(vroom.ParseError):$/;"	c
Util	vim/.vim/bundle/command-t/ruby/command-t/util.rb	/^  module Util$/;"	m	class:CommandT
VERBATIM	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^    VERBATIM='verbatim')$/;"	v
VERSION	vim/.vim/bundle/sparkup/Makefile	/^VERSION=`date '+%Y%m%d'`$/;"	m
VIM	vim/.vim/bundle/command-t/ruby/command-t/vim.rb	/^  module VIM$/;"	m	class:CommandT
VIM	vim/.vim/bundle/command-t/ruby/command-t/vim/screen.rb	/^  module VIM$/;"	m	class:CommandT
VIM	vim/.vim/bundle/command-t/ruby/command-t/vim/window.rb	/^  module VIM$/;"	m	class:CommandT
VIM	vim/.vim/bundle/command-t/spec/spec_helper.rb	/^module VIM$/;"	m
VIOLET	vim/.vim/bundle/command-t/vendor/vroom/vroom/color.py	/^  VIOLET = subprocess.check_output(['tput', 'setaf', '5']).decode('utf-8')$/;"	v
VROOMDIR_VAR	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^VROOMDIR_VAR = 'VROOMDIR'$/;"	v
VROOMFILE_VAR	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^VROOMFILE_VAR = 'VROOMFILE'$/;"	v
Verify	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^  def Verify(  # pylint: disable-msg=redefined-builtin$/;"	m	class:Manager
Verify	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^  def Verify(self, old, new, expectations):$/;"	m	class:Messenger
Verify	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^  def Verify(self):$/;"	m	class:Communicator
View	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^  def View(self, start, end):$/;"	m	class:Manager
VimCommunicator	vim/.vim/bundle/command-t/vendor/vroom/vroom/neovim_mod.py	/^from vroom.vim import Communicator as VimCommunicator$/;"	i
VimScriptDef	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptdef.rb	/^class VimScriptDef$/;"	c
VimScriptUploader	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptuploader.rb	/^class VimScriptUploader$/;"	c
VimscriptString	vim/.vim/bundle/command-t/vendor/vroom/vroom/neovim_mod.py	/^from vroom.vim import CONFIGFILE, VimscriptString$/;"	i
VimscriptString	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^def VimscriptString(string):$/;"	f
Vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^class Vroom(object):$/;"	c
VundleClean	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang                                          VundleClean   PluginClean<bang>$/;"	c
VundleDocs	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0                                                VundleDocs    PluginDocs$/;"	c
VundleInstall	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete VundleInstall PluginInstall<bang> <args>$/;"	c
VundleSearch	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete VundleSearch  PluginSearch<bang> <args>$/;"	c
VundleUpdate	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com!                                                         VundleUpdate  PluginInstall!$/;"	c
VundleUpdate	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=*       -complete=custom,vundle#scripts#complete VundleUpdate  PluginInstall! <args>$/;"	c
WATCHMAN_ARRAY_MARKER	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^#define WATCHMAN_ARRAY_MARKER /;"	d	file:
WATCHMAN_BINARY_MARKER	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^#define WATCHMAN_BINARY_MARKER /;"	d	file:
WATCHMAN_DEFAULT_STORAGE	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^#define WATCHMAN_DEFAULT_STORAGE /;"	d	file:
WATCHMAN_FALSE	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^#define WATCHMAN_FALSE /;"	d	file:
WATCHMAN_FLOAT_MARKER	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^#define WATCHMAN_FLOAT_MARKER /;"	d	file:
WATCHMAN_HASH_MARKER	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^#define WATCHMAN_HASH_MARKER /;"	d	file:
WATCHMAN_HEADER	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^#define WATCHMAN_HEADER /;"	d	file:
WATCHMAN_INT16_MARKER	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^#define WATCHMAN_INT16_MARKER /;"	d	file:
WATCHMAN_INT32_MARKER	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^#define WATCHMAN_INT32_MARKER /;"	d	file:
WATCHMAN_INT64_MARKER	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^#define WATCHMAN_INT64_MARKER /;"	d	file:
WATCHMAN_INT8_MARKER	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^#define WATCHMAN_INT8_MARKER /;"	d	file:
WATCHMAN_NIL	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^#define WATCHMAN_NIL /;"	d	file:
WATCHMAN_PEEK_BUFFER_SIZE	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^#define WATCHMAN_PEEK_BUFFER_SIZE /;"	d	file:
WATCHMAN_SKIP_MARKER	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^#define WATCHMAN_SKIP_MARKER /;"	d	file:
WATCHMAN_SNIFF_BUFFER_SIZE	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^#define WATCHMAN_SNIFF_BUFFER_SIZE /;"	d	file:
WATCHMAN_STRING_MARKER	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^#define WATCHMAN_STRING_MARKER /;"	d	file:
WATCHMAN_TEMPLATE_MARKER	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^#define WATCHMAN_TEMPLATE_MARKER /;"	d	file:
WATCHMAN_TRUE	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^#define WATCHMAN_TRUE /;"	d	file:
WHITE	vim/.vim/bundle/command-t/vendor/vroom/vroom/color.py	/^  WHITE = subprocess.check_output(['tput', 'setaf', '7']).decode('utf-8')$/;"	v
WatchmanFileScanner	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/watchman_file_scanner.rb	/^      class WatchmanFileScanner < FindFileScanner$/;"	c	class:CommandT.Scanner.FileScanner
Window	vim/.vim/bundle/command-t/ruby/command-t/vim/window.rb	/^    module Window$/;"	m	class:CommandT.VIM
Worker	vim/.vim/bundle/L9/autoload/l9/async.py	/^class Worker(threading.Thread):$/;"	c
Wq	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
Write	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def Write(self, file=None):$/;"	m	class:Writer
Write	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def Write(self, filename, file=None):$/;"	m	class:ActionLogger
Write	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def Write(self, filename, file=None):$/;"	m	class:Logger
Write	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
WriteBackmatter	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^def WriteBackmatter(writers, args):$/;"	f
WriteExtraData	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def WriteExtraData(data, printer):$/;"	f	function:ErrorContextPrinter
Writer	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^class Writer(object):$/;"	c
WrongOutput	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^class WrongOutput(BadOutput):$/;"	c
XmlDialect	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^class XmlDialect(Dialect):$/;"	c
XmlDialect	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^class XmlDialect(Dialect):$/;"	c
XmlDialect	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^class XmlDialect(Dialect):$/;"	c
XmlDialect	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^class XmlDialect(Dialect):$/;"	c
XmlDialect	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^class XmlDialect(Dialect):$/;"	c
XmlDialect	vim/.vim/bundle/sparkup/sparkup.py	/^class XmlDialect(Dialect):$/;"	c
XmlDialect	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^class XmlDialect(Dialect):$/;"	c
XmlDialect	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^class XmlDialect(Dialect):$/;"	c
XmlDialect	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^class XmlDialect(Dialect):$/;"	c
XmlDialect	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^class XmlDialect(Dialect):$/;"	c
YELLOW	vim/.vim/bundle/command-t/vendor/vroom/vroom/color.py	/^  YELLOW = subprocess.check_output(['tput', 'setaf', '3']).decode('utf-8')$/;"	v
_Error	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def _Error(self, result, error, lineno=None):$/;"	m	class:ActionLogger
_IsCurrentDisplayUsable	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def _IsCurrentDisplayUsable(self):$/;"	m	class:Communicator
__call__	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^  def __call__(self, _, namespace, values, option_string=None):$/;"	m	class:DirectoryArg	file:
__call__	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^  def __call__(self, filehandle):$/;"	m	class:Vroom	file:
__getattr__	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def __getattr__(self, attr):$/;"	m	class:Options	file:
__getattr__	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def __getattr__(self, attr):$/;"	m	class:Options	file:
__getattr__	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def __getattr__(self, attr):$/;"	m	class:Options	file:
__getattr__	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def __getattr__(self, attr):$/;"	m	class:Options	file:
__getattr__	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def __getattr__(self, attr):$/;"	m	class:Options	file:
__getattr__	vim/.vim/bundle/sparkup/sparkup.py	/^    def __getattr__(self, attr):$/;"	m	class:Options	file:
__getattr__	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def __getattr__(self, attr):$/;"	m	class:Options	file:
__getattr__	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def __getattr__(self, attr):$/;"	m	class:Options	file:
__getattr__	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def __getattr__(self, attr):$/;"	m	class:Options	file:
__getattr__	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def __getattr__(self, attr):$/;"	m	class:Options	file:
__init__	vim/.vim/bundle/L9/autoload/l9/async.py	/^    def __init__(self):$/;"	m	class:Asyncer
__init__	vim/.vim/bundle/L9/autoload/l9/async.py	/^    def __init__(self):$/;"	m	class:Worker
__init__	vim/.vim/bundle/L9/autoload/l9/async.py	/^    def __init__(self, command, cwd, input, appends):$/;"	m	class:Executor
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/__init__.py	/^  def __init__(self, *args, **kwargs):$/;"	m	class:ParseError
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^  def __init__(self, context, message=None):$/;"	m	class:BadOutput
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^  def __init__(self, line, mode, context):$/;"	m	class:WrongOutput
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^  def __init__(self, vim):$/;"	m	class:Manager
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/command.py	/^  def __init__(self, command, lineno, delay, env):$/;"	m	class:Command
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  def __init__(self, option, word):$/;"	m	class:DuplicatedControl
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  def __init__(self, word):$/;"	m	class:UnrecognizedWord
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/environment.py	/^  def __init__(self, filename, args):$/;"	m	class:Environment
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^  def __init__(self, message, messages, commands=None):$/;"	m	class:MessageFailure
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^  def __init__(self, vim, env, writer):$/;"	m	class:Messenger
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/neovim_mod.py	/^  def __init__(self, args, env, writer):$/;"	m	class:Communicator
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def __init__(self):$/;"	m	class:NoTestRunning
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def __init__(self, *args, **kwargs):$/;"	m	class:ActionLogger
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def __init__(self, file, verbose, color):$/;"	m	class:Logger
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^  def __init__(self, filename, args):$/;"	m	class:Writer
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^  def __init__(self, filename, args):$/;"	m	class:Vroom
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^  def __init__(self, errors):$/;"	m	class:FakeShellNotWorking
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^  def __init__(self, fakecmd, expectation=None, mode=None):$/;"	m	class:Hijack
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^  def __init__(self, filename, env, writer):$/;"	m	class:Communicator
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^  def __init__(self, logs, commands, message=None):$/;"	m	class:FakeShellFailure
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^  def __init__(self, logs, expectations, commands):$/;"	m	class:SystemNotCalled
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^  def __init__(self, logs, response, commands):$/;"	m	class:NoChanceForResponse
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^  def __init__(self, extype, exval, tb):$/;"	m	class:ErrorLog
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^  def __init__(self, failures):$/;"	m	class:Failures
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^  def __init__(self, line, mode):$/;"	m	class:Matched
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^  def __init__(self, message=''):$/;"	m	class:Log
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def __init__(self, args, env, writer):$/;"	m	class:Communicator
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def __init__(self, display_value):$/;"	m	class:NoDisplay
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def __init__(self, error_text):$/;"	m	class:ErrorOnExit
__init__	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def __init__(self, expression):$/;"	m	class:InvalidExpression
__init__	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def __init__(self):$/;"	m	class:Router
__init__	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def __init__(self, indent=4):$/;"	m	class:HtmlDialect
__init__	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def __init__(self, options=None, str=''):$/;"	m	class:Parser
__init__	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def __init__(self, router, argv, options=None):$/;"	m	class:Options
__init__	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def __init__(self, str, parser=None):$/;"	m	class:Token
__init__	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def __init__(self, token=None, parent=None, count=None, local_count=None,$/;"	m	class:Element
__init__	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def __init__(self):$/;"	m	class:Router
__init__	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def __init__(self, indent=4):$/;"	m	class:HtmlDialect
__init__	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def __init__(self, options=None, str=''):$/;"	m	class:Parser
__init__	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def __init__(self, router, argv, options=None):$/;"	m	class:Options
__init__	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def __init__(self, str, parser=None):$/;"	m	class:Token
__init__	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def __init__(self, token=None, parent=None, count=None, local_count=None,$/;"	m	class:Element
__init__	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def __init__(self):$/;"	m	class:Router
__init__	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def __init__(self, indent=4):$/;"	m	class:HtmlDialect
__init__	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def __init__(self, options=None, str=''):$/;"	m	class:Parser
__init__	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def __init__(self, router, argv, options=None):$/;"	m	class:Options
__init__	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def __init__(self, str, parser=None):$/;"	m	class:Token
__init__	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def __init__(self, token=None, parent=None, count=None, local_count=None,$/;"	m	class:Element
__init__	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def __init__(self):$/;"	m	class:Router
__init__	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def __init__(self, indent=4):$/;"	m	class:HtmlDialect
__init__	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def __init__(self, options=None, str=''):$/;"	m	class:Parser
__init__	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def __init__(self, router, argv, options=None):$/;"	m	class:Options
__init__	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def __init__(self, str, parser=None):$/;"	m	class:Token
__init__	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def __init__(self, token=None, parent=None, count=None, local_count=None,$/;"	m	class:Element
__init__	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def __init__(self):$/;"	m	class:Router
__init__	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def __init__(self, indent=4):$/;"	m	class:HtmlDialect
__init__	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def __init__(self, options=None, str=''):$/;"	m	class:Parser
__init__	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def __init__(self, router, argv, options=None):$/;"	m	class:Options
__init__	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def __init__(self, str, parser=None):$/;"	m	class:Token
__init__	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def __init__(self, token=None, parent=None, count=None, local_count=None,$/;"	m	class:Element
__init__	vim/.vim/bundle/sparkup/sparkup.py	/^    def __init__(self):$/;"	m	class:Router
__init__	vim/.vim/bundle/sparkup/sparkup.py	/^    def __init__(self, indent=4):$/;"	m	class:HtmlDialect
__init__	vim/.vim/bundle/sparkup/sparkup.py	/^    def __init__(self, options=None, str=''):$/;"	m	class:Parser
__init__	vim/.vim/bundle/sparkup/sparkup.py	/^    def __init__(self, router, argv, options=None):$/;"	m	class:Options
__init__	vim/.vim/bundle/sparkup/sparkup.py	/^    def __init__(self, str, parser=None):$/;"	m	class:Token
__init__	vim/.vim/bundle/sparkup/sparkup.py	/^    def __init__(self, token=None, parent=None, count=None, local_count=None,$/;"	m	class:Element
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def __init__(self):$/;"	m	class:Router
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def __init__(self, indent=4):$/;"	m	class:HtmlDialect
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def __init__(self, options=None, str=''):$/;"	m	class:Parser
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def __init__(self, router, argv, options=None):$/;"	m	class:Options
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def __init__(self, str, parser=None):$/;"	m	class:Token
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def __init__(self, token=None, parent=None, count=None, local_count=None,$/;"	m	class:Element
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def __init__(self):$/;"	m	class:Router
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def __init__(self, indent=4):$/;"	m	class:HtmlDialect
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def __init__(self, options=None, str=''):$/;"	m	class:Parser
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def __init__(self, router, argv, options=None):$/;"	m	class:Options
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def __init__(self, str, parser=None):$/;"	m	class:Token
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def __init__(self, token=None, parent=None, count=None, local_count=None,$/;"	m	class:Element
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def __init__(self):$/;"	m	class:Router
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def __init__(self, indent=4):$/;"	m	class:HtmlDialect
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def __init__(self, options=None, str=''):$/;"	m	class:Parser
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def __init__(self, router, argv, options=None):$/;"	m	class:Options
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def __init__(self, str, parser=None):$/;"	m	class:Token
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def __init__(self, token=None, parent=None, count=None, local_count=None,$/;"	m	class:Element
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def __init__(self):$/;"	m	class:Router
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def __init__(self, indent=4):$/;"	m	class:HtmlDialect
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def __init__(self, options=None, str=''):$/;"	m	class:Parser
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def __init__(self, router, argv, options=None):$/;"	m	class:Options
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def __init__(self, str, parser=None):$/;"	m	class:Token
__init__	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def __init__(self, token=None, parent=None, count=None, local_count=None,$/;"	m	class:Element
__repr__	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^  def __repr__(self):$/;"	m	class:Hijack	file:
__str__	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^  def __str__(self):$/;"	m	class:FakeShellNotWorking	file:
__str__	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^  def __str__(self):$/;"	m	class:Hijack	file:
__str__	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^  def __str__(self):$/;"	m	class:Failures	file:
__str__	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^  def __str__(self):$/;"	m	class:Log	file:
__str__	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def __str__(self):$/;"	m	class:ErrorOnExit	file:
__str__	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def __str__(self):$/;"	m	class:InvalidExpression	file:
__str__	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def __str__(self):$/;"	m	class:NoDisplay	file:
__str__	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  def __str__(self):$/;"	m	class:ServerQuit	file:
__str__	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def __str__(self):$/;"	m	class:Token	file:
__str__	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def __str__(self):$/;"	m	class:Token	file:
__str__	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def __str__(self):$/;"	m	class:Token	file:
__str__	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def __str__(self):$/;"	m	class:Token	file:
__str__	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def __str__(self):$/;"	m	class:Token	file:
__str__	vim/.vim/bundle/sparkup/sparkup.py	/^    def __str__(self):$/;"	m	class:Token	file:
__str__	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def __str__(self):$/;"	m	class:Token	file:
__str__	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def __str__(self):$/;"	m	class:Token	file:
__str__	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def __str__(self):$/;"	m	class:Token	file:
__str__	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def __str__(self):$/;"	m	class:Token	file:
_add_plugin_to_tmux_conf	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/tests/helpers/helpers.sh	/^_add_plugin_to_tmux_conf() {$/;"	f
_add_plugin_to_tmux_conf	tmux/.tmux/plugins/tmux-resurrect/tests/helpers/helpers.sh	/^_add_plugin_to_tmux_conf() {$/;"	f
_add_plugin_to_tmux_conf	tmux/.tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^_add_plugin_to_tmux_conf() {$/;"	f
_clone_the_plugin	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/tests/helpers/helpers.sh	/^_clone_the_plugin() {$/;"	f
_clone_the_plugin	tmux/.tmux/plugins/tmux-resurrect/tests/helpers/helpers.sh	/^_clone_the_plugin() {$/;"	f
_clone_the_plugin	tmux/.tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^_clone_the_plugin() {$/;"	f
_fill_attributes	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def _fill_attributes(self):$/;"	m	class:Element
_fill_attributes	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def _fill_attributes(self):$/;"	m	class:Element
_fill_attributes	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def _fill_attributes(self):$/;"	m	class:Element
_fill_attributes	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def _fill_attributes(self):$/;"	m	class:Element
_fill_attributes	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def _fill_attributes(self):$/;"	m	class:Element
_fill_attributes	vim/.vim/bundle/sparkup/sparkup.py	/^    def _fill_attributes(self):$/;"	m	class:Element
_fill_attributes	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def _fill_attributes(self):$/;"	m	class:Element
_fill_attributes	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def _fill_attributes(self):$/;"	m	class:Element
_fill_attributes	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def _fill_attributes(self):$/;"	m	class:Element
_fill_attributes	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def _fill_attributes(self):$/;"	m	class:Element
_get_command_strategy	tmux/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_get_command_strategy() {$/;"	f
_get_inline_strategy	tmux/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_get_inline_strategy() {$/;"	f
_get_proc_match_element	tmux/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_get_proc_match_element() {$/;"	f
_get_proc_restore_element	tmux/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_get_proc_restore_element() {$/;"	f
_get_strategy_file	tmux/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_get_strategy_file() {$/;"	f
_has_emacs_mode_keys	tmux/.tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^_has_emacs_mode_keys() {$/;"	f
_init_element	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def _init_element(self):$/;"	m	class:Token
_init_element	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def _init_element(self):$/;"	m	class:Token
_init_element	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def _init_element(self):$/;"	m	class:Token
_init_element	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def _init_element(self):$/;"	m	class:Token
_init_element	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def _init_element(self):$/;"	m	class:Token
_init_element	vim/.vim/bundle/sparkup/sparkup.py	/^    def _init_element(self):$/;"	m	class:Token
_init_element	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def _init_element(self):$/;"	m	class:Token
_init_element	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def _init_element(self):$/;"	m	class:Token
_init_element	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def _init_element(self):$/;"	m	class:Token
_init_element	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def _init_element(self):$/;"	m	class:Token
_just_command	tmux/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_just_command() {$/;"	f
_last	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    _last = None$/;"	v	class:Parser
_last	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    _last = None$/;"	v	class:Parser
_last	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    _last = None$/;"	v	class:Parser
_last	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    _last = None$/;"	v	class:Parser
_last	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    _last = None$/;"	v	class:Parser
_last	vim/.vim/bundle/sparkup/sparkup.py	/^    _last = None$/;"	v	class:Parser
_last	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    _last = None$/;"	v	class:Parser
_last	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    _last = None$/;"	v	class:Parser
_last	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    _last = None$/;"	v	class:Parser
_last	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    _last = None$/;"	v	class:Parser
_manual_expansion	tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_manual_expansion() {$/;"	f
_next	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def _next$/;"	f	class:CommandT.MatchWindow
_parse	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def _parse(self):$/;"	m	class:Parser
_parse	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def _parse(self):$/;"	m	class:Parser
_parse	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def _parse(self):$/;"	m	class:Parser
_parse	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def _parse(self):$/;"	m	class:Parser
_parse	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def _parse(self):$/;"	m	class:Parser
_parse	vim/.vim/bundle/sparkup/sparkup.py	/^    def _parse(self):$/;"	m	class:Parser
_parse	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def _parse(self):$/;"	m	class:Parser
_parse	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def _parse(self):$/;"	m	class:Parser
_parse	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def _parse(self):$/;"	m	class:Parser
_parse	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def _parse(self):$/;"	m	class:Parser
_populate	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def _populate(self):$/;"	m	class:Element
_populate	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def _populate(self):$/;"	m	class:Element
_populate	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def _populate(self):$/;"	m	class:Element
_populate	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def _populate(self):$/;"	m	class:Element
_populate	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def _populate(self):$/;"	m	class:Element
_populate	vim/.vim/bundle/sparkup/sparkup.py	/^    def _populate(self):$/;"	m	class:Element
_populate	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def _populate(self):$/;"	m	class:Element
_populate	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def _populate(self):$/;"	m	class:Element
_populate	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def _populate(self):$/;"	m	class:Element
_populate	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def _populate(self):$/;"	m	class:Element
_prev	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def _prev$/;"	f	class:CommandT.MatchWindow
_proc_matches_full_command	tmux/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_proc_matches_full_command() {$/;"	f
_proc_starts_with_tildae	tmux/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_proc_starts_with_tildae() {$/;"	f
_process_on_the_restore_list	tmux/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_process_on_the_restore_list() {$/;"	f
_process_should_be_restored	tmux/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_process_should_be_restored() {$/;"	f
_restore_all_processes	tmux/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_restore_all_processes() {$/;"	f
_restore_list	tmux/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_restore_list() {$/;"	f
_save_command_strategy_file	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^_save_command_strategy_file() {$/;"	f
_sourced_files	tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_sourced_files() {$/;"	f
_strategy_exists	tmux/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^_strategy_exists() {$/;"	f
_teardown	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/tests/helpers/helpers.sh	/^_teardown() {$/;"	f
_teardown	tmux/.tmux/plugins/tmux-resurrect/tests/helpers/helpers.sh	/^_teardown() {$/;"	f
_textmatify	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def _textmatify(self, output):$/;"	m	class:Parser
_textmatify	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def _textmatify(self, output):$/;"	m	class:Parser
_textmatify	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def _textmatify(self, output):$/;"	m	class:Parser
_textmatify	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def _textmatify(self, output):$/;"	m	class:Parser
_textmatify	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def _textmatify(self, output):$/;"	m	class:Parser
_textmatify	vim/.vim/bundle/sparkup/sparkup.py	/^    def _textmatify(self, output):$/;"	m	class:Parser
_textmatify	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def _textmatify(self, output):$/;"	m	class:Parser
_textmatify	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def _textmatify(self, output):$/;"	m	class:Parser
_textmatify	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def _textmatify(self, output):$/;"	m	class:Parser
_textmatify	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def _textmatify(self, output):$/;"	m	class:Parser
_tmux_conf_contents	tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_tmux_conf_contents() {$/;"	f
_tokenize	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def _tokenize(self):$/;"	m	class:Parser
_tokenize	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def _tokenize(self):$/;"	m	class:Parser
_tokenize	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def _tokenize(self):$/;"	m	class:Parser
_tokenize	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def _tokenize(self):$/;"	m	class:Parser
_tokenize	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def _tokenize(self):$/;"	m	class:Parser
_tokenize	vim/.vim/bundle/sparkup/sparkup.py	/^    def _tokenize(self):$/;"	m	class:Parser
_tokenize	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def _tokenize(self):$/;"	m	class:Parser
_tokenize	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def _tokenize(self):$/;"	m	class:Parser
_tokenize	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def _tokenize(self):$/;"	m	class:Parser
_tokenize	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def _tokenize(self):$/;"	m	class:Parser
_tpm_path	tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_tpm_path() {$/;"	f
abbrev	vim/.vim/bundle/command-t/ruby/command-t/matcher.c	/^    VALUE abbrev;$/;"	m	struct:__anon3	file:
abbrev_segments	vim/.vim/bundle/command-t/ruby/command-t/prompt.rb	/^    def abbrev_segments$/;"	f	class:CommandT.Prompt
accept_selection	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def accept_selection(options = {})$/;"	f	class:CommandT.quickfix
actions	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import vroom.actions$/;"	i
active_finder	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def active_finder$/;"	f	class:CommandT
add!	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def add!(char)$/;"	f	class:CommandT.MatchWindow
add!	vim/.vim/bundle/command-t/ruby/command-t/prompt.rb	/^    def add!(char)$/;"	f	class:CommandT.Prompt
add_buffer_keywords	vim/.vim/bundle/dash.vim/autoload/dash.vim	/^function! s:add_buffer_keywords(keyword_list) "{{{$/;"	f
add_files_to_gitignore	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/setup	/^add_files_to_gitignore() {$/;"	f
add_files_to_gitignore	tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^add_files_to_gitignore() {$/;"	f
add_methods	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_paths_for_directory	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/ruby_file_scanner.rb	/^        def add_paths_for_directory(dir, accumulator)$/;"	f	class:CommandT.Scanner.FileScanner.RubyFileScanner
add_resurrect_save_interpolation	tmux/.tmux/plugins/tmux-continuum/continuum.tmux	/^add_resurrect_save_interpolation() {$/;"	f
all_test_files	tmux/.tmux/plugins/tpm/lib/tmux-test/tests/run_tests_in_isolation	/^all_test_files() {$/;"	f
all_tmux_processes	tmux/.tmux/plugins/tmux-continuum/scripts/helpers.sh	/^all_tmux_processes() {$/;"	f
always_show_dot_files	vim/.vim/bundle/command-t/ruby/command-t/match.c	/^    int     always_show_dot_files;  \/\/ boolean$/;"	m	struct:__anon1	file:
always_show_dot_files	vim/.vim/bundle/command-t/ruby/command-t/matcher.c	/^    VALUE always_show_dot_files;$/;"	m	struct:__anon3	file:
another_tmux_server_running	tmux/.tmux/plugins/tmux-continuum/continuum.tmux	/^another_tmux_server_running() {$/;"	f
another_tmux_server_running_on_startup	tmux/.tmux/plugins/tmux-continuum/scripts/helpers.sh	/^another_tmux_server_running_on_startup() {$/;"	f
append	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def append(self, object):$/;"	m	class:Element
append	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def append(self, object):$/;"	m	class:Element
append	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def append(self, object):$/;"	m	class:Element
append	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def append(self, object):$/;"	m	class:Element
append	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def append(self, object):$/;"	m	class:Element
append	vim/.vim/bundle/sparkup/sparkup.py	/^    def append(self, object):$/;"	m	class:Element
append	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def append(self, object):$/;"	m	class:Element
append	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def append(self, object):$/;"	m	class:Element
append	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def append(self, object):$/;"	m	class:Element
append	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def append(self, object):$/;"	m	class:Element
apply_wild_ignore?	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner.rb	/^      def apply_wild_ignore?$/;"	f	class:CommandT.Scanner.FileScanner
argparse	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^import argparse$/;"	i
args	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^  args = vroom.args.Parse(sys.argv[1:])$/;"	v
args	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^import vroom.args$/;"	i
args	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import vroom.args$/;"	i
at	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.messages  # pylint: disable-msg=g-import-not-at-top$/;"	i
at	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.shell  # pylint: disable-msg=g-import-not-at-top$/;"	i
attributes	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    attributes = None$/;"	v	class:Element
attributes	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    attributes = None$/;"	v	class:Token
attributes	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    attributes = None$/;"	v	class:Element
attributes	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    attributes = None$/;"	v	class:Token
attributes	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    attributes = None$/;"	v	class:Element
attributes	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    attributes = None$/;"	v	class:Token
attributes	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    attributes = None$/;"	v	class:Element
attributes	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    attributes = None$/;"	v	class:Token
attributes	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    attributes = None$/;"	v	class:Element
attributes	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    attributes = None$/;"	v	class:Token
attributes	vim/.vim/bundle/sparkup/sparkup.py	/^    attributes = None$/;"	v	class:Element
attributes	vim/.vim/bundle/sparkup/sparkup.py	/^    attributes = None$/;"	v	class:Token
attributes	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    attributes = None$/;"	v	class:Element
attributes	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    attributes = None$/;"	v	class:Token
attributes	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    attributes = None$/;"	v	class:Element
attributes	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    attributes = None$/;"	v	class:Token
attributes	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    attributes = None$/;"	v	class:Element
attributes	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    attributes = None$/;"	v	class:Token
attributes	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    attributes = None$/;"	v	class:Element
attributes	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    attributes = None$/;"	v	class:Token
author	vim/.vim/bundle/command-t/vendor/vroom/setup.py	/^    author='Nate Soares',$/;"	v
author_email	vim/.vim/bundle/command-t/vendor/vroom/setup.py	/^    author_email='nate@so8r.es',$/;"	v
auto_restore_enabled	tmux/.tmux/plugins/tmux-continuum/scripts/continuum_restore.sh	/^auto_restore_enabled() {$/;"	f
auto_save_not_disabled	tmux/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^auto_save_not_disabled() {$/;"	f
b:did_ftplugin	vim/.vim/bundle/Vundle.vim/ftplugin/vundlelog.vim	/^let b:did_ftplugin = 1$/;"	v
backspace	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def backspace$/;"	f	class:CommandT.quickfix
backspace!	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def backspace!$/;"	f	class:CommandT.MatchWindow
backspace!	vim/.vim/bundle/command-t/ruby/command-t/prompt.rb	/^    def backspace!$/;"	f	class:CommandT.Prompt
binary	vim/.vim/bundle/command-t/spec/command-t/watchman/utils_spec.rb	/^  def binary(str)$/;"	f
buffer	vim/.vim/bundle/command-t/spec/command-t/scanner/buffer_scanner_spec.rb	/^  def buffer(name)$/;"	f
buffer	vim/.vim/bundle/command-t/vendor/vroom/vroom/environment.py	/^import vroom.buffer$/;"	i
buffer	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^import vroom.buffer$/;"	i
buffer	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import vroom.buffer$/;"	i
buffer	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer_commit	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_finder	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def buffer_finder$/;"	f	class:CommandT.quickfix.ensure_appropriate_window_selection
buffer_getline	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getvar	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_name	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_number	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def buffer_number$/;"	f	class:CommandT.MatchWindow
buffer_path	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_repo	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_sha1	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_up	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_up(...) dict abort$/;"	f
bundle.is_pinned	vim/.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:bundle.is_pinned()$/;"	f
bundle.path	vim/.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:bundle.path()$/;"	f
cCommandTMatcher	vim/.vim/bundle/command-t/ruby/command-t/ext.c	/^VALUE cCommandTMatcher       = 0; \/\/ class CommandT::Matcher$/;"	v
cache_tmux_default_command	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^cache_tmux_default_command() {$/;"	f
calculate_match	vim/.vim/bundle/command-t/ruby/command-t/match.c	/^void calculate_match(VALUE str,$/;"	f
can_diffoff	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
cancel	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def cancel$/;"	f	class:CommandT.quickfix
cap	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^    size_t cap;     \/\/ total capacity$/;"	m	struct:__anon4	file:
capture	vim/.vim/bundle/command-t/ruby/command-t/vim.rb	/^      def capture(cmd)$/;"	f	class:CommandT.VIM
capture_pane_contents	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^capture_pane_contents() {$/;"	f
capture_pane_contents_option_on	tmux/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^capture_pane_contents_option_on() {$/;"	f
caret	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    caret = None$/;"	v	class:Parser
caret	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    caret = None$/;"	v	class:Parser
caret	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    caret = None$/;"	v	class:Parser
caret	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    caret = None$/;"	v	class:Parser
caret	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    caret = None$/;"	v	class:Parser
caret	vim/.vim/bundle/sparkup/sparkup.py	/^    caret = None$/;"	v	class:Parser
caret	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    caret = None$/;"	v	class:Parser
caret	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    caret = None$/;"	v	class:Parser
caret	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    caret = None$/;"	v	class:Parser
caret	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    caret = None$/;"	v	class:Parser
case_sensitive	vim/.vim/bundle/command-t/ruby/command-t/match.c	/^    int     case_sensitive;         \/\/ boolean$/;"	m	struct:__anon1	file:
case_sensitive	vim/.vim/bundle/command-t/ruby/command-t/matcher.c	/^    int case_sensitive;$/;"	m	struct:__anon3	file:
case_sensitive?	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def case_sensitive?$/;"	f	class:CommandT.quickfix
cases	vim/.vim/bundle/sparkup/sparkup-unittest.py	/^    cases = {$/;"	v	class:SparkupTest
cfile	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:cfile() abort$/;"	f
checkKey	vim/.vim/bundle/L9/autoload/l9/async.vim	/^function s:checkKey(key)$/;"	f
check_binding_defined	tmux/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^check_binding_defined() {$/;"	f
check_bundle_name	vim/.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^funct! s:check_bundle_name(bundle)$/;"	f
check_dir_exists_helper	tmux/.tmux/plugins/tpm/tests/helpers/tpm.sh	/^check_dir_exists_helper() {$/;"	f
check_for_dash	vim/.vim/bundle/dash.vim/autoload/dash.vim	/^function! s:check_for_dash()$/;"	f
check_ruby_1_9_2	vim/.vim/bundle/command-t/spec/command-t/controller_spec.rb	/^  def check_ruby_1_9_2$/;"	f
check_saved_session_exists	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^check_saved_session_exists() {$/;"	f
check_tpm_path	tmux/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^check_tpm_path() {$/;"	f
children	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    children = None$/;"	v	class:Element
children	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    children = None$/;"	v	class:Element
children	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    children = None$/;"	v	class:Element
children	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    children = None$/;"	v	class:Element
children	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    children = None$/;"	v	class:Element
children	vim/.vim/bundle/sparkup/sparkup.py	/^    children = None$/;"	v	class:Element
children	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    children = None$/;"	v	class:Element
children	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    children = None$/;"	v	class:Element
children	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    children = None$/;"	v	class:Element
children	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    children = None$/;"	v	class:Element
clean_plugins	tmux/.tmux/plugins/tpm/scripts/clean_plugins.sh	/^clean_plugins() {$/;"	f
clear	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def clear$/;"	f	class:CommandT.quickfix
clear	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def clear$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
clear!	vim/.vim/bundle/command-t/ruby/command-t/prompt.rb	/^    def clear!$/;"	f	class:CommandT.Prompt
clear_outputs	vim/.vim/bundle/L9/autoload/l9/async.py	/^    def clear_outputs(self):$/;"	m	class:Worker
clear_prev_word	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def clear_prev_word$/;"	f	class:CommandT.quickfix
clear_prev_word!	vim/.vim/bundle/command-t/ruby/command-t/prompt.rb	/^    def clear_prev_word!$/;"	f	class:CommandT.Prompt
clone	tmux/.tmux/plugins/tpm/scripts/install_plugins.sh	/^clone() {$/;"	f
clone_plugin	tmux/.tmux/plugins/tpm/scripts/install_plugins.sh	/^clone_plugin() {$/;"	f
close	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def close$/;"	f	class:CommandT.MatchWindow
closing_tag	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    closing_tag = None$/;"	v	class:Element
closing_tag	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    closing_tag = None$/;"	v	class:Token
closing_tag	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    closing_tag = None$/;"	v	class:Element
closing_tag	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    closing_tag = None$/;"	v	class:Token
closing_tag	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    closing_tag = None$/;"	v	class:Element
closing_tag	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    closing_tag = None$/;"	v	class:Token
closing_tag	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    closing_tag = None$/;"	v	class:Element
closing_tag	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    closing_tag = None$/;"	v	class:Token
closing_tag	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    closing_tag = None$/;"	v	class:Element
closing_tag	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    closing_tag = None$/;"	v	class:Token
closing_tag	vim/.vim/bundle/sparkup/sparkup.py	/^    closing_tag = None$/;"	v	class:Element
closing_tag	vim/.vim/bundle/sparkup/sparkup.py	/^    closing_tag = None$/;"	v	class:Token
closing_tag	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    closing_tag = None$/;"	v	class:Element
closing_tag	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    closing_tag = None$/;"	v	class:Token
closing_tag	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    closing_tag = None$/;"	v	class:Element
closing_tag	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    closing_tag = None$/;"	v	class:Token
closing_tag	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    closing_tag = None$/;"	v	class:Element
closing_tag	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    closing_tag = None$/;"	v	class:Token
closing_tag	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    closing_tag = None$/;"	v	class:Element
closing_tag	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    closing_tag = None$/;"	v	class:Token
cmdline_keys	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    cmdline_keys = [$/;"	v	class:Options
cmdline_keys	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    cmdline_keys = [$/;"	v	class:Options
cmdline_keys	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    cmdline_keys = [$/;"	v	class:Options
cmdline_keys	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    cmdline_keys = [$/;"	v	class:Options
cmdline_keys	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    cmdline_keys = [$/;"	v	class:Options
cmdline_keys	vim/.vim/bundle/sparkup/sparkup.py	/^    cmdline_keys = [$/;"	v	class:Options
cmdline_keys	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    cmdline_keys = [$/;"	v	class:Options
cmdline_keys	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    cmdline_keys = [$/;"	v	class:Options
cmdline_keys	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    cmdline_keys = [$/;"	v	class:Options
cmdline_keys	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    cmdline_keys = [$/;"	v	class:Options
cmp_alpha	vim/.vim/bundle/command-t/ruby/command-t/matcher.c	/^int cmp_alpha(const void *a, const void *b)$/;"	f
cmp_score	vim/.vim/bundle/command-t/ruby/command-t/matcher.c	/^int cmp_score(const void *a, const void *b)$/;"	f
color	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^import vroom.color$/;"	i
color	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^import vroom.color$/;"	i
color	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^import vroom.color$/;"	i
command	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^      command = response$/;"	v
command	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import vroom.command$/;"	i
command	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
command_exists	tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^command_exists() {$/;"	f
commandt#ActiveFinder	vim/.vim/bundle/command-t/autoload/commandt.vim	/^function! commandt#ActiveFinder() abort$/;"	f
commandt#BufferFinder	vim/.vim/bundle/command-t/autoload/commandt.vim	/^function! commandt#BufferFinder() abort$/;"	f
commandt#CheckBuffer	vim/.vim/bundle/command-t/autoload/commandt.vim	/^function! commandt#CheckBuffer(buffer_number) abort$/;"	f
commandt#FileFinder	vim/.vim/bundle/command-t/autoload/commandt.vim	/^function! commandt#FileFinder(arg) abort$/;"	f
commandt#Flush	vim/.vim/bundle/command-t/autoload/commandt.vim	/^function! commandt#Flush() abort$/;"	f
commandt#JumpFinder	vim/.vim/bundle/command-t/autoload/commandt.vim	/^function! commandt#JumpFinder() abort$/;"	f
commandt#Load	vim/.vim/bundle/command-t/autoload/commandt.vim	/^function! commandt#Load() abort$/;"	f
commandt#MRUFinder	vim/.vim/bundle/command-t/autoload/commandt.vim	/^function! commandt#MRUFinder() abort$/;"	f
commandt#Path	vim/.vim/bundle/command-t/autoload/commandt.vim	/^function! commandt#Path() abort$/;"	f
commandt#TagFinder	vim/.vim/bundle/command-t/autoload/commandt.vim	/^function! commandt#TagFinder() abort$/;"	f
commandt#private#AcceptSelection	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#AcceptSelection() abort$/;"	f
commandt#private#AcceptSelectionSplit	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#AcceptSelectionSplit() abort$/;"	f
commandt#private#AcceptSelectionTab	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#AcceptSelectionTab() abort$/;"	f
commandt#private#AcceptSelectionVSplit	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#AcceptSelectionVSplit() abort$/;"	f
commandt#private#Backspace	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#Backspace() abort$/;"	f
commandt#private#Cancel	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#Cancel() abort$/;"	f
commandt#private#Clear	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#Clear() abort$/;"	f
commandt#private#ClearPrevWord	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#ClearPrevWord() abort$/;"	f
commandt#private#CursorEnd	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#CursorEnd() abort$/;"	f
commandt#private#CursorLeft	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#CursorLeft() abort$/;"	f
commandt#private#CursorRight	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#CursorRight() abort$/;"	f
commandt#private#CursorStart	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#CursorStart() abort$/;"	f
commandt#private#Delete	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#Delete() abort$/;"	f
commandt#private#HandleKey	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#HandleKey(arg) abort$/;"	f
commandt#private#ListMatches	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#ListMatches() abort$/;"	f
commandt#private#Quickfix	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#Quickfix() abort$/;"	f
commandt#private#Refresh	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#Refresh() abort$/;"	f
commandt#private#SelectNext	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#SelectNext() abort$/;"	f
commandt#private#SelectPrev	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#SelectPrev() abort$/;"	f
commandt#private#ToggleFocus	vim/.vim/bundle/command-t/autoload/commandt/private.vim	/^function! commandt#private#ToggleFocus() abort$/;"	f
configured_tree	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:configured_tree(git_dir) abort$/;"	f
control	vim/.vim/bundle/command-t/vendor/vroom/scripts/respond.vroomfaker	/^control = json.loads(sys.argv[1])$/;"	v
controlfile	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^controlfile = os.environ.get(vroom.shell.CONTROL_FILENAME_VAR)$/;"	v
controls	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^      controls = controls[1:]$/;"	v
controls	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^    controls = pickle.load(f)$/;"	v
controls	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^import vroom.controls$/;"	i
controls	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^import vroom.controls$/;"	i
controls	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^import vroom.controls$/;"	i
controls	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^import vroom.controls$/;"	i
controls	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^import vroom.controls$/;"	i
controls	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^import vroom.controls$/;"	i
copy_outputs	vim/.vim/bundle/L9/autoload/l9/async.py	/^    def copy_outputs(self):$/;"	m	class:Worker
copy_travis_yml	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/setup	/^copy_travis_yml() {$/;"	f
copy_travis_yml	tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^copy_travis_yml() {$/;"	f
cpath	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:cpath(path) abort$/;"	f
create_changelog	vim/.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:create_changelog() abort$/;"	f
create_directory_for_tests	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/setup	/^create_directory_for_tests() {$/;"	f
create_directory_for_tests	tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^create_directory_for_tests() {$/;"	f
create_test_plugin_helper	tmux/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^create_test_plugin_helper() {$/;"	f
create_tmux_test_environment_and_save	tmux/.tmux/plugins/tmux-resurrect/tests/test_resurrect_save.sh	/^create_tmux_test_environment_and_save() {$/;"	f
current_buffer_visible_in_other_window	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def current_buffer_visible_in_other_window$/;"	f	class:CommandT.quickfix
current_file_dir	vim/.vim/bundle/command-t/ruby/command-t/vim.rb	/^      def current_file_dir$/;"	f	class:CommandT.VIM
current_timestamp	tmux/.tmux/plugins/tmux-continuum/scripts/shared.sh	/^current_timestamp() {$/;"	f
current_tmux_server_pid	tmux/.tmux/plugins/tmux-continuum/scripts/helpers.sh	/^current_tmux_server_pid() {$/;"	f
cursor_end	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def cursor_end$/;"	f	class:CommandT.quickfix
cursor_end	vim/.vim/bundle/command-t/ruby/command-t/prompt.rb	/^    def cursor_end$/;"	f	class:CommandT.Prompt
cursor_left	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def cursor_left$/;"	f	class:CommandT.quickfix
cursor_left	vim/.vim/bundle/command-t/ruby/command-t/prompt.rb	/^    def cursor_left$/;"	f	class:CommandT.Prompt
cursor_right	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def cursor_right$/;"	f	class:CommandT.quickfix
cursor_right	vim/.vim/bundle/command-t/ruby/command-t/prompt.rb	/^    def cursor_right$/;"	f	class:CommandT.Prompt
cursor_start	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def cursor_start$/;"	f	class:CommandT.quickfix
cursor_start	vim/.vim/bundle/command-t/ruby/command-t/prompt.rb	/^    def cursor_start$/;"	f	class:CommandT.Prompt
dash#add_keywords_for_filetype	vim/.vim/bundle/dash.vim/autoload/dash.vim	/^  function! dash#add_keywords_for_filetype(...)$/;"	f
dash#add_keywords_for_filetype	vim/.vim/bundle/dash.vim/autoload/dash.vim	/^function! dash#add_keywords_for_filetype(filetype) "{{{$/;"	f
dash#autocommands	vim/.vim/bundle/dash.vim/autoload/dash.vim	/^  function! dash#autocommands(...)$/;"	f
dash#autocommands	vim/.vim/bundle/dash.vim/autoload/dash.vim	/^function! dash#autocommands() "{{{$/;"	f
dash#complete	vim/.vim/bundle/dash.vim/autoload/dash.vim	/^  function! dash#complete(...)$/;"	f
dash#complete	vim/.vim/bundle/dash.vim/autoload/dash.vim	/^function! dash#complete(arglead, cmdline, cursorpos) "{{{$/;"	f
dash#defaults#module	vim/.vim/bundle/dash.vim/autoload/dash/defaults.vim	/^let dash#defaults#module = s:module$/;"	v
dash#keywords	vim/.vim/bundle/dash.vim/autoload/dash.vim	/^  function! dash#keywords(...)$/;"	f
dash#keywords	vim/.vim/bundle/dash.vim/autoload/dash.vim	/^function! dash#keywords(...) "{{{$/;"	f
dash#search	vim/.vim/bundle/dash.vim/autoload/dash.vim	/^  function! dash#search(...)$/;"	f
dash#search	vim/.vim/bundle/dash.vim/autoload/dash.vim	/^function! dash#search(bang, ...) "{{{$/;"	f
data	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^    uint8_t *data;  \/\/ payload$/;"	m	struct:__anon4	file:
default_open_command	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def default_open_command$/;"	f	class:CommandT.quickfix
define_commands	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands() abort$/;"	f
delay_saving_environment_on_first_plugin_load	tmux/.tmux/plugins/tmux-continuum/continuum.tmux	/^delay_saving_environment_on_first_plugin_load() {$/;"	f
delete	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def delete$/;"	f	class:CommandT.quickfix
delete	vim/.vim/bundle/command-t/ruby/command-t/mru.rb	/^      def delete$/;"	f	class:CommandT.MRU
delete!	vim/.vim/bundle/command-t/ruby/command-t/prompt.rb	/^    def delete!$/;"	f	class:CommandT.Prompt
depth	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    depth = -1$/;"	v	class:Element
depth	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    depth = -1$/;"	v	class:Element
depth	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    depth = -1$/;"	v	class:Element
depth	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    depth = -1$/;"	v	class:Element
depth	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    depth = -1$/;"	v	class:Element
depth	vim/.vim/bundle/sparkup/sparkup.py	/^    depth = -1$/;"	v	class:Element
depth	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    depth = -1$/;"	v	class:Element
depth	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    depth = -1$/;"	v	class:Element
depth	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    depth = -1$/;"	v	class:Element
depth	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    depth = -1$/;"	v	class:Element
description	vim/.vim/bundle/command-t/vendor/vroom/setup.py	/^    description='Launch your vimscript tests',$/;"	v
detect_if_restoring_from_scratch	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^detect_if_restoring_from_scratch() {$/;"	f
detect_if_restoring_pane_contents	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^detect_if_restoring_pane_contents() {$/;"	f
dialect	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    dialect = None$/;"	v	class:Parser
dialect	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    dialect = None$/;"	v	class:Parser
dialect	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    dialect = None$/;"	v	class:Parser
dialect	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    dialect = None$/;"	v	class:Parser
dialect	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    dialect = None$/;"	v	class:Parser
dialect	vim/.vim/bundle/sparkup/sparkup.py	/^    dialect = None$/;"	v	class:Parser
dialect	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    dialect = None$/;"	v	class:Parser
dialect	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    dialect = None$/;"	v	class:Parser
dialect	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    dialect = None$/;"	v	class:Parser
dialect	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    dialect = None$/;"	v	class:Parser
diff_modifier	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
diff_restore	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
diff_window_count	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
diffoff	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff() abort$/;"	f
diffoff_all	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
diffthis	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis() abort$/;"	f
dirty	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^        dirty = True$/;"	v
dirty	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^dirty = False$/;"	v
disable	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.messages  # pylint: disable-msg=g-import-not-at-top$/;"	i
disable	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.shell  # pylint: disable-msg=g-import-not-at-top$/;"	i
display_help	tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^display_help() {$/;"	f
display_message	tmux/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^display_message() {$/;"	f
display_message	tmux/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^display_message() {$/;"	f
display_message	tmux/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^display_message() {$/;"	f
display_plugin_update_list	tmux/.tmux/plugins/tpm/bindings/update_plugins	/^display_plugin_update_list() {$/;"	f
dispose	vim/.vim/bundle/command-t/ruby/command-t/prompt.rb	/^    def dispose$/;"	f	class:CommandT.Prompt
dump_bash_history	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^dump_bash_history() {$/;"	f
dump_grouped_sessions	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^dump_grouped_sessions() {$/;"	f
dump_pane_contents	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^dump_pane_contents() {$/;"	f
dump_panes	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^dump_panes() {$/;"	f
dump_panes_raw	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^dump_panes_raw() {$/;"	f
dump_state	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^dump_state() {$/;"	f
dump_windows	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^dump_windows() {$/;"	f
dump_windows_raw	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^dump_windows_raw(){$/;"	f
echo_err	tmux/.tmux/plugins/tpm/scripts/helpers/shell_echo_functions.sh	/^echo_err() {$/;"	f
echo_err	tmux/.tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^echo_err() {$/;"	f
echo_ok	tmux/.tmux/plugins/tpm/scripts/helpers/shell_echo_functions.sh	/^echo_ok() {$/;"	f
echo_ok	tmux/.tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^echo_ok() {$/;"	f
end	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^  end = 'VroomEnd()'$/;"	v
end_message	tmux/.tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^end_message() {$/;"	f
enough_time_since_last_run_passed	tmux/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^enough_time_since_last_run_passed() {$/;"	f
ensure_appropriate_window_selection	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def ensure_appropriate_window_selection$/;"	f	class:CommandT.quickfix
ensure_cache_under_limit	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner.rb	/^      def ensure_cache_under_limit$/;"	f	class:CommandT.Scanner.FileScanner
ensure_tpm_path_exists	tmux/.tmux/plugins/tpm/scripts/helpers/utility.sh	/^ensure_tpm_path_exists() {$/;"	f
environment	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import vroom.environment$/;"	i
errorfile	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^errorfile = os.environ.get(vroom.shell.ERROR_FILENAME_VAR)$/;"	v
errors	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^    errors = pickle.load(f)$/;"	v
escape_for_single_quotes	vim/.vim/bundle/command-t/ruby/command-t/vim.rb	/^      def escape_for_single_quotes(str)$/;"	f	class:CommandT.VIM
evaluate	vim/.vim/bundle/command-t/spec/spec_helper.rb	/^    def evaluate(*args); end$/;"	f	class:VIM
execute	vim/.vim/bundle/L9/autoload/l9/async.py	/^    def execute(self, var_key, var_command, var_cwd, var_input, var_appends):$/;"	m	class:Asyncer
execute	vim/.vim/bundle/L9/autoload/l9/async.py	/^    def execute(self, worker):$/;"	m	class:Executor
exists?	vim/.vim/bundle/command-t/ruby/command-t/vim.rb	/^      def exists?(str)$/;"	f	class:CommandT.VIM
exit	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def exit(self):$/;"	m	class:Router
exit	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def exit(self):$/;"	m	class:Router
exit	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def exit(self):$/;"	m	class:Router
exit	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def exit(self):$/;"	m	class:Router
exit	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def exit(self):$/;"	m	class:Router
exit	vim/.vim/bundle/sparkup/sparkup.py	/^    def exit(self):$/;"	m	class:Router
exit	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def exit(self):$/;"	m	class:Router
exit	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def exit(self):$/;"	m	class:Router
exit	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def exit(self):$/;"	m	class:Router
exit	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def exit(self):$/;"	m	class:Router
exit_helper	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/tests/helpers/helpers.sh	/^exit_helper() {$/;"	f
exit_helper	tmux/.tmux/plugins/tmux-resurrect/tests/helpers/helpers.sh	/^exit_helper() {$/;"	f
exit_helper	tmux/.tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^exit_helper() {$/;"	f
exit_if_unsupported_version	tmux/.tmux/plugins/tmux-continuum/scripts/check_tmux_version.sh	/^exit_if_unsupported_version() {$/;"	f
exit_if_unsupported_version	tmux/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^exit_if_unsupported_version() {$/;"	f
exit_if_unsupported_version	tmux/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^exit_if_unsupported_version() {$/;"	f
exit_message	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/run_tests	/^exit_message() {$/;"	f
exit_message	tmux/.tmux/plugins/tmux-resurrect/run_tests	/^exit_message() {$/;"	f
exit_message	tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^exit_message() {$/;"	f
exit_safely_if_empty_ppid	tmux/.tmux/plugins/tmux-resurrect/save_command_strategies/gdb.sh	/^exit_safely_if_empty_ppid() {$/;"	f
exit_safely_if_empty_ppid	tmux/.tmux/plugins/tmux-resurrect/save_command_strategies/pgrep.sh	/^exit_safely_if_empty_ppid() {$/;"	f
exit_safely_if_empty_ppid	tmux/.tmux/plugins/tmux-resurrect/save_command_strategies/ps.sh	/^exit_safely_if_empty_ppid() {$/;"	f
exit_value_helper	tmux/.tmux/plugins/tpm/scripts/helpers/utility.sh	/^exit_value_helper() {$/;"	f
expand	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    expand = False$/;"	v	class:Element
expand	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    expand = False$/;"	v	class:Token
expand	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    expand = False$/;"	v	class:Element
expand	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    expand = False$/;"	v	class:Token
expand	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    expand = False$/;"	v	class:Element
expand	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    expand = False$/;"	v	class:Token
expand	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    expand = False$/;"	v	class:Element
expand	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    expand = False$/;"	v	class:Token
expand	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    expand = False$/;"	v	class:Element
expand	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    expand = False$/;"	v	class:Token
expand	vim/.vim/bundle/sparkup/sparkup.py	/^    expand = False$/;"	v	class:Element
expand	vim/.vim/bundle/sparkup/sparkup.py	/^    expand = False$/;"	v	class:Token
expand	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    expand = False$/;"	v	class:Element
expand	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    expand = False$/;"	v	class:Token
expand	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    expand = False$/;"	v	class:Element
expand	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    expand = False$/;"	v	class:Token
expand	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    expand = False$/;"	v	class:Element
expand	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    expand = False$/;"	v	class:Token
expand	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    expand = False$/;"	v	class:Element
expand	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    expand = False$/;"	v	class:Token
expand_path	vim/.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:expand_path(path) abort$/;"	f
extract_value	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/watchman_file_scanner.rb	/^        def extract_value(object, key = nil)$/;"	f	class:CommandT.Scanner.FileScanner.WatchmanFileScanner
fail_helper	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/tests/helpers/helpers.sh	/^fail_helper() {$/;"	f
fail_helper	tmux/.tmux/plugins/tmux-resurrect/tests/helpers/helpers.sh	/^fail_helper() {$/;"	f
fail_helper	tmux/.tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^fail_helper() {$/;"	f
fail_helper	tmux/.tmux/plugins/tpm/scripts/helpers/utility.sh	/^fail_helper() {$/;"	f
failed_tests	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^failed_tests = [w for w in writers if w.Status() != vroom.output.STATUS.PASS]$/;"	v
fetch_and_dump_grouped_sessions	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^fetch_and_dump_grouped_sessions(){$/;"	f
fetch_and_run_tmux_resurrect_restore_script	tmux/.tmux/plugins/tmux-continuum/scripts/continuum_restore.sh	/^fetch_and_run_tmux_resurrect_restore_script() {$/;"	f
fetch_and_run_tmux_resurrect_save_script	tmux/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^fetch_and_run_tmux_resurrect_save_script() {$/;"	f
fetch_scripts	vim/.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:fetch_scripts(to)$/;"	f
file_finder	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def file_finder$/;"	f	class:CommandT.quickfix.ensure_appropriate_window_selection
find	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def find(char)$/;"	f	class:CommandT.MatchWindow
first_window_num	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^first_window_num() {$/;"	f
flush	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def flush$/;"	f	class:CommandT.quickfix
flush	vim/.vim/bundle/command-t/ruby/command-t/finder/file_finder.rb	/^      def flush$/;"	f	class:CommandT.Finder.FileFinder
flush	vim/.vim/bundle/command-t/ruby/command-t/finder/tag_finder.rb	/^      def flush$/;"	f	class:CommandT.Finder.TagFinder
flush	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner.rb	/^      def flush$/;"	f	class:CommandT.Scanner.FileScanner
flush	vim/.vim/bundle/command-t/ruby/command-t/scanner/tag_scanner.rb	/^      def flush$/;"	f	class:CommandT.Scanner.TagScanner.paths
fnameescape	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
fnmatch	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^import fnmatch$/;"	i
focus	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def focus$/;"	f	class:CommandT.MatchWindow
focus	vim/.vim/bundle/command-t/ruby/command-t/prompt.rb	/^    def focus$/;"	f	class:CommandT.Prompt
fugitive	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#can_diffoff	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#can_diffoff(buf) abort$/;"	f
fugitive#cfile	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cfile() abort$/;"	f
fugitive#cwindow	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cwindow() abort$/;"	f
fugitive#detect	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#foldtext	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#git_commands	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_commands() abort$/;"	f
fugitive#git_version	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_version(...) abort$/;"	f
fugitive#head	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#reload_status	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#statusline	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive_blame	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_foldtext	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_foldtext$/;"	a
fugitive_remove	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_statusline	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_statusline$/;"	a
fugitive_temp	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
fugitive_utility	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_utility$/;"	a
full_command	tmux/.tmux/plugins/tmux-resurrect/save_command_strategies/gdb.sh	/^full_command() {$/;"	f
full_command	tmux/.tmux/plugins/tmux-resurrect/save_command_strategies/pgrep.sh	/^full_command() {$/;"	f
full_command	tmux/.tmux/plugins/tmux-resurrect/save_command_strategies/ps.sh	/^full_command() {$/;"	f
function	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
g	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.messages  # pylint: disable-msg=g-import-not-at-top$/;"	i
g	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.shell  # pylint: disable-msg=g-import-not-at-top$/;"	i
g:command_t_autoloaded	vim/.vim/bundle/command-t/autoload/commandt.vim	/^let g:command_t_autoloaded = 1$/;"	v
g:command_t_loaded	vim/.vim/bundle/command-t/plugin/command-t.vim	/^let g:command_t_loaded = 1$/;"	v
g:dash_autocommands	vim/.vim/bundle/dash.vim/plugin/dash.vim	/^  let g:dash_autocommands = 1$/;"	v
g:fugitive_browse_handlers	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_browse_handlers = []$/;"	v
g:fugitive_git_executable	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:loaded_autoload_l9	vim/.vim/bundle/L9/autoload/l9.vim	/^let g:loaded_autoload_l9 = 1$/;"	v
g:loaded_fugitive	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:sparkupExecuteMapping	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.vim	/^  let g:sparkupExecuteMapping = '<c-e>'$/;"	v
g:sparkupExecuteMapping	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.vim	/^  let g:sparkupExecuteMapping = '<c-e>'$/;"	v
g:sparkupExecuteMapping	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.vim	/^  let g:sparkupExecuteMapping = '<c-e>'$/;"	v
g:sparkupExecuteMapping	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.vim	/^  let g:sparkupExecuteMapping = '<c-e>'$/;"	v
g:sparkupExecuteMapping	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.vim	/^  let g:sparkupExecuteMapping = '<c-e>'$/;"	v
g:sparkupExecuteMapping	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.vim	/^  let g:sparkupExecuteMapping = '<c-e>'$/;"	v
g:sparkupExecuteMapping	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.vim	/^  let g:sparkupExecuteMapping = '<c-e>'$/;"	v
g:sparkupExecuteMapping	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.vim	/^  let g:sparkupExecuteMapping = '<c-e>'$/;"	v
g:sparkupMaps	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.vim	/^  let g:sparkupMaps = 1$/;"	v
g:sparkupMaps	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.vim	/^  let g:sparkupMaps = 1$/;"	v
g:sparkupMaps	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.vim	/^  let g:sparkupMaps = 1$/;"	v
g:sparkupMaps	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.vim	/^  let g:sparkupMaps = 1$/;"	v
g:sparkupMaps	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.vim	/^  let g:sparkupMaps = 1$/;"	v
g:sparkupMaps	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.vim	/^  let g:sparkupMaps = 1$/;"	v
g:sparkupMaps	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.vim	/^  let g:sparkupMaps = 1$/;"	v
g:sparkupMaps	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.vim	/^  let g:sparkupMaps = 1$/;"	v
g:sparkupMapsNormal	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.vim	/^  let g:sparkupMapsNormal = 0$/;"	v
g:sparkupMapsNormal	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.vim	/^  let g:sparkupMapsNormal = 0$/;"	v
g:sparkupMapsNormal	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.vim	/^  let g:sparkupMapsNormal = 0$/;"	v
g:sparkupMapsNormal	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.vim	/^  let g:sparkupMapsNormal = 0$/;"	v
g:sparkupMapsNormal	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.vim	/^  let g:sparkupMapsNormal = 0$/;"	v
g:sparkupMapsNormal	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.vim	/^  let g:sparkupMapsNormal = 0$/;"	v
g:sparkupMapsNormal	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.vim	/^  let g:sparkupMapsNormal = 0$/;"	v
g:sparkupMapsNormal	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.vim	/^  let g:sparkupMapsNormal = 0$/;"	v
g:sparkupNextMapping	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.vim	/^  let g:sparkupNextMapping = '<c-n>'$/;"	v
g:sparkupNextMapping	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.vim	/^  let g:sparkupNextMapping = '<c-n>'$/;"	v
g:sparkupNextMapping	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.vim	/^  let g:sparkupNextMapping = '<c-n>'$/;"	v
g:sparkupNextMapping	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.vim	/^  let g:sparkupNextMapping = '<c-n>'$/;"	v
g:sparkupNextMapping	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.vim	/^  let g:sparkupNextMapping = '<c-n>'$/;"	v
g:sparkupNextMapping	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.vim	/^  let g:sparkupNextMapping = '<c-n>'$/;"	v
g:sparkupNextMapping	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.vim	/^  let g:sparkupNextMapping = '<c-n>'$/;"	v
g:sparkupNextMapping	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.vim	/^  let g:sparkupNextMapping = '<c-n>'$/;"	v
get	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def get(self, attr):$/;"	m	class:Options
get	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def get(self, attr):$/;"	m	class:Options
get	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def get(self, attr):$/;"	m	class:Options
get	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def get(self, attr):$/;"	m	class:Options
get	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def get(self, attr):$/;"	m	class:Options
get	vim/.vim/bundle/sparkup/sparkup.py	/^    def get(self, attr):$/;"	m	class:Options
get	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def get(self, attr):$/;"	m	class:Options
get	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def get(self, attr):$/;"	m	class:Options
get	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def get(self, attr):$/;"	m	class:Options
get	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def get(self, attr):$/;"	m	class:Options
get_active_window_index	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^get_active_window_index() {$/;"	f
get_alternate_window_index	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^get_alternate_window_index() {$/;"	f
get_bool	vim/.vim/bundle/command-t/ruby/command-t/vim.rb	/^      def get_bool(name, default = nil)$/;"	f	class:CommandT.VIM
get_closing_tag	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def get_closing_tag(self):$/;"	m	class:Element
get_closing_tag	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def get_closing_tag(self):$/;"	m	class:Element
get_closing_tag	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def get_closing_tag(self):$/;"	m	class:Element
get_closing_tag	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def get_closing_tag(self):$/;"	m	class:Element
get_closing_tag	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def get_closing_tag(self):$/;"	m	class:Element
get_closing_tag	vim/.vim/bundle/sparkup/sparkup.py	/^    def get_closing_tag(self):$/;"	m	class:Element
get_closing_tag	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def get_closing_tag(self):$/;"	m	class:Element
get_closing_tag	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def get_closing_tag(self):$/;"	m	class:Element
get_closing_tag	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def get_closing_tag(self):$/;"	m	class:Element
get_closing_tag	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def get_closing_tag(self):$/;"	m	class:Element
get_current_origin_url	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:get_current_origin_url(bundle) abort$/;"	f
get_current_sha	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:get_current_sha(bundle)$/;"	f
get_cursor_highlight	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def get_cursor_highlight$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
get_default_tag	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def get_default_tag(self):$/;"	m	class:Element
get_default_tag	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def get_default_tag(self):$/;"	m	class:Element
get_default_tag	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def get_default_tag(self):$/;"	m	class:Element
get_default_tag	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def get_default_tag(self):$/;"	m	class:Element
get_default_tag	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def get_default_tag(self):$/;"	m	class:Element
get_default_tag	vim/.vim/bundle/sparkup/sparkup.py	/^    def get_default_tag(self):$/;"	m	class:Element
get_default_tag	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def get_default_tag(self):$/;"	m	class:Element
get_default_tag	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def get_default_tag(self):$/;"	m	class:Element
get_default_tag	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def get_default_tag(self):$/;"	m	class:Element
get_default_tag	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def get_default_tag(self):$/;"	m	class:Element
get_digits_from_string	tmux/.tmux/plugins/tmux-continuum/scripts/check_tmux_version.sh	/^get_digits_from_string() {$/;"	f
get_digits_from_string	tmux/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^get_digits_from_string() {$/;"	f
get_digits_from_string	tmux/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^get_digits_from_string() {$/;"	f
get_fullscreen_option_value	tmux/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_enable.sh	/^get_fullscreen_option_value() {$/;"	f
get_grouped_sessions	tmux/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^get_grouped_sessions() {$/;"	f
get_id	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptdef.rb	/^    def get_id$/;"	f
get_interval	tmux/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^get_interval() {$/;"	f
get_iterm_or_teminal_option_value	tmux/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_enable.sh	/^get_iterm_or_teminal_option_value() {$/;"	f
get_last_child	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def get_last_child(self):$/;"	m	class:Element
get_last_child	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def get_last_child(self):$/;"	m	class:Element
get_last_child	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def get_last_child(self):$/;"	m	class:Element
get_last_child	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def get_last_child(self):$/;"	m	class:Element
get_last_child	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def get_last_child(self):$/;"	m	class:Element
get_last_child	vim/.vim/bundle/sparkup/sparkup.py	/^    def get_last_child(self):$/;"	m	class:Element
get_last_child	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def get_last_child(self):$/;"	m	class:Element
get_last_child	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def get_last_child(self):$/;"	m	class:Element
get_last_child	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def get_last_child(self):$/;"	m	class:Element
get_last_child	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def get_last_child(self):$/;"	m	class:Element
get_list_or_string	vim/.vim/bundle/command-t/ruby/command-t/vim.rb	/^      def get_list_or_string(name)$/;"	f	class:CommandT.VIM
get_number	vim/.vim/bundle/command-t/ruby/command-t/vim.rb	/^      def get_number(name)$/;"	f	class:CommandT.VIM
get_opening_tag	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def get_opening_tag(self):$/;"	m	class:Element
get_opening_tag	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def get_opening_tag(self):$/;"	m	class:Element
get_opening_tag	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def get_opening_tag(self):$/;"	m	class:Element
get_opening_tag	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def get_opening_tag(self):$/;"	m	class:Element
get_opening_tag	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def get_opening_tag(self):$/;"	m	class:Element
get_opening_tag	vim/.vim/bundle/sparkup/sparkup.py	/^    def get_opening_tag(self):$/;"	m	class:Element
get_opening_tag	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def get_opening_tag(self):$/;"	m	class:Element
get_opening_tag	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def get_opening_tag(self):$/;"	m	class:Element
get_opening_tag	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def get_opening_tag(self):$/;"	m	class:Element
get_opening_tag	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def get_opening_tag(self):$/;"	m	class:Element
get_raw_sockname	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/watchman_file_scanner.rb	/^        def get_raw_sockname$/;"	f	class:CommandT.Scanner.FileScanner.WatchmanFileScanner
get_string	vim/.vim/bundle/command-t/ruby/command-t/vim.rb	/^      def get_string(name)$/;"	f	class:CommandT.VIM
get_tmux_option	tmux/.tmux/plugins/tmux-continuum/scripts/helpers.sh	/^get_tmux_option() {$/;"	f
get_tmux_option	tmux/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^get_tmux_option() {$/;"	f
get_tmux_option	tmux/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^get_tmux_option() {$/;"	f
get_tmux_option	tmux/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^get_tmux_option() {$/;"	f
get_tmux_option	tmux/.tmux/plugins/tpm/tpm	/^get_tmux_option() {$/;"	f
get_version	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptdef.rb	/^    def get_version$/;"	f
getopt	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^import getopt$/;"	i
getopt	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^import getopt$/;"	i
getopt	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^import getopt$/;"	i
getopt	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^import getopt$/;"	i
getopt	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^import getopt$/;"	i
getopt	vim/.vim/bundle/sparkup/sparkup.py	/^import getopt$/;"	i
getopt	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^import getopt$/;"	i
getopt	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^import getopt$/;"	i
getopt	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^import getopt$/;"	i
getopt	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^import getopt$/;"	i
github_url	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(opts, ...) abort$/;"	f
gitignore	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/setup	/^gitignore() {$/;"	f
gitignore	tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^gitignore() {$/;"	f
glob	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^import glob$/;"	i
global?	vim/.vim/bundle/command-t/ruby/command-t/settings.rb	/^    def global?(setting)$/;"	f	class:CommandT.Settings
grouped_sessions_format	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^grouped_sessions_format() {$/;"	f
gsub	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
guard	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def self.guard(method)$/;"	F	class:CommandT.Controller
handleFailedAssersion	vim/.vim/bundle/L9/plugin/l9.vim	/^  function s:handleFailedAssersion(expr)$/;"	f
handle_key	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def handle_key$/;"	f	class:CommandT.quickfix
handle_tmux_automatic_start	tmux/.tmux/plugins/tmux-continuum/continuum.tmux	/^handle_tmux_automatic_start() {$/;"	f
handled	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^      handled = True$/;"	v
handled	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^  handled = False$/;"	v
has	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def has(self, attr):$/;"	m	class:Options
has	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def has(self, attr):$/;"	m	class:Options
has	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def has(self, attr):$/;"	m	class:Options
has	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def has(self, attr):$/;"	m	class:Options
has	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def has(self, attr):$/;"	m	class:Options
has	vim/.vim/bundle/sparkup/sparkup.py	/^    def has(self, attr):$/;"	m	class:Options
has	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def has(self, attr):$/;"	m	class:Options
has	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def has(self, attr):$/;"	m	class:Options
has	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def has(self, attr):$/;"	m	class:Options
has	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def has(self, attr):$/;"	m	class:Options
has?	vim/.vim/bundle/command-t/ruby/command-t/vim.rb	/^      def has?(feature)$/;"	f	class:CommandT.VIM
has_custom_wild_ignore?	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner.rb	/^      def has_custom_wild_ignore?$/;"	f	class:CommandT.Scanner.FileScanner
has_doc	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:has_doc(rtp) abort$/;"	f
haystack_len	vim/.vim/bundle/command-t/ruby/command-t/match.c	/^    long    haystack_len;           \/\/ length of same$/;"	m	struct:__anon1	file:
haystack_p	vim/.vim/bundle/command-t/ruby/command-t/match.c	/^    char    *haystack_p;            \/\/ pointer to the path string to be searched$/;"	m	struct:__anon1	file:
header	vim/.vim/bundle/command-t/ruby/command-t/extconf.rb	/^def header(item)$/;"	f
help	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def help(self):$/;"	m	class:Router
help	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def help(self):$/;"	m	class:Router
help	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def help(self):$/;"	m	class:Router
help	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def help(self):$/;"	m	class:Router
help	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def help(self):$/;"	m	class:Router
help	vim/.vim/bundle/sparkup/sparkup.py	/^    def help(self):$/;"	m	class:Router
help	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def help(self):$/;"	m	class:Router
help	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def help(self):$/;"	m	class:Router
help	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def help(self):$/;"	m	class:Router
help	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def help(self):$/;"	m	class:Router
help_content	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    help_content = [$/;"	v	class:Router
help_content	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    help_content = [$/;"	v	class:Router
help_content	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    help_content = [$/;"	v	class:Router
help_content	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    help_content = [$/;"	v	class:Router
help_content	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    help_content = [$/;"	v	class:Router
help_content	vim/.vim/bundle/sparkup/sparkup.py	/^    help_content = [$/;"	v	class:Router
help_content	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    help_content = [$/;"	v	class:Router
help_content	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    help_content = [$/;"	v	class:Router
help_content	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    help_content = [$/;"	v	class:Router
help_content	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    help_content = [$/;"	v	class:Router
helptags	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:helptags(rtp) abort$/;"	f
hide	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def hide$/;"	f	class:CommandT
hide_cursor	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def hide_cursor$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
hijack	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^    hijack = controls[0]$/;"	v
import	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.messages  # pylint: disable-msg=g-import-not-at-top$/;"	i
import	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.shell  # pylint: disable-msg=g-import-not-at-top$/;"	i
indent	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    indent = ''$/;"	v	class:Parser
indent	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    indent = ''$/;"	v	class:Parser
indent	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    indent = ''$/;"	v	class:Parser
indent	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    indent = ''$/;"	v	class:Parser
indent	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    indent = ''$/;"	v	class:Parser
indent	vim/.vim/bundle/sparkup/sparkup.py	/^    indent = ''$/;"	v	class:Parser
indent	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    indent = ''$/;"	v	class:Parser
indent	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    indent = ''$/;"	v	class:Parser
indent	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    indent = ''$/;"	v	class:Parser
indent	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    indent = ''$/;"	v	class:Parser
init	vim/.vim/bundle/Vundle.vim/test/files/test.erl	/^init(_) ->$/;"	f	module:mmc_logmon_sup
initialize	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def initialize$/;"	f	class:CommandT
initialize	vim/.vim/bundle/command-t/ruby/command-t/finder.rb	/^    def initialize(path = Dir.pwd, options = {})$/;"	f	class:CommandT.Finder
initialize	vim/.vim/bundle/command-t/ruby/command-t/finder/buffer_finder.rb	/^      def initialize$/;"	f	class:CommandT.Finder.BufferFinder
initialize	vim/.vim/bundle/command-t/ruby/command-t/finder/file_finder.rb	/^      def initialize(path = Dir.pwd, options = {})$/;"	f	class:CommandT.Finder.FileFinder
initialize	vim/.vim/bundle/command-t/ruby/command-t/finder/jump_finder.rb	/^      def initialize$/;"	f	class:CommandT.Finder.JumpFinder
initialize	vim/.vim/bundle/command-t/ruby/command-t/finder/mru_buffer_finder.rb	/^      def initialize$/;"	f	class:CommandT.Finder.MRUBufferFinder
initialize	vim/.vim/bundle/command-t/ruby/command-t/finder/tag_finder.rb	/^      def initialize(options = {})$/;"	f	class:CommandT.Finder.TagFinder
initialize	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def initialize(options = {})$/;"	f	class:CommandT.MatchWindow
initialize	vim/.vim/bundle/command-t/ruby/command-t/prompt.rb	/^    def initialize(options = {})$/;"	f	class:CommandT.Prompt
initialize	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner.rb	/^      def initialize(path = Dir.pwd, options = {})$/;"	f	class:CommandT.Scanner.FileScanner
initialize	vim/.vim/bundle/command-t/ruby/command-t/scanner/tag_scanner.rb	/^      def initialize(options = {})$/;"	f	class:CommandT.Scanner.TagScanner
initialize	vim/.vim/bundle/command-t/ruby/command-t/settings.rb	/^    def initialize$/;"	f	class:CommandT.Settings
initialize	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptdef.rb	/^        def initialize(output=$stdout)$/;"	f	class:VimScriptDef.AppLog
initialize	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptdef.rb	/^    def initialize(config)$/;"	f
initialize	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptuploader.rb	/^        def initialize(output=$stdout)$/;"	f	class:VimScriptUploader.AppLog
initialize	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptuploader.rb	/^    def initialize(config, args)$/;"	f
install_plugin	tmux/.tmux/plugins/tpm/scripts/install_plugins.sh	/^install_plugin() {$/;"	f
install_plugins	tmux/.tmux/plugins/tpm/scripts/install_plugins.sh	/^install_plugins() {$/;"	f
install_tmux_plugin_under_test_helper	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/tests/helpers/helpers.sh	/^install_tmux_plugin_under_test_helper() {$/;"	f
install_tmux_plugin_under_test_helper	tmux/.tmux/plugins/tmux-resurrect/tests/helpers/helpers.sh	/^install_tmux_plugin_under_test_helper() {$/;"	f
install_tmux_plugin_under_test_helper	tmux/.tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^install_tmux_plugin_under_test_helper() {$/;"	f
instaweb_url	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(opts) abort$/;"	f
is_fatal	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  is_fatal = False$/;"	v	class:Quit
is_fatal	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^  is_fatal = True$/;"	v	class:ServerQuit
is_line_type	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^is_line_type() {$/;"	f
is_osx	tmux/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start.sh	/^is_osx() {$/;"	f
is_osx	tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^is_osx() {$/;"	f
is_own_buffer	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def is_own_buffer(buffer_number)$/;"	f	class:CommandT
is_pane_registered_as_existing	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^is_pane_registered_as_existing() {$/;"	f
is_restoring_from_scratch	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^is_restoring_from_scratch() {$/;"	f
is_restoring_pane_contents	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^is_restoring_pane_contents() {$/;"	f
is_session_grouped	tmux/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^is_session_grouped() {$/;"	f
is_tmux_automatic_start_enabled	tmux/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start.sh	/^is_tmux_automatic_start_enabled() {$/;"	f
iteritems	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^def iteritems(obj):$/;"	f
iteritems	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^def iteritems(obj):$/;"	f
iteritems	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^def iteritems(obj):$/;"	f
iteritems	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^def iteritems(obj):$/;"	f
iteritems	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^def iteritems(obj):$/;"	f
iteritems	vim/.vim/bundle/sparkup/sparkup.py	/^def iteritems(obj):$/;"	f
iteritems	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^def iteritems(obj):$/;"	f
iteritems	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^def iteritems(obj):$/;"	f
iteritems	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^def iteritems(obj):$/;"	f
iteritems	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^def iteritems(obj):$/;"	f
iterm_terminal	tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^iterm_terminal() {$/;"	f
itertools	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^import itertools$/;"	i
json	vim/.vim/bundle/command-t/vendor/vroom/scripts/respond.vroomfaker	/^import json$/;"	i
json	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^import json$/;"	i
json	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^import json$/;"	i
jump_finder	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def jump_finder$/;"	f	class:CommandT.quickfix.ensure_appropriate_window_selection
jumps	vim/.vim/bundle/command-t/ruby/command-t/scanner/jump_scanner.rb	/^      def jumps$/;"	f	class:CommandT.Scanner.JumpScanner
just_started_tmux_server	tmux/.tmux/plugins/tmux-continuum/continuum.tmux	/^just_started_tmux_server() {$/;"	f
key_binding_not_changed	tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^key_binding_not_changed() {$/;"	f
key_binding_not_set	tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^key_binding_not_set() {$/;"	f
kill	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^  kill = ['vim', '--servername', args.servername, '--remote-expr', end]$/;"	v
l9#async#execute	vim/.vim/bundle/L9/autoload/l9/async.vim	/^function l9#async#execute(key, cmd, cwd, input, appends)$/;"	f
l9#async#listActiveWorkers	vim/.vim/bundle/L9/autoload/l9/async.vim	/^function l9#async#listActiveWorkers()$/;"	f
l9#async#listWorkers	vim/.vim/bundle/L9/autoload/l9/async.vim	/^function l9#async#listWorkers()$/;"	f
l9#async#read	vim/.vim/bundle/L9/autoload/l9/async.vim	/^function l9#async#read(key)$/;"	f
l9#completeForInputHl	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#completeForInputHl(lead, line, pos)$/;"	f
l9#concat	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#concat(items)$/;"	f
l9#concatPaths	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#concatPaths(paths)$/;"	f
l9#convertWildcardToRegexp	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#convertWildcardToRegexp(expr)$/;"	f
l9#defineVariableDefault	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#defineVariableDefault(name, default)$/;"	f
l9#deleteAllBuffersExcept	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#deleteAllBuffersExcept(files)$/;"	f
l9#echoHl	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#echoHl(hl, msg, prefix, addingHistory)$/;"	f
l9#filterWithLimit	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#filterWithLimit(items, expr, limit)$/;"	f
l9#getPathSeparator	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#getPathSeparator()$/;"	f
l9#getSelectedText	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#getSelectedText()$/;"	f
l9#getVersion	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#getVersion()$/;"	f
l9#grepBuffers	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#grepBuffers(pattern, bufNrs)$/;"	f
l9#grepFiles	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#grepFiles(pattern, files)$/;"	f
l9#guardScriptLoading	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#guardScriptLoading(path, vimVersion, l9Version, exprs)$/;"	f
l9#hash224	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#hash224(str)$/;"	f
l9#inputHl	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#inputHl(hl, ...)$/;"	f
l9#isCompatible	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#isCompatible(ver)$/;"	f
l9#loadFilesToBuffers	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#loadFilesToBuffers(files)$/;"	f
l9#loadScript	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#loadScript(text)$/;"	f
l9#modifyPathRelativeToDir	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#modifyPathRelativeToDir(path, dir)$/;"	f
l9#moveToBufferWindowInCurrentTabpage	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#moveToBufferWindowInCurrentTabpage(bufNr)$/;"	f
l9#moveToBufferWindowInOtherTabpage	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#moveToBufferWindowInOtherTabpage(bufNr)$/;"	f
l9#notifyBalloonly	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#notifyBalloonly(msg)$/;"	f
l9#notifyExternally	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#notifyExternally(msg)$/;"	f
l9#notifyScreen	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#notifyScreen(msg)$/;"	f
l9#notifyTmux	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#notifyTmux(msg)$/;"	f
l9#placeSign	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#placeSign(linehl, text, texthl, locations)$/;"	f
l9#quickfix#compareEntries	vim/.vim/bundle/L9/autoload/l9/quickfix.vim	/^function l9#quickfix#compareEntries(e0, e1)$/;"	f
l9#quickfix#isWindowOpened	vim/.vim/bundle/L9/autoload/l9/quickfix.vim	/^function l9#quickfix#isWindowOpened()$/;"	f
l9#quickfix#openIfNotEmpty	vim/.vim/bundle/L9/autoload/l9/quickfix.vim	/^function l9#quickfix#openIfNotEmpty(onlyRecognized, holdCursor)$/;"	f
l9#quickfix#placeSign	vim/.vim/bundle/L9/autoload/l9/quickfix.vim	/^function l9#quickfix#placeSign()$/;"	f
l9#quickfix#setMakeResult	vim/.vim/bundle/L9/autoload/l9/quickfix.vim	/^function l9#quickfix#setMakeResult(lines)$/;"	f
l9#quickfix#sort	vim/.vim/bundle/L9/autoload/l9/quickfix.vim	/^function l9#quickfix#sort()$/;"	f
l9#quickfix#toggleWindow	vim/.vim/bundle/L9/autoload/l9/quickfix.vim	/^function l9#quickfix#toggleWindow()$/;"	f
l9#readFile	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#readFile(...)$/;"	f
l9#removeIf	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#removeIf(items, expr)$/;"	f
l9#removeLinesBetween	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#removeLinesBetween(lines, begin, end)$/;"	f
l9#shiftWinNextTabpage	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#shiftWinNextTabpage()$/;"	f
l9#shiftWinPrevTabpage	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#shiftWinPrevTabpage()$/;"	f
l9#snipHead	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#snipHead(str, len, mask)$/;"	f
l9#snipMid	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#snipMid(str, len, mask)$/;"	f
l9#snipTail	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#snipTail(str, len, mask)$/;"	f
l9#tempbuffer#close	vim/.vim/bundle/L9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#close(bufname)$/;"	f
l9#tempbuffer#isOpen	vim/.vim/bundle/L9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#isOpen(bufname)$/;"	f
l9#tempbuffer#moveTo	vim/.vim/bundle/L9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#moveTo(bufname)$/;"	f
l9#tempbuffer#openReadOnly	vim/.vim/bundle/L9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openReadOnly(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempbuffer#openScratch	vim/.vim/bundle/L9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openScratch(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempbuffer#openWritable	vim/.vim/bundle/L9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openWritable(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempvariables#end	vim/.vim/bundle/L9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#end(group)$/;"	f
l9#tempvariables#getList	vim/.vim/bundle/L9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#getList(group)$/;"	f
l9#tempvariables#set	vim/.vim/bundle/L9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#set(group, name, value)$/;"	f
l9#tempvariables#setList	vim/.vim/bundle/L9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#setList(group, variables)$/;"	f
l9#unique	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#unique(items)$/;"	f
l9#uniqueStably	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#uniqueStably(items)$/;"	f
l9#writeAll	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#writeAll()$/;"	f
l9#writeFile	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#writeFile(...)$/;"	f
l9#zip	vim/.vim/bundle/L9/autoload/l9.vim	/^function l9#zip(items)$/;"	f
last	vim/.vim/bundle/command-t/ruby/command-t/mru.rb	/^      def last$/;"	f	class:CommandT.MRU
last_child	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    last_child = property(get_last_child)$/;"	v	class:Element
last_child	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    last_child = property(get_last_child)$/;"	v	class:Element
last_child	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    last_child = property(get_last_child)$/;"	v	class:Element
last_child	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    last_child = property(get_last_child)$/;"	v	class:Element
last_child	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    last_child = property(get_last_child)$/;"	v	class:Element
last_child	vim/.vim/bundle/sparkup/sparkup.py	/^    last_child = property(get_last_child)$/;"	v	class:Element
last_child	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    last_child = property(get_last_child)$/;"	v	class:Element
last_child	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    last_child = property(get_last_child)$/;"	v	class:Element
last_child	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    last_child = property(get_last_child)$/;"	v	class:Element
last_child	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    last_child = property(get_last_child)$/;"	v	class:Element
last_resurrect_file	tmux/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^last_resurrect_file() {$/;"	f
last_save_file_differs_helper	tmux/.tmux/plugins/tmux-resurrect/tests/helpers/resurrect_helpers.sh	/^last_save_file_differs_helper() {$/;"	f
leave	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def leave$/;"	f	class:CommandT.quickfix
leave	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def leave$/;"	f	class:CommandT.MatchWindow
len	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^    size_t len;     \/\/ current length$/;"	m	struct:__anon4	file:
line	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def line(match_index)$/;"	f	class:CommandT.MatchWindow
line_contains_filename?	vim/.vim/bundle/command-t/ruby/command-t/scanner/jump_scanner.rb	/^      def line_contains_filename?(line)$/;"	f	class:CommandT.Scanner.JumpScanner
linechars	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
lines	vim/.vim/bundle/command-t/ruby/command-t/vim/screen.rb	/^        def lines$/;"	f	class:CommandT.VIM.Screen
list_files	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/git_file_scanner.rb	/^        def list_files(command)$/;"	f	class:CommandT.Scanner.FileScanner.GitFileScanner
list_matches	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def list_matches(options = {})$/;"	f	class:CommandT.quickfix
list_matches!	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def list_matches!$/;"	f	class:CommandT.quickfix
little_endian?	vim/.vim/bundle/command-t/spec/command-t/watchman/utils_spec.rb	/^  def little_endian?$/;"	f
load_dash_map	vim/.vim/bundle/dash.vim/autoload/dash.vim	/^function! s:load_dash_map() "{{{$/;"	f
load_scripts	vim/.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:load_scripts(bang)$/;"	f
load_string	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def load_string(self, str):$/;"	m	class:Parser
load_string	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def load_string(self, str):$/;"	m	class:Parser
load_string	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def load_string(self, str):$/;"	m	class:Parser
load_string	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def load_string(self, str):$/;"	m	class:Parser
load_string	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def load_string(self, str):$/;"	m	class:Parser
load_string	vim/.vim/bundle/sparkup/sparkup.py	/^    def load_string(self, str):$/;"	m	class:Parser
load_string	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def load_string(self, str):$/;"	m	class:Parser
load_string	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def load_string(self, str):$/;"	m	class:Parser
load_string	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def load_string(self, str):$/;"	m	class:Parser
load_string	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def load_string(self, str):$/;"	m	class:Parser
loaded_dash	vim/.vim/bundle/dash.vim/plugin/dash.vim	/^let loaded_dash = 1$/;"	v
loaded_taglist	vim/.vim/plugin/taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	vim/.vim/plugin/taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	vim/.vim/plugin/taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	vim/.vim/plugin/taglist.vim	/^let loaded_taglist = 'available'$/;"	v
lock	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def lock$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
log	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:log(str, ...) abort$/;"	f
logfile	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^logfile = os.environ.get(vroom.shell.LOG_FILENAME_VAR)$/;"	v
login	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptuploader.rb	/^    def login$/;"	f
logout	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptuploader.rb	/^    def logout$/;"	f	class:login
logs	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^    logs = pickle.load(f)$/;"	v
looped_symlink?	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/ruby_file_scanner.rb	/^        def looped_symlink?(path)$/;"	f	class:CommandT.Scanner.FileScanner.RubyFileScanner
mCommandT	vim/.vim/bundle/command-t/ruby/command-t/ext.c	/^VALUE mCommandT              = 0; \/\/ module CommandT$/;"	v
mCommandTWatchman	vim/.vim/bundle/command-t/ruby/command-t/ext.c	/^VALUE mCommandTWatchman      = 0; \/\/ module CommandT::Watchman$/;"	v
mCommandTWatchmanUtils	vim/.vim/bundle/command-t/ruby/command-t/ext.c	/^VALUE mCommandTWatchmanUtils = 0; \/\/ module CommandT::Watchman::Utils$/;"	v
main	tmux/.tmux/plugins/tmux-continuum/continuum.tmux	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-continuum/scripts/check_tmux_version.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-continuum/scripts/continuum_restore.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_disable.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_enable.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_iterm_start_tmux.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_terminal_start_tmux.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/run_framework_tests	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/run_tests	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/setup	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/tests/run_tests_in_isolation	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/tests/test_tmux_scripting.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/resurrect.tmux	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/run_tests	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/save_command_strategies/gdb.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/save_command_strategies/pgrep.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/save_command_strategies/ps.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/scripts/tmux_spinner.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/strategies/irb_default_strategy.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/strategies/nvim_session.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/strategies/vim_session.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/tests/run_tests_in_isolation	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/tests/test_resurrect_restore.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-resurrect/tests/test_resurrect_save.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^main() {$/;"	f
main	tmux/.tmux/plugins/tpm/bin/clean_plugins	/^main() {$/;"	f
main	tmux/.tmux/plugins/tpm/bin/install_plugins	/^main() {$/;"	f
main	tmux/.tmux/plugins/tpm/bin/update_plugins	/^main() {$/;"	f
main	tmux/.tmux/plugins/tpm/bindings/clean_plugins	/^main() {$/;"	f
main	tmux/.tmux/plugins/tpm/bindings/install_plugins	/^main() {$/;"	f
main	tmux/.tmux/plugins/tpm/bindings/update_plugins	/^main() {$/;"	f
main	tmux/.tmux/plugins/tpm/lib/tmux-test/run_framework_tests	/^main() {$/;"	f
main	tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^main() {$/;"	f
main	tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^main() {$/;"	f
main	tmux/.tmux/plugins/tpm/lib/tmux-test/tests/run_tests_in_isolation	/^main() {$/;"	f
main	tmux/.tmux/plugins/tpm/lib/tmux-test/tests/test_tmux_scripting.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tpm/scripts/clean_plugins.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tpm/scripts/install_plugins.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tpm/scripts/source_plugins.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tpm/scripts/update_plugin.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tpm/scripts/update_plugin_prompt_handler.sh	/^main() {$/;"	f
main	tmux/.tmux/plugins/tpm/tpm	/^main() {$/;"	f
make_sync_command	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:make_sync_command(bang, bundle) abort$/;"	f
management_group	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^management_group = parser.add_argument_group($/;"	v
manually_install_the_plugin	tmux/.tmux/plugins/tpm/tests/test_plugin_clean.sh	/^manually_install_the_plugin() {$/;"	f
manually_install_the_plugin	tmux/.tmux/plugins/tpm/tests/test_plugin_update.sh	/^manually_install_the_plugin() {$/;"	f
map	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def map(key, function, param = nil)$/;"	f	class:CommandT.quickfix.ensure_appropriate_window_selection
match_limit	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def match_limit$/;"	f	class:CommandT.quickfix.ensure_appropriate_window_selection
match_t	vim/.vim/bundle/command-t/ruby/command-t/match.h	/^} match_t;$/;"	t	typeref:struct:__anon2
match_text_for_idx	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def match_text_for_idx(idx)$/;"	f	class:CommandT.MatchWindow
match_thread	vim/.vim/bundle/command-t/ruby/command-t/matcher.c	/^void *match_thread(void *thread_args)$/;"	f
match_with_syntax_highlight	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def match_with_syntax_highlight(match)$/;"	f	class:CommandT.MatchWindow
matcher	vim/.vim/bundle/command-t/spec/command-t/matcher_spec.rb	/^  def matcher(*paths)$/;"	f
matches	vim/.vim/bundle/command-t/ruby/command-t/matcher.c	/^    match_t *matches;$/;"	m	struct:__anon3	file:
matches=	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def matches=(matches)$/;"	f	class:CommandT.MatchWindow
matchinfo_t	vim/.vim/bundle/command-t/ruby/command-t/match.c	/^} matchinfo_t;$/;"	t	typeref:struct:__anon1	file:
max_height	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def max_height$/;"	f	class:CommandT.quickfix
max_lines	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def max_lines$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
max_score_per_char	vim/.vim/bundle/command-t/ruby/command-t/match.c	/^    double  max_score_per_char;$/;"	m	struct:__anon1	file:
memo	vim/.vim/bundle/command-t/ruby/command-t/match.c	/^    double  *memo;                  \/\/ memoization$/;"	m	struct:__anon1	file:
messages	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^import vroom.messages$/;"	i
messages	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.messages  # pylint: disable-msg=g-import-not-at-top$/;"	i
messages	vim/.vim/bundle/command-t/vendor/vroom/vroom/environment.py	/^import vroom.messages$/;"	i
messages	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^import vroom.messages$/;"	i
min_height	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def min_height$/;"	f	class:CommandT.quickfix
mmc_logmon_sup	vim/.vim/bundle/Vundle.vim/test/files/test.erl	/^-module(mmc_logmon_sup).$/;"	m
moveToOtherTabpageOpeningBuffer	vim/.vim/bundle/L9/autoload/l9.vim	/^function s:moveToOtherTabpageOpeningBuffer(bufNr)$/;"	f
move_cursor_to_selected_line	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def move_cursor_to_selected_line$/;"	f	class:CommandT.MatchWindow
mru_finder	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def mru_finder$/;"	f	class:CommandT.quickfix.ensure_appropriate_window_selection
msg	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.messages  # pylint: disable-msg=g-import-not-at-top$/;"	i
msg	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.shell  # pylint: disable-msg=g-import-not-at-top$/;"	i
multiplier	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    multiplier = 1$/;"	v	class:Token
multiplier	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    multiplier = 1$/;"	v	class:Token
multiplier	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    multiplier = 1$/;"	v	class:Token
multiplier	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    multiplier = 1$/;"	v	class:Token
multiplier	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    multiplier = 1$/;"	v	class:Token
multiplier	vim/.vim/bundle/sparkup/sparkup.py	/^    multiplier = 1$/;"	v	class:Token
multiplier	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    multiplier = 1$/;"	v	class:Token
multiplier	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    multiplier = 1$/;"	v	class:Token
multiplier	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    multiplier = 1$/;"	v	class:Token
multiplier	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    multiplier = 1$/;"	v	class:Token
name	vim/.vim/bundle/command-t/ruby/command-t/finder.rb	/^    def name$/;"	f	class:CommandT.Finder
name	vim/.vim/bundle/command-t/ruby/command-t/finder/buffer_finder.rb	/^      def name$/;"	f	class:CommandT.Finder.BufferFinder
name	vim/.vim/bundle/command-t/ruby/command-t/finder/file_finder.rb	/^      def name$/;"	f	class:CommandT.Finder.FileFinder
name	vim/.vim/bundle/command-t/ruby/command-t/finder/jump_finder.rb	/^      def name$/;"	f	class:CommandT.Finder.JumpFinder
name	vim/.vim/bundle/command-t/ruby/command-t/finder/mru_buffer_finder.rb	/^      def name$/;"	f	class:CommandT.Finder.MRUBufferFinder
name	vim/.vim/bundle/command-t/ruby/command-t/finder/tag_finder.rb	/^      def name$/;"	f	class:CommandT.Finder.TagFinder
name	vim/.vim/bundle/command-t/vendor/vroom/setup.py	/^    name='vroom',$/;"	v
name	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    name = ''$/;"	v	class:Element
name	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    name = ''$/;"	v	class:Token
name	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    name = ''$/;"	v	class:Element
name	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    name = ''$/;"	v	class:Token
name	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    name = ''$/;"	v	class:Element
name	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    name = ''$/;"	v	class:Token
name	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    name = ''$/;"	v	class:Element
name	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    name = ''$/;"	v	class:Token
name	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    name = ''$/;"	v	class:Element
name	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    name = ''$/;"	v	class:Token
name	vim/.vim/bundle/sparkup/sparkup.py	/^    name = ''$/;"	v	class:Element
name	vim/.vim/bundle/sparkup/sparkup.py	/^    name = ''$/;"	v	class:Token
name	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    name = ''$/;"	v	class:Element
name	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    name = ''$/;"	v	class:Token
name	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    name = ''$/;"	v	class:Element
name	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    name = ''$/;"	v	class:Token
name	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    name = ''$/;"	v	class:Element
name	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    name = ''$/;"	v	class:Token
name	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    name = ''$/;"	v	class:Element
name	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    name = ''$/;"	v	class:Token
nearest_ancestor	vim/.vim/bundle/command-t/ruby/command-t/scm_utilities.rb	/^    def nearest_ancestor(starting_directory, markers)$/;"	f	class:CommandT.SCMUtilities
needle_len	vim/.vim/bundle/command-t/ruby/command-t/match.c	/^    long    needle_len;             \/\/ length of same$/;"	m	struct:__anon1	file:
needle_p	vim/.vim/bundle/command-t/ruby/command-t/match.c	/^    char    *needle_p;              \/\/ pointer to search string (needle)$/;"	m	struct:__anon1	file:
neovim	vim/.vim/bundle/command-t/vendor/vroom/vroom/neovim_mod.py	/^import neovim$/;"	i
neovim_mod	vim/.vim/bundle/command-t/vendor/vroom/vroom/environment.py	/^        import vroom.neovim_mod as neovim_mod$/;"	i
never_ever_overwrite	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^never_ever_overwrite() {$/;"	f
never_show_dot_files	vim/.vim/bundle/command-t/ruby/command-t/match.c	/^    int     never_show_dot_files;   \/\/ boolean$/;"	m	struct:__anon1	file:
never_show_dot_files	vim/.vim/bundle/command-t/ruby/command-t/matcher.c	/^    VALUE never_show_dot_files;$/;"	m	struct:__anon3	file:
new_pane	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^new_pane() {$/;"	f
new_session	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^new_session() {$/;"	f
new_window	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^new_window() {$/;"	f
not	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.messages  # pylint: disable-msg=g-import-not-at-top$/;"	i
not	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.shell  # pylint: disable-msg=g-import-not-at-top$/;"	i
number_current_server_client_processes	tmux/.tmux/plugins/tmux-continuum/scripts/helpers.sh	/^number_current_server_client_processes() {$/;"	f
number_nonempty_lines_on_screen	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^number_nonempty_lines_on_screen() {$/;"	f
number_of_sessions	tmux/.tmux/plugins/tmux-continuum/continuum.tmux	/^number_of_sessions() {$/;"	f
number_of_windows	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/tests/test_tmux_scripting.sh	/^number_of_windows() {$/;"	f
number_of_windows	tmux/.tmux/plugins/tpm/lib/tmux-test/tests/test_tmux_scripting.sh	/^number_of_windows() {$/;"	f
number_tmux_processes_except_current_server	tmux/.tmux/plugins/tmux-continuum/scripts/helpers.sh	/^number_tmux_processes_except_current_server() {$/;"	f
nvim_session_file_exists	tmux/.tmux/plugins/tmux-resurrect/strategies/nvim_session.sh	/^nvim_session_file_exists() {$/;"	f
onBufDelete	vim/.vim/bundle/L9/autoload/l9/tempbuffer.vim	/^function s:onBufDelete(bufname)$/;"	f
onBufWriteCmd	vim/.vim/bundle/L9/autoload/l9/tempbuffer.vim	/^function s:onBufWriteCmd(bufname)$/;"	f
open_selection	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def open_selection(selection, options = {})$/;"	f	class:CommandT.quickfix.ensure_appropriate_window_selection
open_selection	vim/.vim/bundle/command-t/ruby/command-t/finder.rb	/^    def open_selection(command, selection, options = {})$/;"	f	class:CommandT.Finder
open_selection	vim/.vim/bundle/command-t/ruby/command-t/finder/tag_finder.rb	/^      def open_selection(command, selection, options = {})$/;"	f	class:CommandT.Finder.TagFinder
opening_tag	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    opening_tag = None$/;"	v	class:Element
opening_tag	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    opening_tag = None$/;"	v	class:Token
opening_tag	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    opening_tag = None$/;"	v	class:Element
opening_tag	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    opening_tag = None$/;"	v	class:Token
opening_tag	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    opening_tag = None$/;"	v	class:Element
opening_tag	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    opening_tag = None$/;"	v	class:Token
opening_tag	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    opening_tag = None$/;"	v	class:Element
opening_tag	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    opening_tag = None$/;"	v	class:Token
opening_tag	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    opening_tag = None$/;"	v	class:Element
opening_tag	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    opening_tag = None$/;"	v	class:Token
opening_tag	vim/.vim/bundle/sparkup/sparkup.py	/^    opening_tag = None$/;"	v	class:Element
opening_tag	vim/.vim/bundle/sparkup/sparkup.py	/^    opening_tag = None$/;"	v	class:Token
opening_tag	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    opening_tag = None$/;"	v	class:Element
opening_tag	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    opening_tag = None$/;"	v	class:Token
opening_tag	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    opening_tag = None$/;"	v	class:Element
opening_tag	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    opening_tag = None$/;"	v	class:Token
opening_tag	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    opening_tag = None$/;"	v	class:Element
opening_tag	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    opening_tag = None$/;"	v	class:Token
opening_tag	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    opening_tag = None$/;"	v	class:Element
opening_tag	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    opening_tag = None$/;"	v	class:Token
option_value_not_changed	tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^option_value_not_changed() {$/;"	f
options	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    options = None$/;"	v	class:Parser
options	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    options = {$/;"	v	class:Options
options	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    options = None$/;"	v	class:Parser
options	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    options = {$/;"	v	class:Options
options	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    options = None$/;"	v	class:Parser
options	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    options = {$/;"	v	class:Options
options	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    options = None$/;"	v	class:Parser
options	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    options = {$/;"	v	class:Options
options	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    options = None$/;"	v	class:Parser
options	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    options = {$/;"	v	class:Options
options	vim/.vim/bundle/sparkup/sparkup-unittest.py	/^    options = {$/;"	v	class:SparkupTest
options	vim/.vim/bundle/sparkup/sparkup.py	/^    options = None$/;"	v	class:Parser
options	vim/.vim/bundle/sparkup/sparkup.py	/^    options = {$/;"	v	class:Options
options	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    options = None$/;"	v	class:Parser
options	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    options = {$/;"	v	class:Options
options	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    options = None$/;"	v	class:Parser
options	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    options = {$/;"	v	class:Options
options	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    options = None$/;"	v	class:Parser
options	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    options = {$/;"	v	class:Options
options	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    options = None$/;"	v	class:Parser
options	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    options = {$/;"	v	class:Options
ordered_matches	vim/.vim/bundle/command-t/spec/command-t/matcher_spec.rb	/^    def ordered_matches(paths, query)$/;"	f
original_command_contains_session_flag	tmux/.tmux/plugins/tmux-resurrect/strategies/nvim_session.sh	/^original_command_contains_session_flag() {$/;"	f
original_command_contains_session_flag	tmux/.tmux/plugins/tmux-resurrect/strategies/vim_session.sh	/^original_command_contains_session_flag() {$/;"	f
original_command_wo_junk_vars	tmux/.tmux/plugins/tmux-resurrect/strategies/irb_default_strategy.sh	/^original_command_wo_junk_vars() {$/;"	f
os	vim/.vim/bundle/L9/autoload/l9/async.py	/^import os$/;"	i
os	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^import os$/;"	i
os	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^import os$/;"	i
os	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^import os.path$/;"	i
os	vim/.vim/bundle/command-t/vendor/vroom/vroom/neovim_mod.py	/^import os$/;"	i
os	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^import os$/;"	i
os	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^import os.path$/;"	i
output	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^    output = subprocess.check_output(['ps', '-A']).decode('utf-8')$/;"	v
output	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^import vroom.output$/;"	i
output	vim/.vim/bundle/command-t/vendor/vroom/vroom/environment.py	/^import vroom.output$/;"	i
output	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import vroom.output$/;"	i
packages	vim/.vim/bundle/command-t/vendor/vroom/setup.py	/^    packages=['vroom'],$/;"	v
padding_for_selected_match	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def padding_for_selected_match(str)$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
pane_content_files_cleanup	tmux/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^pane_content_files_cleanup() {$/;"	f
pane_content_files_restore_from_archive	tmux/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^pane_content_files_restore_from_archive() {$/;"	f
pane_contents_archive_file	tmux/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^pane_contents_archive_file() {$/;"	f
pane_contents_create_archive	tmux/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^pane_contents_create_archive() {$/;"	f
pane_contents_dir	tmux/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^pane_contents_dir() {$/;"	f
pane_contents_file	tmux/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^pane_contents_file() {$/;"	f
pane_contents_file_exists	tmux/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^pane_contents_file_exists() {$/;"	f
pane_creation_command	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^pane_creation_command() {$/;"	f
pane_exists	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^pane_exists() {$/;"	f
pane_format	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^pane_format() {$/;"	f
pane_full_command	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^pane_full_command() {$/;"	f
pane_has_any_content	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^pane_has_any_content() {$/;"	f
parent	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    parent = None$/;"	v	class:Element
parent	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    parent = None$/;"	v	class:Element
parent	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    parent = None$/;"	v	class:Element
parent	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    parent = None$/;"	v	class:Element
parent	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    parent = None$/;"	v	class:Element
parent	vim/.vim/bundle/sparkup/sparkup.py	/^    parent = None$/;"	v	class:Element
parent	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    parent = None$/;"	v	class:Element
parent	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    parent = None$/;"	v	class:Element
parent	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    parent = None$/;"	v	class:Element
parent	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    parent = None$/;"	v	class:Element
parse	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def parse(self, str=None, ret=None):$/;"	m	class:Router
parse	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def parse(self, str=None, ret=None):$/;"	m	class:Router
parse	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def parse(self, str=None, ret=None):$/;"	m	class:Router
parse	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def parse(self, str=None, ret=None):$/;"	m	class:Router
parse	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def parse(self, str=None, ret=None):$/;"	m	class:Router
parse	vim/.vim/bundle/sparkup/sparkup.py	/^    def parse(self, str=None, ret=None):$/;"	m	class:Router
parse	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def parse(self, str=None, ret=None):$/;"	m	class:Router
parse	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def parse(self, str=None, ret=None):$/;"	m	class:Router
parse	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def parse(self, str=None, ret=None):$/;"	m	class:Router
parse	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def parse(self, str=None, ret=None):$/;"	m	class:Router
parse_arguments	tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^parse_arguments() {$/;"	f
parse_name	vim/.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:parse_name(arg)$/;"	f
parse_options	vim/.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:parse_options(opts)$/;"	f
parser	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^parser = argparse.ArgumentParser(description='Vroom: launch your tests.')$/;"	v
parser	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    parser = None$/;"	v	class:Element
parser	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    parser = None$/;"	v	class:Token
parser	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    parser = None$/;"	v	class:Element
parser	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    parser = None$/;"	v	class:Token
parser	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    parser = None$/;"	v	class:Element
parser	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    parser = None$/;"	v	class:Token
parser	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    parser = None$/;"	v	class:Element
parser	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    parser = None$/;"	v	class:Token
parser	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    parser = None$/;"	v	class:Element
parser	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    parser = None$/;"	v	class:Token
parser	vim/.vim/bundle/sparkup/sparkup.py	/^    parser = None$/;"	v	class:Element
parser	vim/.vim/bundle/sparkup/sparkup.py	/^    parser = None$/;"	v	class:Token
parser	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    parser = None$/;"	v	class:Element
parser	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    parser = None$/;"	v	class:Token
parser	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    parser = None$/;"	v	class:Element
parser	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    parser = None$/;"	v	class:Token
parser	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    parser = None$/;"	v	class:Element
parser	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    parser = None$/;"	v	class:Token
parser	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    parser = None$/;"	v	class:Element
parser	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    parser = None$/;"	v	class:Token
path	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def path$/;"	f	class:CommandT
path	vim/.vim/bundle/command-t/ruby/command-t/match.h	/^    VALUE   path;$/;"	m	struct:__anon2
path	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^import os.path$/;"	i
path	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^import os.path$/;"	i
path=	vim/.vim/bundle/command-t/ruby/command-t/finder.rb	/^    def path=(path)$/;"	f	class:CommandT.Finder
path_count	vim/.vim/bundle/command-t/ruby/command-t/matcher.c	/^    long path_count;$/;"	m	struct:__anon3	file:
path_excluded?	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner.rb	/^      def path_excluded?(path, prefix_len = @prefix_len)$/;"	f	class:CommandT.Scanner.FileScanner
paths	vim/.vim/bundle/command-t/ruby/command-t/matcher.c	/^    VALUE paths;$/;"	m	struct:__anon3	file:
paths	vim/.vim/bundle/command-t/ruby/command-t/scanner/buffer_scanner.rb	/^      def paths$/;"	f	class:CommandT.Scanner.BufferScanner
paths	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner.rb	/^      def paths$/;"	f	class:CommandT.Scanner.FileScanner
paths	vim/.vim/bundle/command-t/ruby/command-t/scanner/jump_scanner.rb	/^      def paths$/;"	f	class:CommandT.Scanner.JumpScanner
paths	vim/.vim/bundle/command-t/ruby/command-t/scanner/mru_buffer_scanner.rb	/^      def paths$/;"	f	class:CommandT.Scanner.MRUBufferScanner
paths	vim/.vim/bundle/command-t/ruby/command-t/scanner/tag_scanner.rb	/^      def paths$/;"	f	class:CommandT.Scanner.TagScanner
paths!	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner.rb	/^      def paths!$/;"	f	class:CommandT.Scanner.FileScanner
paths!	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/find_file_scanner.rb	/^        def paths!$/;"	f	class:CommandT.Scanner.FileScanner.FindFileScanner
paths!	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/git_file_scanner.rb	/^        def paths!$/;"	f	class:CommandT.Scanner.FileScanner.GitFileScanner
paths!	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/ruby_file_scanner.rb	/^        def paths!$/;"	f	class:CommandT.Scanner.FileScanner.RubyFileScanner
paths!	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner/watchman_file_scanner.rb	/^        def paths!$/;"	f	class:CommandT.Scanner.FileScanner.WatchmanFileScanner
pickle	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^import pickle$/;"	i
pickle	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^import pickle$/;"	i
pid	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^      pid = int(line.split(None, 1)[0])$/;"	v
pipes	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^import pipes$/;"	i
plugin_already_installed	tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^plugin_already_installed() {$/;"	f
plugin_dir_exists	tmux/.tmux/plugins/tpm/scripts/source_plugins.sh	/^plugin_dir_exists() {$/;"	f
plugin_name_helper	tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^plugin_name_helper() {$/;"	f
plugin_path_helper	tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^plugin_path_helper() {$/;"	f
populate	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    populate = False$/;"	v	class:Element
populate	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    populate = False$/;"	v	class:Token
populate	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    populate = False$/;"	v	class:Element
populate	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    populate = False$/;"	v	class:Token
populate	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    populate = False$/;"	v	class:Element
populate	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    populate = False$/;"	v	class:Token
populate	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    populate = False$/;"	v	class:Element
populate	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    populate = False$/;"	v	class:Token
populate	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    populate = False$/;"	v	class:Element
populate	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    populate = False$/;"	v	class:Token
populate	vim/.vim/bundle/sparkup/sparkup.py	/^    populate = False$/;"	v	class:Element
populate	vim/.vim/bundle/sparkup/sparkup.py	/^    populate = False$/;"	v	class:Token
populate	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    populate = False$/;"	v	class:Element
populate	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    populate = False$/;"	v	class:Token
populate	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    populate = False$/;"	v	class:Element
populate	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    populate = False$/;"	v	class:Token
populate	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    populate = False$/;"	v	class:Element
populate	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    populate = False$/;"	v	class:Token
populate	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    populate = False$/;"	v	class:Element
populate	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    populate = False$/;"	v	class:Token
prefix	tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^prefix() {$/;"	f
prefix	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    prefix = ''$/;"	v	class:Parser
prefix	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    prefix = None$/;"	v	class:Element
prefix	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    prefix = ''$/;"	v	class:Parser
prefix	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    prefix = None$/;"	v	class:Element
prefix	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    prefix = ''$/;"	v	class:Parser
prefix	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    prefix = None$/;"	v	class:Element
prefix	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    prefix = ''$/;"	v	class:Parser
prefix	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    prefix = None$/;"	v	class:Element
prefix	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    prefix = ''$/;"	v	class:Parser
prefix	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    prefix = None$/;"	v	class:Element
prefix	vim/.vim/bundle/sparkup/sparkup.py	/^    prefix = ''$/;"	v	class:Parser
prefix	vim/.vim/bundle/sparkup/sparkup.py	/^    prefix = None$/;"	v	class:Element
prefix	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    prefix = ''$/;"	v	class:Parser
prefix	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    prefix = None$/;"	v	class:Element
prefix	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    prefix = ''$/;"	v	class:Parser
prefix	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    prefix = None$/;"	v	class:Element
prefix	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    prefix = ''$/;"	v	class:Parser
prefix	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    prefix = None$/;"	v	class:Element
prefix	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    prefix = ''$/;"	v	class:Parser
prefix	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    prefix = None$/;"	v	class:Element
prefix_without_ctrl	tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^prefix_without_ctrl() {$/;"	f
print_active_worker_keys	vim/.vim/bundle/L9/autoload/l9/async.py	/^    def print_active_worker_keys(self):$/;"	m	class:Asyncer
print_error	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def print_error(msg)$/;"	f	class:CommandT.MatchWindow
print_match	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def print_match(idx)$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
print_matches	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def print_matches$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
print_no_such_file_or_directory	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def print_no_such_file_or_directory$/;"	f	class:CommandT.MatchWindow
print_output	vim/.vim/bundle/L9/autoload/l9/async.py	/^    def print_output(self, var_key):$/;"	m	class:Asyncer
print_worker_keys	vim/.vim/bundle/L9/autoload/l9/async.py	/^    def print_worker_keys(self):$/;"	m	class:Asyncer
process	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:process(bang, cmd)$/;"	f
process	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptdef.rb	/^    def process$/;"	f
process	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptuploader.rb	/^    def process$/;"	f
process_default	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptdef.rb	/^    def process_default$/;"	f
process_print_saved_version	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptdef.rb	/^    def process_print_saved_version$/;"	f
process_print_version	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptdef.rb	/^    def process_print_version$/;"	f
processor_count	vim/.vim/bundle/command-t/ruby/command-t/util.rb	/^      def processor_count$/;"	f	class:CommandT.Util
processor_count!	vim/.vim/bundle/command-t/ruby/command-t/util.rb	/^      def processor_count!$/;"	f	class:CommandT.Util
prompt	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def prompt$/;"	f	class:CommandT.quickfix
ps_command_flags	tmux/.tmux/plugins/tmux-resurrect/save_command_strategies/ps.sh	/^ps_command_flags() {$/;"	f
pull_changes	tmux/.tmux/plugins/tpm/scripts/update_plugin.sh	/^pull_changes() {$/;"	f
put	vim/.vim/bundle/L9/autoload/l9/async.py	/^    def put(self, executor):$/;"	m	class:Worker
pwd	vim/.vim/bundle/command-t/ruby/command-t/vim.rb	/^      def pwd$/;"	f	class:CommandT.VIM
pylint	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.messages  # pylint: disable-msg=g-import-not-at-top$/;"	i
pylint	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.shell  # pylint: disable-msg=g-import-not-at-top$/;"	i
quickfix	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def quickfix$/;"	f	class:CommandT
re	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^import re$/;"	i
re	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^import re$/;"	i
re	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^import re$/;"	i
re	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^import re$/;"	i
re	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^import re$/;"	i
re	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^import re$/;"	i
re	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^import re$/;"	i
re	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^import re$/;"	i
re	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^import re$/;"	i
re	vim/.vim/bundle/sparkup/sparkup.py	/^import re$/;"	i
re	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^import re$/;"	i
re	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^import re$/;"	i
re	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^import re$/;"	i
re	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^import re$/;"	i
recall	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:recall() abort$/;"	f
record_output	vim/.vim/bundle/L9/autoload/l9/async.py	/^    def record_output(self, line):$/;"	m	class:Worker
recurse	vim/.vim/bundle/command-t/ruby/command-t/match.c	/^    int     recurse;                \/\/ boolean$/;"	m	struct:__anon1	file:
recurse	vim/.vim/bundle/command-t/ruby/command-t/matcher.c	/^    VALUE recurse;$/;"	m	struct:__anon3	file:
recursive_match	vim/.vim/bundle/command-t/ruby/command-t/match.c	/^double recursive_match(matchinfo_t *m,    \/\/ sharable meta-data$/;"	f
redraw	vim/.vim/bundle/command-t/ruby/command-t/prompt.rb	/^    def redraw$/;"	f	class:CommandT.Prompt
refresh	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def refresh$/;"	f	class:CommandT.quickfix
register_existing_pane	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^register_existing_pane() {$/;"	f
register_failing_tests	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/run_tests	/^register_failing_tests() {$/;"	f
register_failing_tests	tmux/.tmux/plugins/tmux-resurrect/run_tests	/^register_failing_tests() {$/;"	f
register_failing_tests	tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^register_failing_tests() {$/;"	f
register_for_key_presses	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def register_for_key_presses$/;"	f	class:CommandT.quickfix.ensure_appropriate_window_selection
relative_path_under_working_directory	vim/.vim/bundle/command-t/ruby/command-t/path_utilities.rb	/^    def relative_path_under_working_directory(path)$/;"	f	class:CommandT.PathUtilities
reload_tmux_environment	tmux/.tmux/plugins/tpm/scripts/helpers/tmux_utils.sh	/^reload_tmux_environment() {$/;"	f
remove_first_char	tmux/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^remove_first_char() {$/;"	f
remove_from_gitignore	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/setup	/^remove_from_gitignore() {$/;"	f
remove_from_gitignore	tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^remove_from_gitignore() {$/;"	f
render	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def render(self):$/;"	m	class:Element
render	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def render(self):$/;"	m	class:Parser
render	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def render(self):$/;"	m	class:Element
render	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def render(self):$/;"	m	class:Parser
render	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def render(self):$/;"	m	class:Element
render	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def render(self):$/;"	m	class:Parser
render	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def render(self):$/;"	m	class:Element
render	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def render(self):$/;"	m	class:Parser
render	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def render(self):$/;"	m	class:Element
render	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def render(self):$/;"	m	class:Parser
render	vim/.vim/bundle/sparkup/sparkup.py	/^    def render(self):$/;"	m	class:Element
render	vim/.vim/bundle/sparkup/sparkup.py	/^    def render(self):$/;"	m	class:Parser
render	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def render(self):$/;"	m	class:Element
render	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def render(self):$/;"	m	class:Parser
render	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def render(self):$/;"	m	class:Element
render	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def render(self):$/;"	m	class:Parser
render	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def render(self):$/;"	m	class:Element
render	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def render(self):$/;"	m	class:Parser
render	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def render(self):$/;"	m	class:Element
render	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def render(self):$/;"	m	class:Parser
repo	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_dir	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_head_ref	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
required	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    required = {$/;"	v	class:HtmlDialect
required	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    required = {}$/;"	v	class:Dialect
required	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    required = {}$/;"	v	class:XmlDialect
required	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    required = {$/;"	v	class:HtmlDialect
required	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    required = {}$/;"	v	class:Dialect
required	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    required = {}$/;"	v	class:XmlDialect
required	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    required = {$/;"	v	class:HtmlDialect
required	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    required = {}$/;"	v	class:Dialect
required	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    required = {}$/;"	v	class:XmlDialect
required	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    required = {$/;"	v	class:HtmlDialect
required	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    required = {}$/;"	v	class:Dialect
required	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    required = {}$/;"	v	class:XmlDialect
required	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    required = {$/;"	v	class:HtmlDialect
required	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    required = {}$/;"	v	class:Dialect
required	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    required = {}$/;"	v	class:XmlDialect
required	vim/.vim/bundle/sparkup/sparkup.py	/^    required = {$/;"	v	class:HtmlDialect
required	vim/.vim/bundle/sparkup/sparkup.py	/^    required = {}$/;"	v	class:Dialect
required	vim/.vim/bundle/sparkup/sparkup.py	/^    required = {}$/;"	v	class:XmlDialect
required	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    required = {$/;"	v	class:HtmlDialect
required	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    required = {}$/;"	v	class:Dialect
required	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    required = {}$/;"	v	class:XmlDialect
required	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    required = {$/;"	v	class:HtmlDialect
required	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    required = {}$/;"	v	class:Dialect
required	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    required = {}$/;"	v	class:XmlDialect
required	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    required = {$/;"	v	class:HtmlDialect
required	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    required = {}$/;"	v	class:Dialect
required	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    required = {}$/;"	v	class:XmlDialect
required	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    required = {$/;"	v	class:HtmlDialect
required	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    required = {}$/;"	v	class:Dialect
required	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    required = {}$/;"	v	class:XmlDialect
resize_to_true_full_screen	tmux/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_iterm_start_tmux.sh	/^resize_to_true_full_screen() {$/;"	f
resize_to_true_full_screen	tmux/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_terminal_start_tmux.sh	/^resize_to_true_full_screen() {$/;"	f
resize_window_to_full_screen	tmux/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_iterm_start_tmux.sh	/^resize_window_to_full_screen() {$/;"	f
resize_window_to_full_screen	tmux/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_terminal_start_tmux.sh	/^resize_window_to_full_screen() {$/;"	f
response	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^    response = hijack.Response(command)$/;"	v
restore	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/setup	/^restore() {$/;"	f
restore	tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^restore() {$/;"	f
restore	vim/.vim/bundle/command-t/ruby/command-t/settings.rb	/^    def restore$/;"	f	class:CommandT.Settings
restore_active_and_alternate_sessions	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_active_and_alternate_sessions() {$/;"	f
restore_active_and_alternate_windows	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_active_and_alternate_windows() {$/;"	f
restore_active_and_alternate_windows_for_grouped_sessions	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_active_and_alternate_windows_for_grouped_sessions() {$/;"	f
restore_active_pane_for_each_window	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_active_pane_for_each_window() {$/;"	f
restore_all_pane_processes	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_all_pane_processes() {$/;"	f
restore_all_panes	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_all_panes() {$/;"	f
restore_from_scratch_true	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_from_scratch_true() {$/;"	f
restore_grouped_session	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_grouped_session() {$/;"	f
restore_grouped_sessions	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_grouped_sessions() {$/;"	f
restore_pane	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_pane() {$/;"	f
restore_pane_contents_true	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_pane_contents_true() {$/;"	f
restore_pane_layout_for_each_window	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_pane_layout_for_each_window() {$/;"	f
restore_pane_process	tmux/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^restore_pane_process() {$/;"	f
restore_pane_processes_enabled	tmux/.tmux/plugins/tmux-resurrect/scripts/process_restore_helpers.sh	/^restore_pane_processes_enabled() {$/;"	f
restore_shell_history	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_shell_history() {$/;"	f
restore_state	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_state() {$/;"	f
restore_tmux_environment_and_save_again	tmux/.tmux/plugins/tmux-resurrect/tests/test_resurrect_restore.sh	/^restore_tmux_environment_and_save_again() {$/;"	f
restore_window_dimensions	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def restore_window_dimensions$/;"	f	class:CommandT.MatchWindow
restore_zoomed_windows	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^restore_zoomed_windows() {$/;"	f
resurrect_dir	tmux/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^resurrect_dir() {$/;"	f
resurrect_file_path	tmux/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^resurrect_file_path() {$/;"	f
resurrect_history_file	tmux/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^resurrect_history_file() {$/;"	f
return_is_own_buffer	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def return_is_own_buffer(buffer_number)$/;"	f	class:CommandT
root	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    root = None$/;"	v	class:Parser
root	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    root = None$/;"	v	class:Parser
root	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    root = None$/;"	v	class:Parser
root	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    root = None$/;"	v	class:Parser
root	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    root = None$/;"	v	class:Parser
root	vim/.vim/bundle/sparkup/sparkup.py	/^    root = None$/;"	v	class:Parser
root	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    root = None$/;"	v	class:Parser
root	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    root = None$/;"	v	class:Parser
root	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    root = None$/;"	v	class:Parser
root	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    root = None$/;"	v	class:Parser
roundtrip	vim/.vim/bundle/command-t/spec/command-t/watchman/utils_spec.rb	/^  def roundtrip(value)$/;"	f
router	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    router = 1$/;"	v	class:Options
router	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    router = 1$/;"	v	class:Options
router	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    router = 1$/;"	v	class:Options
router	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    router = 1$/;"	v	class:Options
router	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    router = 1$/;"	v	class:Options
router	vim/.vim/bundle/sparkup/sparkup.py	/^    router = 1$/;"	v	class:Options
router	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    router = 1$/;"	v	class:Options
router	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    router = 1$/;"	v	class:Options
router	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    router = 1$/;"	v	class:Options
router	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    router = 1$/;"	v	class:Options
rtp_add	vim/.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_add(dir) abort$/;"	f
rtp_add_a	vim/.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_add_a()$/;"	f
rtp_add_defaults	vim/.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_add_defaults()$/;"	f
rtp_rm	vim/.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_rm(dir) abort$/;"	f
rtp_rm_a	vim/.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_rm_a()$/;"	f
rtpath	vim/.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtpath(opts)$/;"	f
ruby_inspect	vim/.vim/bundle/command-t/ruby/command-t/ext.h	/^#define ruby_inspect(/;"	d
run	vim/.vim/bundle/L9/autoload/l9/async.py	/^    def run(self):$/;"	m	class:Worker
run	vim/.vim/bundle/sparkup/sparkup-unittest.py	/^    def run(self):$/;"	m	class:SparkupTest
run_tests	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/run_tests	/^run_tests() {$/;"	f
run_tests	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/tests/run_tests_in_isolation	/^run_tests() {$/;"	f
run_tests	tmux/.tmux/plugins/tmux-resurrect/run_tests	/^run_tests() {$/;"	f
run_tests	tmux/.tmux/plugins/tmux-resurrect/tests/run_tests_in_isolation	/^run_tests() {$/;"	f
run_tests	tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^run_tests() {$/;"	f
run_tests	tmux/.tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^run_tests() {$/;"	f
run_tests	tmux/.tmux/plugins/tpm/lib/tmux-test/tests/run_tests_in_isolation	/^run_tests() {$/;"	f
run_tests_on_virtual_machines	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/run_tests	/^run_tests_on_virtual_machines() {$/;"	f
run_tests_on_virtual_machines	tmux/.tmux/plugins/tmux-resurrect/run_tests	/^run_tests_on_virtual_machines() {$/;"	f
run_tests_on_virtual_machines	tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^run_tests_on_virtual_machines() {$/;"	f
run_tests_on_vm	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/run_tests	/^run_tests_on_vm() {$/;"	f
run_tests_on_vm	tmux/.tmux/plugins/tmux-resurrect/run_tests	/^run_tests_on_vm() {$/;"	f
run_tests_on_vm	tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^run_tests_on_vm() {$/;"	f
run_vagrant	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/run_tests	/^run_vagrant() {$/;"	f
run_vagrant	tmux/.tmux/plugins/tmux-resurrect/run_tests	/^run_vagrant() {$/;"	f
run_vagrant	tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^run_vagrant() {$/;"	f
runner	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^      runner = vroom.runner.Vroom(filename, args)$/;"	v
runner	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^import vroom.runner$/;"	i
s	vim/.vim/bundle/sparkup/sparkup-unittest.py	/^    s = SparkupTest()$/;"	v	class:SparkupTest
s:ASYNC_PY_PATH	vim/.vim/bundle/L9/autoload/l9/async.vim	/^let s:ASYNC_PY_PATH = fnamemodify(expand('<sfile>:p:h'), ':p') . 'async.py'$/;"	v
s:L9_VERSION_CURRENT	vim/.vim/bundle/L9/autoload/l9.vim	/^let s:L9_VERSION_CURRENT  = 101$/;"	v
s:L9_VERSION_PASSABLE	vim/.vim/bundle/L9/autoload/l9.vim	/^let s:L9_VERSION_PASSABLE = 101$/;"	v
s:Tlist_Skip_Refresh	vim/.vim/plugin/taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:VERSION_FACTOR	vim/.vim/bundle/L9/autoload/l9.vim	/^let s:VERSION_FACTOR = str2float('0.01')$/;"	v
s:abstract_prototype	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:buffer_prototype	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:bundle	vim/.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^let s:bundle = {}$/;"	v
s:commands	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:common_efm	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:common_efm = ''$/;"	v
s:cpo_save	vim/.vim/plugin/taglist.vim	/^    let s:cpo_save = &cpo$/;"	v
s:dataMap	vim/.vim/bundle/L9/autoload/l9/tempbuffer.vim	/^let s:dataMap = {}$/;"	v
s:deprecated	vim/.vim/bundle/command-t/autoload/commandt.vim	/^let s:deprecated = {$/;"	v
s:dir_for_worktree	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:git_versions	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:groups	vim/.vim/bundle/dash.vim/autoload/dash.vim	/^let s:groups = dash#defaults#module.groups$/;"	v
s:hash_colors	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:menu_char_prefix	vim/.vim/plugin/taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:module	vim/.vim/bundle/dash.vim/autoload/dash/defaults.vim	/^let s:module = {}$/;"	v
s:module	vim/.vim/bundle/dash.vim/autoload/dash/defaults.vim	/^let s:module.groups = {$/;"	v
s:origMap	vim/.vim/bundle/L9/autoload/l9/tempvariables.vim	/^let s:origMap = {}$/;"	v
s:repo_prototype	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:save_cpoptions	vim/.vim/bundle/dash.vim/plugin/dash.vim	/^let s:save_cpoptions = &cpoptions$/;"	v
s:temp_files	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:timerData	vim/.vim/bundle/L9/plugin/l9.vim	/^  let s:timerData = []$/;"	v
s:timerTagMaxLen	vim/.vim/bundle/L9/plugin/l9.vim	/^  let s:timerTagMaxLen = 0$/;"	v
s:tlist_app_name	vim/.vim/plugin/taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	vim/.vim/plugin/taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	vim/.vim/plugin/taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	vim/.vim/plugin/taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	vim/.vim/plugin/taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_ant_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_ant_settings = 'ant;p:projects;t:targets'$/;"	v
s:tlist_def_asm_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_aspperl_settings =$/;"	v
s:tlist_def_aspvbs_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_aspvbs_settings =$/;"	v
s:tlist_def_awk_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_basic_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_basic_settings =$/;"	v
s:tlist_def_beta_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_c_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_cobol_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cs_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_csh_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_d_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_d_settings = 'c++;n:namespace;v:variable;t:typedef;' .$/;"	v
s:tlist_def_dosbatch_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_dosbatch_settings = 'dosbatch;l:labels;v:variables'$/;"	v
s:tlist_def_eiffel_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_flex_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_flex_settings = 'flex;v:global;c:classes;p:properties;'.$/;"	v
s:tlist_def_fortran_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_go_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_go_settings = 'go;f:function;p:package;t:struct'$/;"	v
s:tlist_def_html_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:function'$/;"	v
s:tlist_def_java_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_javascript_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_javascript_settings =$/;"	v
s:tlist_def_lisp_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_matlab_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_matlab_settings = 'matlab;f:function'$/;"	v
s:tlist_def_ocamal_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_ocamal_settings = 'ocamal;M:module;v:global;t:type;'.$/;"	v
s:tlist_def_pascal_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_php_settings =$/;"	v
s:tlist_def_python_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_sql_settings = 'sql;f:functions;' .$/;"	v
s:tlist_def_tcl_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_tex_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_tex_settings = 'tex;c:chapters;s:sections;u:subsections;'.$/;"	v
s:tlist_def_vera_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vhdl_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_vhdl_settings = 'vhdl;c:constant;t:type;T:subtype;r:record;e:entity;f:function;p:procedure;P:package'$/;"	v
s:tlist_def_vim_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_vim_settings =$/;"	v
s:tlist_def_yacc_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	vim/.vim/plugin/taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	vim/.vim/plugin/taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	vim/.vim/plugin/taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	vim/.vim/plugin/taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_names	vim/.vim/plugin/taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_ftype_count	vim/.vim/plugin/taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	vim/.vim/plugin/taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	vim/.vim/plugin/taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	vim/.vim/plugin/taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	vim/.vim/plugin/taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_win_maximized	vim/.vim/plugin/taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_winsize_chgd	vim/.vim/plugin/taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:worktree_for_dir	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
sanitize_path_string	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def sanitize_path_string(str)$/;"	f	class:CommandT.quickfix
save_all	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^save_all() {$/;"	f
save_bash_history_option_on	tmux/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^save_bash_history_option_on() {$/;"	f
save_shell_history	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^save_shell_history() {$/;"	f
scm_markers	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def scm_markers$/;"	f	class:CommandT.quickfix
score	vim/.vim/bundle/command-t/ruby/command-t/match.h	/^    double  score;$/;"	m	struct:__anon2
script_run_helper	tmux/.tmux/plugins/tpm/tests/helpers/tpm.sh	/^script_run_helper() {$/;"	f
scripts	vim/.vim/bundle/command-t/vendor/vroom/setup.py	/^    scripts=[$/;"	v
search	vim/.vim/bundle/dash.vim/autoload/dash.vim	/^function! s:search(term, keywords) "{{{$/;"	f
select	vim/.vim/bundle/command-t/ruby/command-t/vim/window.rb	/^        def select(window)$/;"	f	class:CommandT.VIM.Window
select_next	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def select_next$/;"	f	class:CommandT.quickfix
select_next	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def select_next$/;"	f	class:CommandT.MatchWindow
select_prev	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def select_prev$/;"	f	class:CommandT.quickfix
select_prev	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def select_prev$/;"	f	class:CommandT.MatchWindow
selection	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def selection$/;"	f	class:CommandT.MatchWindow
server_option_value_not_changed	tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^server_option_value_not_changed() {$/;"	f
session_exists	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^session_exists() {$/;"	f
set	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def set(setting, value)$/;"	f	class:CommandT.MatchWindow
set	vim/.vim/bundle/command-t/ruby/command-t/settings.rb	/^    def set(setting, value)$/;"	f	class:CommandT.Settings
set_bool	vim/.vim/bundle/command-t/ruby/command-t/settings.rb	/^    def set_bool(setting, value)$/;"	f	class:CommandT.Settings
set_default_strategies	tmux/.tmux/plugins/tmux-resurrect/resurrect.tmux	/^set_default_strategies() {$/;"	f
set_default_tpm_path	tmux/.tmux/plugins/tpm/tpm	/^set_default_tpm_path() {$/;"	f
set_exit_val_to_false	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/tests/run_tests_in_isolation	/^set_exit_val_to_false() {$/;"	f
set_exit_val_to_false	tmux/.tmux/plugins/tmux-resurrect/tests/run_tests_in_isolation	/^set_exit_val_to_false() {$/;"	f
set_exit_val_to_false	tmux/.tmux/plugins/tpm/lib/tmux-test/tests/run_tests_in_isolation	/^set_exit_val_to_false() {$/;"	f
set_last_save_timestamp	tmux/.tmux/plugins/tmux-continuum/scripts/shared.sh	/^set_last_save_timestamp() {$/;"	f
set_level	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptdef.rb	/^        def self.set_level$/;"	F	class:VimScriptDef.AppLog
set_level	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptuploader.rb	/^        def self.set_level$/;"	F	class:VimScriptUploader.AppLog
set_number	vim/.vim/bundle/command-t/ruby/command-t/settings.rb	/^    def set_number(setting, value)$/;"	f	class:CommandT.Settings
set_restore_bindings	tmux/.tmux/plugins/tmux-resurrect/resurrect.tmux	/^set_restore_bindings() {$/;"	f
set_save_bindings	tmux/.tmux/plugins/tmux-resurrect/resurrect.tmux	/^set_save_bindings() {$/;"	f
set_screen_dimensions_helper	tmux/.tmux/plugins/tmux-resurrect/tests/helpers/resurrect_helpers.sh	/^set_screen_dimensions_helper() {$/;"	f
set_script_path_options	tmux/.tmux/plugins/tmux-resurrect/resurrect.tmux	/^set_script_path_options() {$/;"	f
set_status	vim/.vim/bundle/command-t/ruby/command-t/prompt.rb	/^    def set_status(*args)$/;"	f	class:CommandT.Prompt
set_string	vim/.vim/bundle/command-t/spec/command-t/controller_spec.rb	/^    def set_string(name, value)$/;"	f
set_tmux_conf_helper	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/tests/helpers/helpers.sh	/^set_tmux_conf_helper() {$/;"	f
set_tmux_conf_helper	tmux/.tmux/plugins/tmux-resurrect/tests/helpers/helpers.sh	/^set_tmux_conf_helper() {$/;"	f
set_tmux_conf_helper	tmux/.tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^set_tmux_conf_helper() {$/;"	f
set_tmux_option	tmux/.tmux/plugins/tmux-continuum/scripts/helpers.sh	/^set_tmux_option() {$/;"	f
set_tpm_key_bindings	tmux/.tmux/plugins/tpm/tpm	/^set_tpm_key_bindings() {$/;"	f
set_tpm_path	tmux/.tmux/plugins/tpm/tpm	/^set_tpm_path() {$/;"	f
set_up_autocmds	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def set_up_autocmds$/;"	f	class:CommandT.quickfix.ensure_appropriate_window_selection
set_wild_ignore	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner.rb	/^      def set_wild_ignore(&block)$/;"	f	class:CommandT.Scanner.FileScanner
setup	vim/.vim/bundle/command-t/vendor/vroom/setup.py	/^from distutils.core import setup$/;"	i
setup_before_restore	tmux/.tmux/plugins/tmux-resurrect/tests/test_resurrect_restore.sh	/^setup_before_restore() {$/;"	f
shell	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^  shell = os.environ['SHELL']$/;"	v
shell	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^import vroom.shell$/;"	i
shell	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^import vroom.shell$/;"	i
shell	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.shell  # pylint: disable-msg=g-import-not-at-top$/;"	i
shell	vim/.vim/bundle/command-t/vendor/vroom/vroom/environment.py	/^import vroom.shell$/;"	i
shell	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^import vroom.shell$/;"	i
shell	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import vroom.shell$/;"	i
shellesc	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellslash	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path) abort$/;"	f
short_tags	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    short_tags = ($/;"	v	class:HtmlDialect
short_tags	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    short_tags = ()$/;"	v	class:Dialect
short_tags	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    short_tags = ()$/;"	v	class:XmlDialect
short_tags	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    short_tags = ($/;"	v	class:HtmlDialect
short_tags	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    short_tags = ()$/;"	v	class:Dialect
short_tags	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    short_tags = ()$/;"	v	class:XmlDialect
short_tags	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    short_tags = ($/;"	v	class:HtmlDialect
short_tags	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    short_tags = ()$/;"	v	class:Dialect
short_tags	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    short_tags = ()$/;"	v	class:XmlDialect
short_tags	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    short_tags = ($/;"	v	class:HtmlDialect
short_tags	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    short_tags = ()$/;"	v	class:Dialect
short_tags	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    short_tags = ()$/;"	v	class:XmlDialect
short_tags	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    short_tags = ($/;"	v	class:HtmlDialect
short_tags	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    short_tags = ()$/;"	v	class:Dialect
short_tags	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    short_tags = ()$/;"	v	class:XmlDialect
short_tags	vim/.vim/bundle/sparkup/sparkup.py	/^    short_tags = ($/;"	v	class:HtmlDialect
short_tags	vim/.vim/bundle/sparkup/sparkup.py	/^    short_tags = ()$/;"	v	class:Dialect
short_tags	vim/.vim/bundle/sparkup/sparkup.py	/^    short_tags = ()$/;"	v	class:XmlDialect
short_tags	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    short_tags = ($/;"	v	class:HtmlDialect
short_tags	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    short_tags = ()$/;"	v	class:Dialect
short_tags	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    short_tags = ()$/;"	v	class:XmlDialect
short_tags	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    short_tags = ($/;"	v	class:HtmlDialect
short_tags	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    short_tags = ()$/;"	v	class:Dialect
short_tags	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    short_tags = ()$/;"	v	class:XmlDialect
short_tags	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    short_tags = ($/;"	v	class:HtmlDialect
short_tags	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    short_tags = ()$/;"	v	class:Dialect
short_tags	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    short_tags = ()$/;"	v	class:XmlDialect
short_tags	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    short_tags = ($/;"	v	class:HtmlDialect
short_tags	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    short_tags = ()$/;"	v	class:Dialect
short_tags	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    short_tags = ()$/;"	v	class:XmlDialect
shortcuts	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    shortcuts = {}$/;"	v	class:Dialect
shortcuts	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    shortcuts = {}$/;"	v	class:XmlDialect
shortcuts	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    shortcuts = {}$/;"	v	class:Dialect
shortcuts	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    shortcuts = {}$/;"	v	class:XmlDialect
shortcuts	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    shortcuts = {}$/;"	v	class:Dialect
shortcuts	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    shortcuts = {}$/;"	v	class:XmlDialect
shortcuts	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    shortcuts = {}$/;"	v	class:Dialect
shortcuts	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    shortcuts = {}$/;"	v	class:XmlDialect
shortcuts	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    shortcuts = {}$/;"	v	class:Dialect
shortcuts	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    shortcuts = {}$/;"	v	class:XmlDialect
shortcuts	vim/.vim/bundle/sparkup/sparkup.py	/^    shortcuts = {}$/;"	v	class:Dialect
shortcuts	vim/.vim/bundle/sparkup/sparkup.py	/^    shortcuts = {}$/;"	v	class:XmlDialect
shortcuts	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    shortcuts = {}$/;"	v	class:Dialect
shortcuts	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    shortcuts = {}$/;"	v	class:XmlDialect
shortcuts	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    shortcuts = {}$/;"	v	class:Dialect
shortcuts	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    shortcuts = {}$/;"	v	class:XmlDialect
shortcuts	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    shortcuts = {}$/;"	v	class:Dialect
shortcuts	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    shortcuts = {}$/;"	v	class:XmlDialect
shortcuts	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    shortcuts = {}$/;"	v	class:Dialect
shortcuts	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    shortcuts = {}$/;"	v	class:XmlDialect
show	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def show$/;"	f	class:CommandT.quickfix
show_buffer_finder	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def show_buffer_finder$/;"	f	class:CommandT
show_buffer_keywords	vim/.vim/bundle/dash.vim/autoload/dash.vim	/^function! s:show_buffer_keywords() "{{{$/;"	f
show_cursor	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def show_cursor$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
show_file_finder	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def show_file_finder$/;"	f	class:CommandT
show_jump_finder	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def show_jump_finder$/;"	f	class:CommandT
show_mru_finder	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def show_mru_finder$/;"	f	class:CommandT
show_output	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^show_output() {$/;"	f
show_tag_finder	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def show_tag_finder$/;"	f	class:CommandT
sign	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:sign(status)$/;"	f
signal	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^import signal$/;"	i
silently_source_all_tmux_files	tmux/.tmux/plugins/tpm/scripts/source_plugins.sh	/^silently_source_all_tmux_files() {$/;"	f
sorted_matches_for	vim/.vim/bundle/command-t/ruby/command-t/finder.rb	/^    def sorted_matches_for(str, options = {})$/;"	f	class:CommandT.Finder
sorted_matches_for	vim/.vim/bundle/command-t/ruby/command-t/finder/mru_buffer_finder.rb	/^      def sorted_matches_for(str, options = {})$/;"	f	class:CommandT.Finder.MRUBufferFinder
source_plugins	tmux/.tmux/plugins/tpm/scripts/source_plugins.sh	/^source_plugins() {$/;"	f
source_plugins	tmux/.tmux/plugins/tpm/tpm	/^source_plugins() {$/;"	f
sparkup	vim/.vim/bundle/sparkup/sparkup-unittest.py	/^import sparkup$/;"	i
split_command	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def split_command$/;"	f	class:CommandT.quickfix
stack	vim/.vim/bundle/command-t/ruby/command-t/mru.rb	/^      def stack$/;"	f	class:CommandT.MRU
stage_info	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:stage_info(lnum) abort$/;"	f
start	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def start(self, options=None, str=None, ret=None):$/;"	m	class:Router
start	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def start(self, options=None, str=None, ret=None):$/;"	m	class:Router
start	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def start(self, options=None, str=None, ret=None):$/;"	m	class:Router
start	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def start(self, options=None, str=None, ret=None):$/;"	m	class:Router
start	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def start(self, options=None, str=None, ret=None):$/;"	m	class:Router
start	vim/.vim/bundle/sparkup/sparkup.py	/^    def start(self, options=None, str=None, ret=None):$/;"	m	class:Router
start	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def start(self, options=None, str=None, ret=None):$/;"	m	class:Router
start	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def start(self, options=None, str=None, ret=None):$/;"	m	class:Router
start	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def start(self, options=None, str=None, ret=None):$/;"	m	class:Router
start	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def start(self, options=None, str=None, ret=None):$/;"	m	class:Router
start_auto_restore_in_background	tmux/.tmux/plugins/tmux-continuum/continuum.tmux	/^start_auto_restore_in_background() {$/;"	f
start_iterm_and_run_tmux	tmux/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_iterm_start_tmux.sh	/^start_iterm_and_run_tmux() {$/;"	f
start_spinner	tmux/.tmux/plugins/tmux-resurrect/scripts/spinner_helpers.sh	/^start_spinner() {$/;"	f
start_terminal_and_run_tmux	tmux/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_terminal_start_tmux.sh	/^start_terminal_and_run_tmux() {$/;"	f
state_format	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^state_format() {$/;"	f
status	vim/.vim/bundle/command-t/vendor/vroom/scripts/respond.vroomfaker	/^  status = status or subprocess.call(command, shell=True)$/;"	v
status	vim/.vim/bundle/command-t/vendor/vroom/scripts/respond.vroomfaker	/^status = 0$/;"	v
status	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^  status = subprocess.call(rebuild(command), executable=shell, shell=True)$/;"	v
stop_spinner	tmux/.tmux/plugins/tmux-resurrect/scripts/spinner_helpers.sh	/^stop_spinner() {$/;"	f
stop_vagrant	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/run_tests	/^stop_vagrant() {$/;"	f
stop_vagrant	tmux/.tmux/plugins/tmux-resurrect/run_tests	/^stop_vagrant() {$/;"	f
stop_vagrant	tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^stop_vagrant() {$/;"	f
str	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    str = ''$/;"	v	class:Parser
str	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    str = ''$/;"	v	class:Token
str	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    str = ''$/;"	v	class:Parser
str	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    str = ''$/;"	v	class:Token
str	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    str = ''$/;"	v	class:Parser
str	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    str = ''$/;"	v	class:Token
str	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    str = ''$/;"	v	class:Parser
str	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    str = ''$/;"	v	class:Token
str	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    str = ''$/;"	v	class:Parser
str	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    str = ''$/;"	v	class:Token
str	vim/.vim/bundle/sparkup/sparkup.py	/^    str = ''$/;"	v	class:Parser
str	vim/.vim/bundle/sparkup/sparkup.py	/^    str = ''$/;"	v	class:Token
str	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    str = ''$/;"	v	class:Parser
str	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    str = ''$/;"	v	class:Token
str	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    str = ''$/;"	v	class:Parser
str	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    str = ''$/;"	v	class:Token
str	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    str = ''$/;"	v	class:Parser
str	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    str = ''$/;"	v	class:Token
str	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    str = ''$/;"	v	class:Parser
str	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    str = ''$/;"	v	class:Token
strip	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:strip(str)$/;"	f
stub_finder	vim/.vim/bundle/command-t/spec/command-t/controller_spec.rb	/^  def stub_finder(sorted_matches=[])$/;"	f
stub_match_window	vim/.vim/bundle/command-t/spec/command-t/controller_spec.rb	/^  def stub_match_window(selection)$/;"	f
stub_prompt	vim/.vim/bundle/command-t/spec/command-t/controller_spec.rb	/^  def stub_prompt(abbrev='')$/;"	f
stub_vim	vim/.vim/bundle/command-t/spec/command-t/controller_spec.rb	/^  def stub_vim(working_directory)$/;"	f
sub	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
subprocess	vim/.vim/bundle/L9/autoload/l9/async.py	/^import subprocess$/;"	i
subprocess	vim/.vim/bundle/command-t/vendor/vroom/scripts/respond.vroomfaker	/^import subprocess$/;"	i
subprocess	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^import subprocess$/;"	i
subprocess	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^import subprocess$/;"	i
subprocess	vim/.vim/bundle/command-t/vendor/vroom/vroom/color.py	/^import subprocess$/;"	i
subprocess	vim/.vim/bundle/command-t/vendor/vroom/vroom/neovim_mod.py	/^import subprocess$/;"	i
subprocess	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^import subprocess$/;"	i
suffix	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    suffix = ''$/;"	v	class:Parser
suffix	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    suffix = None$/;"	v	class:Element
suffix	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    suffix = ''$/;"	v	class:Parser
suffix	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    suffix = None$/;"	v	class:Element
suffix	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    suffix = ''$/;"	v	class:Parser
suffix	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    suffix = None$/;"	v	class:Element
suffix	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    suffix = ''$/;"	v	class:Parser
suffix	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    suffix = None$/;"	v	class:Element
suffix	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    suffix = ''$/;"	v	class:Parser
suffix	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    suffix = None$/;"	v	class:Element
suffix	vim/.vim/bundle/sparkup/sparkup.py	/^    suffix = ''$/;"	v	class:Parser
suffix	vim/.vim/bundle/sparkup/sparkup.py	/^    suffix = None$/;"	v	class:Element
suffix	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    suffix = ''$/;"	v	class:Parser
suffix	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    suffix = None$/;"	v	class:Element
suffix	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    suffix = ''$/;"	v	class:Parser
suffix	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    suffix = None$/;"	v	class:Element
suffix	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    suffix = ''$/;"	v	class:Parser
suffix	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    suffix = None$/;"	v	class:Element
suffix	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    suffix = ''$/;"	v	class:Parser
suffix	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    suffix = None$/;"	v	class:Element
supported_tmux_version_ok	tmux/.tmux/plugins/tmux-continuum/continuum.tmux	/^supported_tmux_version_ok() {$/;"	f
supported_tmux_version_ok	tmux/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh	/^supported_tmux_version_ok() {$/;"	f
supported_tmux_version_ok	tmux/.tmux/plugins/tmux-resurrect/scripts/helpers.sh	/^supported_tmux_version_ok() {$/;"	f
supported_tmux_version_ok	tmux/.tmux/plugins/tpm/tpm	/^supported_tmux_version_ok() {$/;"	f
symlink_internal_test_runner	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/setup	/^symlink_internal_test_runner() {$/;"	f
symlink_internal_test_runner	tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^symlink_internal_test_runner() {$/;"	f
symlink_test_helpers	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/setup	/^symlink_test_helpers() {$/;"	f
symlink_test_helpers	tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^symlink_test_helpers() {$/;"	f
symlink_user_test_runner	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/setup	/^symlink_user_test_runner() {$/;"	f
symlink_user_test_runner	tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^symlink_user_test_runner() {$/;"	f
sync	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:sync(bang, bundle) abort$/;"	f
synonyms	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    synonyms = {}$/;"	v	class:Dialect
synonyms	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    synonyms = {}$/;"	v	class:XmlDialect
synonyms	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    synonyms = {}$/;"	v	class:Dialect
synonyms	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    synonyms = {}$/;"	v	class:XmlDialect
synonyms	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    synonyms = {}$/;"	v	class:Dialect
synonyms	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    synonyms = {}$/;"	v	class:XmlDialect
synonyms	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    synonyms = {}$/;"	v	class:Dialect
synonyms	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    synonyms = {}$/;"	v	class:XmlDialect
synonyms	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    synonyms = {}$/;"	v	class:Dialect
synonyms	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    synonyms = {}$/;"	v	class:XmlDialect
synonyms	vim/.vim/bundle/sparkup/sparkup.py	/^    synonyms = {}$/;"	v	class:Dialect
synonyms	vim/.vim/bundle/sparkup/sparkup.py	/^    synonyms = {}$/;"	v	class:XmlDialect
synonyms	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    synonyms = {}$/;"	v	class:Dialect
synonyms	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    synonyms = {}$/;"	v	class:XmlDialect
synonyms	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    synonyms = {}$/;"	v	class:Dialect
synonyms	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    synonyms = {}$/;"	v	class:XmlDialect
synonyms	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    synonyms = {}$/;"	v	class:Dialect
synonyms	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    synonyms = {}$/;"	v	class:XmlDialect
synonyms	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    synonyms = {}$/;"	v	class:Dialect
synonyms	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    synonyms = {}$/;"	v	class:XmlDialect
sys	vim/.vim/bundle/command-t/vendor/vroom/scripts/respond.vroomfaker	/^import sys$/;"	i
sys	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^import sys$/;"	i
sys	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^import sys$/;"	i
sys	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^import sys$/;"	i
sys	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^import sys$/;"	i
sys	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import sys$/;"	i
sys	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^import sys$/;"	i
sys	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^import sys$/;"	i
sys	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^import sys$/;"	i
sys	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^import sys$/;"	i
sys	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^import sys$/;"	i
sys	vim/.vim/bundle/sparkup/sparkup-unittest.py	/^import sys$/;"	i
sys	vim/.vim/bundle/sparkup/sparkup.py	/^import sys$/;"	i
sys	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^import sys$/;"	i
sys	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^import sys$/;"	i
sys	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^import sys$/;"	i
sys	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^import sys$/;"	i
system	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:system(cmd) abort$/;"	f
tab_command	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def tab_command$/;"	f	class:CommandT.quickfix
tag_finder	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def tag_finder$/;"	f	class:CommandT.quickfix.ensure_appropriate_window_selection
taglist	vim/.vim/bundle/command-t/ruby/command-t/scanner/tag_scanner.rb	/^      def taglist$/;"	f	class:CommandT.Scanner.TagScanner.paths
teardown_helper	tmux/.tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^teardown_helper() {$/;"	f
tempfile	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^import tempfile$/;"	i
tempfile	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^import tempfile$/;"	i
template	tmux/.tmux/plugins/tmux-continuum/scripts/handle_tmux_automatic_start/osx_enable.sh	/^template() {$/;"	f
term	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def term$/;"	f	class:CommandT.quickfix.ensure_appropriate_window_selection
test	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^import vroom.test$/;"	i
test	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^import vroom.test$/;"	i
test	vim/.vim/bundle/command-t/vendor/vroom/vroom/command.py	/^import vroom.test$/;"	i
test	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^import vroom.test$/;"	i
test	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^import vroom.test$/;"	i
test	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import vroom.test$/;"	i
test	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^import vroom.test$/;"	i
test_custom_tpm_path	tmux/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^test_custom_tpm_path() {$/;"	f
test_default_tpm_path	tmux/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^test_default_tpm_path() {$/;"	f
test_files	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/tests/run_tests_in_isolation	/^test_files() {$/;"	f
test_files	tmux/.tmux/plugins/tmux-resurrect/tests/run_tests_in_isolation	/^test_files() {$/;"	f
test_legacy_and_new_syntax_for_plugin_installation_work_via_script	tmux/.tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^test_legacy_and_new_syntax_for_plugin_installation_work_via_script() {$/;"	f
test_legacy_and_new_syntax_for_plugin_installation_work_via_tmux_key_binding	tmux/.tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^test_legacy_and_new_syntax_for_plugin_installation_work_via_tmux_key_binding() {$/;"	f
test_multiple_plugins_installation_via_script	tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_multiple_plugins_installation_via_script() {$/;"	f
test_multiple_plugins_installation_via_tmux_key_binding	tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_multiple_plugins_installation_via_tmux_key_binding() {$/;"	f
test_non_existing_plugin_installation_via_script	tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_non_existing_plugin_installation_via_script() {$/;"	f
test_non_existing_plugin_installation_via_tmux_key_binding	tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_non_existing_plugin_installation_via_tmux_key_binding() {$/;"	f
test_plugin_installation_custom_dir_via_script	tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_custom_dir_via_script() {$/;"	f
test_plugin_installation_custom_dir_via_tmux_key_binding	tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_custom_dir_via_tmux_key_binding() {$/;"	f
test_plugin_installation_via_script	tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_via_script() {$/;"	f
test_plugin_installation_via_script	tmux/.tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^test_plugin_installation_via_script() {$/;"	f
test_plugin_installation_via_tmux_key_binding	tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_via_tmux_key_binding() {$/;"	f
test_plugin_installation_via_tmux_key_binding	tmux/.tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^test_plugin_installation_via_tmux_key_binding() {$/;"	f
test_plugin_installation_via_tmux_key_binding_set_option	tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_via_tmux_key_binding_set_option() {$/;"	f
test_plugin_sourcing	tmux/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^test_plugin_sourcing() {$/;"	f
test_plugin_uninstallation_via_script	tmux/.tmux/plugins/tpm/tests/test_plugin_clean.sh	/^test_plugin_uninstallation_via_script() {$/;"	f
test_plugin_uninstallation_via_tmux_key_binding	tmux/.tmux/plugins/tpm/tests/test_plugin_clean.sh	/^test_plugin_uninstallation_via_tmux_key_binding() {$/;"	f
test_plugin_update_via_script	tmux/.tmux/plugins/tpm/tests/test_plugin_update.sh	/^test_plugin_update_via_script() {$/;"	f
test_plugin_update_via_tmux_key_binding	tmux/.tmux/plugins/tpm/tests/test_plugin_update.sh	/^test_plugin_update_via_tmux_key_binding() {$/;"	f
test_plugins_installation_from_multiple_sourced_files_via_script	tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugins_installation_from_multiple_sourced_files_via_script() {$/;"	f
test_plugins_installation_from_multiple_sourced_files_via_tmux_key_binding	tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugins_installation_from_multiple_sourced_files_via_tmux_key_binding() {$/;"	f
test_plugins_installation_from_sourced_file_via_script	tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugins_installation_from_sourced_file_via_script() {$/;"	f
test_plugins_installation_from_sourced_file_via_tmux_key_binding	tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugins_installation_from_sourced_file_via_tmux_key_binding() {$/;"	f
test_unsuccessful_plugin_uninstallation_via_script	tmux/.tmux/plugins/tpm/tests/test_plugin_clean.sh	/^test_unsuccessful_plugin_uninstallation_via_script() {$/;"	f
text	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    text = ''$/;"	v	class:Element
text	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    text = ''$/;"	v	class:Token
text	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    text = ''$/;"	v	class:Element
text	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    text = ''$/;"	v	class:Token
text	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    text = ''$/;"	v	class:Element
text	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    text = ''$/;"	v	class:Token
text	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    text = ''$/;"	v	class:Element
text	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    text = ''$/;"	v	class:Token
text	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    text = ''$/;"	v	class:Element
text	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    text = ''$/;"	v	class:Token
text	vim/.vim/bundle/sparkup/sparkup.py	/^    text = ''$/;"	v	class:Element
text	vim/.vim/bundle/sparkup/sparkup.py	/^    text = ''$/;"	v	class:Token
text	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    text = ''$/;"	v	class:Element
text	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    text = ''$/;"	v	class:Token
text	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    text = ''$/;"	v	class:Element
text	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    text = ''$/;"	v	class:Token
text	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    text = ''$/;"	v	class:Element
text	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    text = ''$/;"	v	class:Token
text	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    text = ''$/;"	v	class:Element
text	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    text = ''$/;"	v	class:Token
thread_args_t	vim/.vim/bundle/command-t/ruby/command-t/matcher.c	/^} thread_args_t;$/;"	t	typeref:struct:__anon3	file:
thread_count	vim/.vim/bundle/command-t/ruby/command-t/matcher.c	/^    int thread_count;$/;"	m	struct:__anon3	file:
thread_index	vim/.vim/bundle/command-t/ruby/command-t/matcher.c	/^    int thread_index;$/;"	m	struct:__anon3	file:
threading	vim/.vim/bundle/L9/autoload/l9/async.py	/^import threading$/;"	i
throw	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
time	vim/.vim/bundle/command-t/vendor/vroom/vroom/neovim_mod.py	/^import time$/;"	i
time	vim/.vim/bundle/command-t/vendor/vroom/vroom/vim.py	/^import time$/;"	i
timerBegin	vim/.vim/bundle/L9/plugin/l9.vim	/^  function s:timerBegin(tag)$/;"	f
timerDump	vim/.vim/bundle/L9/plugin/l9.vim	/^  function s:timerDump()$/;"	f
timerStop	vim/.vim/bundle/L9/plugin/l9.vim	/^  function s:timerStop()$/;"	f
tlist_pyrex_settings	vim/.vim/plugin/taglist.vim	/^let tlist_pyrex_settings='python;c:classe;m:memder;f:function'$/;"	v
tmux_default_command	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^tmux_default_command() {$/;"	f
tmux_echo	tmux/.tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^tmux_echo() {$/;"	f
tmux_socket	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^tmux_socket() {$/;"	f
tmux_version_int	tmux/.tmux/plugins/tmux-continuum/scripts/check_tmux_version.sh	/^tmux_version_int() {$/;"	f
tmux_version_int	tmux/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^tmux_version_int() {$/;"	f
tmux_version_int	tmux/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^tmux_version_int() {$/;"	f
toggle_focus	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def toggle_focus$/;"	f	class:CommandT.quickfix
toggle_window_zoom	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^toggle_window_zoom() {$/;"	f
tokens	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    tokens = []$/;"	v	class:Parser
tokens	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    tokens = []$/;"	v	class:Parser
tokens	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    tokens = []$/;"	v	class:Parser
tokens	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    tokens = []$/;"	v	class:Parser
tokens	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    tokens = []$/;"	v	class:Parser
tokens	vim/.vim/bundle/sparkup/sparkup.py	/^    tokens = []$/;"	v	class:Parser
tokens	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    tokens = []$/;"	v	class:Parser
tokens	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    tokens = []$/;"	v	class:Parser
tokens	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    tokens = []$/;"	v	class:Parser
tokens	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    tokens = []$/;"	v	class:Parser
top	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.messages  # pylint: disable-msg=g-import-not-at-top$/;"	i
top	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.shell  # pylint: disable-msg=g-import-not-at-top$/;"	i
touch	vim/.vim/bundle/command-t/ruby/command-t/mru.rb	/^      def touch$/;"	f	class:CommandT.MRU
tpm_path	tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^tpm_path() {$/;"	f
tpm_path_set	tmux/.tmux/plugins/tpm/tpm	/^tpm_path_set() {$/;"	f
tpm_plugins_list_helper	tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^tpm_plugins_list_helper() {$/;"	f
traceback	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^import traceback$/;"	i
traceback	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^import traceback$/;"	i
truncated_match	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def truncated_match(str)$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
type	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    type = 0$/;"	v	class:Token
type	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    type = 0$/;"	v	class:Token
type	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    type = 0$/;"	v	class:Token
type	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    type = 0$/;"	v	class:Token
type	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    type = 0$/;"	v	class:Token
type	vim/.vim/bundle/sparkup/sparkup.py	/^    type = 0$/;"	v	class:Token
type	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    type = 0$/;"	v	class:Token
type	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    type = 0$/;"	v	class:Token
type	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    type = 0$/;"	v	class:Token
type	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    type = 0$/;"	v	class:Token
undo	tmux/.tmux/plugins/tmux-resurrect/lib/tmux-test/setup	/^undo() {$/;"	f
undo	tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^undo() {$/;"	f
unfocus	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def unfocus$/;"	f	class:CommandT.MatchWindow
unfocus	vim/.vim/bundle/command-t/ruby/command-t/prompt.rb	/^    def unfocus$/;"	f	class:CommandT.Prompt
unload	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def unload$/;"	f	class:CommandT.quickfix
unload	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def unload$/;"	f	class:CommandT.MatchWindow
unlock	vim/.vim/bundle/command-t/ruby/command-t/match_window.rb	/^    def unlock$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
unsupported_version_message	tmux/.tmux/plugins/tmux-resurrect/scripts/check_tmux_version.sh	/^unsupported_version_message() {$/;"	f
unsupported_version_message	tmux/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^unsupported_version_message() {$/;"	f
update	tmux/.tmux/plugins/tpm/scripts/update_plugin.sh	/^update() {$/;"	f
update_all	tmux/.tmux/plugins/tpm/scripts/update_plugin.sh	/^update_all() {$/;"	f
update_plugin_prompt	tmux/.tmux/plugins/tpm/bindings/update_plugins	/^update_plugin_prompt() {$/;"	f
update_plugins	tmux/.tmux/plugins/tpm/scripts/update_plugin.sh	/^update_plugins() {$/;"	f
upload	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptuploader.rb	/^    def upload(script_def)$/;"	f	class:login
used?	vim/.vim/bundle/command-t/ruby/command-t/mru.rb	/^      def used?(buffer)$/;"	f	class:CommandT.MRU
verify_tpm_path_permissions	tmux/.tmux/plugins/tpm/scripts/install_plugins.sh	/^verify_tpm_path_permissions() {$/;"	f
version	vim/.vim/bundle/command-t/vendor/vroom/setup.py	/^    version='0.10.0',$/;"	v
version	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    def version(self):$/;"	m	class:Router
version	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^version = "0.1.4"$/;"	v
version	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    def version(self):$/;"	m	class:Router
version	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^version = "0.1.4"$/;"	v
version	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    def version(self):$/;"	m	class:Router
version	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^version = "0.1.4"$/;"	v
version	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    def version(self):$/;"	m	class:Router
version	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^version = "0.1.4"$/;"	v
version	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    def version(self):$/;"	m	class:Router
version	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^version = "0.1.4"$/;"	v
version	vim/.vim/bundle/sparkup/sparkup.py	/^    def version(self):$/;"	m	class:Router
version	vim/.vim/bundle/sparkup/sparkup.py	/^version = "0.1.4"$/;"	v
version	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    def version(self):$/;"	m	class:Router
version	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^version = "0.1.4"$/;"	v
version	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    def version(self):$/;"	m	class:Router
version	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^version = "0.1.4"$/;"	v
version	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    def version(self):$/;"	m	class:Router
version	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^version = "0.1.4"$/;"	v
version	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    def version(self):$/;"	m	class:Router
version	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^version = "0.1.4"$/;"	v
view_changelog	vim/.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:view_changelog()$/;"	f
view_log	vim/.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:view_log()$/;"	f
vim	vim/.vim/bundle/L9/autoload/l9/async.py	/^import vim$/;"	i
vim	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^import vroom.vim$/;"	i
vim	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^import vroom.vim$/;"	i
vim	vim/.vim/bundle/command-t/vendor/vroom/vroom/environment.py	/^import vroom.vim$/;"	i
vim	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^import vroom.vim$/;"	i
vim	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import vroom.vim$/;"	i
vim_session_file_exists	tmux/.tmux/plugins/tmux-resurrect/strategies/vim_session.sh	/^vim_session_file_exists() {$/;"	f
vroom	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^import vroom.shell$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^import vroom.test$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/scripts/shell.vroomfaker	/^import vroom.vim$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^import vroom.args$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^import vroom.color$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^import vroom.output$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^import vroom.runner$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^import vroom.vim$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^import vroom$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/actions.py	/^import vroom.controls$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^import vroom.color$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^import vroom.messages$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/args.py	/^import vroom.shell$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^import vroom.controls$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/buffer.py	/^import vroom.test$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/command.py	/^import vroom.test$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.messages  # pylint: disable-msg=g-import-not-at-top$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^  import vroom.shell  # pylint: disable-msg=g-import-not-at-top$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/controls.py	/^import vroom$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/environment.py	/^        import vroom.neovim_mod as neovim_mod$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/environment.py	/^import vroom.buffer$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/environment.py	/^import vroom.messages$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/environment.py	/^import vroom.output$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/environment.py	/^import vroom.shell$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/environment.py	/^import vroom.vim$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^import vroom$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^import vroom.controls$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/messages.py	/^import vroom.test$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^import vroom$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^import vroom.buffer$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^import vroom.color$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^import vroom.controls$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^import vroom.messages$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^import vroom.shell$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^import vroom.test$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/output.py	/^import vroom.vim$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import vroom$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import vroom.actions$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import vroom.args$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import vroom.buffer$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import vroom.command$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import vroom.environment$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import vroom.output$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import vroom.shell$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import vroom.test$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/runner.py	/^import vroom.vim$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^import vroom$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^import vroom.controls$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/shell.py	/^import vroom.test$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^import vroom$/;"	i
vroom	vim/.vim/bundle/command-t/vendor/vroom/vroom/test.py	/^import vroom.controls$/;"	i
vsplit_command	vim/.vim/bundle/command-t/ruby/command-t/controller.rb	/^    def vsplit_command$/;"	f	class:CommandT.quickfix
vundle#begin	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^func! vundle#begin(...) abort$/;"	f
vundle#bundle_dir	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^let vundle#bundle_dir = expand('$HOME\/.vim\/bundle', 1)$/;"	v
vundle#bundles	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^let vundle#bundles = []$/;"	v
vundle#config#activate_bundles	vim/.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#activate_bundles()$/;"	f
vundle#config#bundle	vim/.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#bundle(arg, ...)$/;"	f
vundle#config#init	vim/.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#init()$/;"	f
vundle#config#init_bundle	vim/.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#init_bundle(name, opts)$/;"	f
vundle#config#require	vim/.vim/bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#require(bundles) abort$/;"	f
vundle#end	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^func! vundle#end(...) abort$/;"	f
vundle#installer#clean	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#clean(bang) abort$/;"	f
vundle#installer#delete	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#delete(bang, dir_name) abort$/;"	f
vundle#installer#docs	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#docs() abort$/;"	f
vundle#installer#helptags	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#helptags(bundles) abort$/;"	f
vundle#installer#install	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#install(bang, name) abort$/;"	f
vundle#installer#install_and_require	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#install_and_require(bang, name) abort$/;"	f
vundle#installer#list	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#list(bang) abort$/;"	f
vundle#installer#new	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#new(bang, ...) abort$/;"	f
vundle#installer#run	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#run(func_name, name, ...) abort$/;"	f
vundle#installer#shellesc	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#shellesc(cmd) abort$/;"	f
vundle#installer#shellesc_cd	vim/.vim/bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#shellesc_cd(cmd) abort$/;"	f
vundle#lazy_load	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^let vundle#lazy_load = 0$/;"	v
vundle#log	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^let vundle#log = []$/;"	v
vundle#rc	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^func! vundle#rc(...) abort$/;"	f
vundle#scripts#all	vim/.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#all(bang, ...)$/;"	f
vundle#scripts#bundle_names	vim/.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#bundle_names(names)$/;"	f
vundle#scripts#complete	vim/.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#complete(a,c,d)$/;"	f
vundle#scripts#reload	vim/.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#reload() abort$/;"	f
vundle#scripts#view	vim/.vim/bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#view(title, headers, results)$/;"	f
vundle#updated_bundles	vim/.vim/bundle/Vundle.vim/autoload/vundle.vim	/^let vundle#updated_bundles = []$/;"	v
warn	vim/.vim/bundle/command-t/ruby/command-t/stub.rb	/^    def warn(*msg)$/;"	f	class:CommandT.Stub
warn	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str) abort$/;"	f
watchman_append	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^void watchman_append(watchman_t *w, const char *data, size_t len) {$/;"	f
watchman_array_marker	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^static const char watchman_array_marker  = WATCHMAN_ARRAY_MARKER;$/;"	v	file:
watchman_dump	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^void watchman_dump(watchman_t *w, VALUE serializable) {$/;"	f
watchman_dump_array	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^void watchman_dump_array(watchman_t *w, VALUE array) {$/;"	f
watchman_dump_double	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^void watchman_dump_double(watchman_t *w, double num) {$/;"	f
watchman_dump_hash	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^void watchman_dump_hash(watchman_t *w, VALUE hash) {$/;"	f
watchman_dump_hash_iterator	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^int watchman_dump_hash_iterator(VALUE key, VALUE value, VALUE data) {$/;"	f
watchman_dump_int	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^void watchman_dump_int(watchman_t *w, int64_t num) {$/;"	f
watchman_dump_string	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^void watchman_dump_string(watchman_t *w, VALUE string) {$/;"	f
watchman_false	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^static const char watchman_false         = WATCHMAN_FALSE;$/;"	v	file:
watchman_free	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^void watchman_free(watchman_t *w) {$/;"	f
watchman_hash_marker	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^static const char watchman_hash_marker   = WATCHMAN_HASH_MARKER;$/;"	v	file:
watchman_init	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^watchman_t *watchman_init() {$/;"	f
watchman_load	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^VALUE watchman_load(char **ptr, char *end) {$/;"	f
watchman_load_array	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^VALUE watchman_load_array(char **ptr, char *end) {$/;"	f
watchman_load_array_header	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^int64_t watchman_load_array_header(char **ptr, char *end) {$/;"	f
watchman_load_double	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^double watchman_load_double(char **ptr, char *end) {$/;"	f
watchman_load_hash	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^VALUE watchman_load_hash(char **ptr, char *end) {$/;"	f
watchman_load_int	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^int64_t watchman_load_int(char **ptr, char *end) {$/;"	f
watchman_load_string	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^VALUE watchman_load_string(char **ptr, char *end) {$/;"	f
watchman_load_template	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^VALUE watchman_load_template(char **ptr, char *end) {$/;"	f
watchman_nil	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^static const char watchman_nil           = WATCHMAN_NIL;$/;"	v	file:
watchman_raise_system_call_error	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^void watchman_raise_system_call_error(int number) {$/;"	f
watchman_string_marker	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^static const char watchman_string_marker = WATCHMAN_STRING_MARKER;$/;"	v	file:
watchman_t	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^} watchman_t;$/;"	t	typeref:struct:__anon4	file:
watchman_true	vim/.vim/bundle/command-t/ruby/command-t/watchman.c	/^static const char watchman_true          = WATCHMAN_TRUE;$/;"	v	file:
wild_ignore	vim/.vim/bundle/command-t/ruby/command-t/scanner/file_scanner.rb	/^      def wild_ignore$/;"	f	class:CommandT.Scanner.FileScanner
window_exists	tmux/.tmux/plugins/tmux-resurrect/scripts/restore.sh	/^window_exists() {$/;"	f
window_format	tmux/.tmux/plugins/tmux-resurrect/scripts/save.sh	/^window_format() {$/;"	f
winshell	vim/.vim/bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:winshell() abort$/;"	f
with_args	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptdef.rb	/^        def with_args(args)$/;"	f	class:VimScriptDef
with_args	vim/.vim/bundle/command-t/vendor/vimscriptuploader/vimscriptuploader.rb	/^        def with_args(args)$/;"	f	class:VimScriptUploader
with_statement	vim/.vim/bundle/L9/autoload/l9/async.py	/^from __future__ import with_statement$/;"	i
writers	vim/.vim/bundle/command-t/vendor/vroom/scripts/vroom	/^writers = []$/;"	v
z	vim/.vim/bundle/sparkup/TextMate/Sparkup.tmbundle/Support/sparkup.py	/^    z = Router()$/;"	v
z	vim/.vim/bundle/sparkup/ftplugin/html/sparkup.py	/^    z = Router()$/;"	v
z	vim/.vim/bundle/sparkup/ftplugin/htmldjango/sparkup.py	/^    z = Router()$/;"	v
z	vim/.vim/bundle/sparkup/ftplugin/smarty/sparkup.py	/^    z = Router()$/;"	v
z	vim/.vim/bundle/sparkup/ftplugin/xml/sparkup.py	/^    z = Router()$/;"	v
z	vim/.vim/bundle/sparkup/sparkup.py	/^    z = Router()$/;"	v
z	vim/.vim/bundle/sparkup/vim/ftplugin/html/sparkup.py	/^    z = Router()$/;"	v
z	vim/.vim/bundle/sparkup/vim/ftplugin/htmldjango/sparkup.py	/^    z = Router()$/;"	v
z	vim/.vim/bundle/sparkup/vim/ftplugin/smarty/sparkup.py	/^    z = Router()$/;"	v
z	vim/.vim/bundle/sparkup/vim/ftplugin/xml/sparkup.py	/^    z = Router()$/;"	v
